"""Initial migration

Revision ID: f21f5e560227
Revises: 
Create Date: 2025-07-07 16:41:53.317066

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f21f5e560227'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('door_number', sa.String(length=50), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('pdf_templates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('original_filename', sa.String(length=255), nullable=False),
    sa.Column('stored_filename', sa.String(length=255), nullable=False),
    sa.Column('upload_date', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('stored_filename')
    )
    op.create_table('system_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('action_type', sa.String(length=50), nullable=False),
    sa.Column('entity_type', sa.String(length=50), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=True),
    sa.Column('entity_name', sa.String(length=255), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('app_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('default_pdf_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['default_pdf_id'], ['pdf_templates.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('racks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('total_units', sa.Integer(), nullable=False),
    sa.Column('orientation', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'location_id', name='_name_location_uc')
    )
    op.create_table('patch_panels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('row_in_rack', sa.Integer(), nullable=True),
    sa.Column('rack_id', sa.Integer(), nullable=True),
    sa.Column('units_occupied', sa.Integer(), nullable=False),
    sa.Column('total_ports', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['rack_id'], ['racks.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('pcs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('ip_address', sa.String(length=100), nullable=True),
    sa.Column('username', sa.String(length=100), nullable=True),
    sa.Column('in_domain', sa.Boolean(), nullable=False),
    sa.Column('operating_system', sa.String(length=100), nullable=True),
    sa.Column('model', sa.String(length=255), nullable=True),
    sa.Column('office', sa.String(length=100), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('multi_port', sa.Boolean(), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('usage', sa.String(length=100), nullable=True),
    sa.Column('row_in_rack', sa.Integer(), nullable=True),
    sa.Column('rack_id', sa.Integer(), nullable=True),
    sa.Column('units_occupied', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['rack_id'], ['racks.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('switches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('ip_address', sa.String(length=100), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('row_in_rack', sa.Integer(), nullable=True),
    sa.Column('rack_id', sa.Integer(), nullable=True),
    sa.Column('units_occupied', sa.Integer(), nullable=False),
    sa.Column('total_ports', sa.Integer(), nullable=False),
    sa.Column('source_port', sa.String(length=100), nullable=True),
    sa.Column('model', sa.String(length=100), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('usage', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['rack_id'], ['racks.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('connections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pc_id', sa.Integer(), nullable=False),
    sa.Column('switch_id', sa.Integer(), nullable=False),
    sa.Column('switch_port', sa.String(length=50), nullable=False),
    sa.Column('is_switch_port_up', sa.Boolean(), nullable=False),
    sa.Column('cable_color', sa.String(length=50), nullable=True),
    sa.Column('cable_label', sa.String(length=100), nullable=True),
    sa.Column('wall_point_label', sa.String(length=100), nullable=True),
    sa.Column('wall_point_cable_color', sa.String(length=50), nullable=True),
    sa.Column('wall_point_cable_label', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['pc_id'], ['pcs.id'], ),
    sa.ForeignKeyConstraint(['switch_id'], ['switches.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('connection_hops',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('connection_id', sa.Integer(), nullable=False),
    sa.Column('patch_panel_id', sa.Integer(), nullable=False),
    sa.Column('patch_panel_port', sa.String(length=50), nullable=False),
    sa.Column('is_port_up', sa.Boolean(), nullable=False),
    sa.Column('sequence', sa.Integer(), nullable=False),
    sa.Column('cable_color', sa.String(length=50), nullable=True),
    sa.Column('cable_label', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['connection_id'], ['connections.id'], ),
    sa.ForeignKeyConstraint(['patch_panel_id'], ['patch_panels.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('connection_hops')
    op.drop_table('connections')
    op.drop_table('switches')
    op.drop_table('pcs')
    op.drop_table('patch_panels')
    op.drop_table('racks')
    op.drop_table('app_settings')
    op.drop_table('system_logs')
    op.drop_table('pdf_templates')
    op.drop_table('locations')
    # ### end Alembic commands ###
