# backend/Dockerfile.backend
# Dockerfile for the Python Flask backend application.

# Use an official Python runtime as a parent image
FROM python:3.9-slim-buster

# Set the working directory in the container
WORKDIR /app

# Copy the requirements file from the backend directory (relative to build context)
COPY backend/requirements.txt backend/

# Install any needed packages specified in requirements.txt
RUN pip install --no-cache-dir -r backend/requirements.txt

# Install netcat for health checks if needed (though not used in this simplified start.sh anymore)
# If you want to keep the wait loop in start.sh, keep this line. Otherwise, it can be removed.
RUN apt-get update && apt-get install -y netcat-openbsd && rm -rf /var/lib/apt/lists/*

# Copy the entire backend application code into /app/backend
COPY backend/. backend/

# Create instance directory for SQLite DB inside backend folder
RUN mkdir -p backend/instance

# Copy start.sh from the build context root (project root)
# and make it executable. Place it in /usr/local/bin/ as it's in PATH.
COPY start.sh /usr/local/bin/start.sh
RUN chmod +x /usr/local/bin/start.sh

# Expose the port that Flask will run on
EXPOSE 5000

# Command to run the startup script
CMD ["start.sh"]
