{"ast":null,"code":"var _jsxFileName = \"/app/src/App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js\n// This is the main React component for the frontend application.\n// It orchestrates the display of various sections (Connections, PCs, Switches).\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport ConnectionList from \"./components/ConnectionList\";\nimport ConnectionForm from \"./components/ConnectionForm\";\nimport PortStatusModal from \"./components/PortStatusModal\";\nimport PcList from \"./components/PcList\"; // New: Import PcList component\nimport SwitchList from \"./components/SwitchList\"; // New: Import SwitchList component\n\n// Base URL for the backend API. When running in Docker Compose,\n// 'backend' is the service name and resolves to the backend container's IP.\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.NODE_ENV === \"production\" ? \"/api\" // In production, proxy requests through Nginx or similar\n: \"http://localhost:5004\"; // For local development with 'npm start'\n\nfunction App() {\n  _s();\n  // State variables to store fetched data\n  const [pcs, setPcs] = useState([]);\n  const [patchPanels, setPatchPanels] = useState([]);\n  const [switches, setSwitches] = useState([]);\n  const [connections, setConnections] = useState([]);\n\n  // State for current active tab\n  const [activeTab, setActiveTab] = useState(\"connections\"); // 'connections', 'pcs', 'switches'\n\n  const [message, setMessage] = useState(\"\"); // General message for success/error\n  const [isMessageVisible, setIsMessageVisible] = useState(false); // Controls message visibility\n\n  // State for Port Status Modal\n  const [showPortStatusModal, setShowPortStatusModal] = useState(false);\n  const [portStatusData, setPortStatusData] = useState(null);\n  const [modalEntityType, setModalEntityType] = useState(null);\n  const [modalEntityId, setModalEntityId] = useState(null);\n\n  // Function to show a message temporarily\n  const showMessage = (msg, duration = 3000) => {\n    setMessage(msg);\n    setIsMessageVisible(true);\n    setTimeout(() => {\n      setIsMessageVisible(false);\n      setMessage(\"\");\n    }, duration);\n  };\n\n  // Memoized function to fetch data from the backend\n  const fetchData = useCallback(async (endpoint, setter) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/${endpoint}`);\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setter(data);\n    } catch (error) {\n      console.error(`Failed to fetch ${endpoint}:`, error);\n      showMessage(`Error fetching ${endpoint}: ${error.message}`, 5000);\n    }\n  }, []);\n\n  // Fetch all initial data when the component mounts\n  useEffect(() => {\n    fetchData(\"pcs\", setPcs);\n    fetchData(\"patch_panels\", setPatchPanels);\n    fetchData(\"switches\", setSwitches);\n    fetchData(\"connections\", setConnections);\n  }, [fetchData]);\n\n  // Handle adding a new connection\n  const handleAddConnection = async newConnectionData => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/connections`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newConnectionData)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      fetchData(\"connections\", setConnections);\n      showMessage(\"Connection added successfully!\");\n    } catch (error) {\n      console.error(\"Error adding connection:\", error);\n      showMessage(`Error adding connection: ${error.message}`, 8000);\n    }\n  };\n\n  // Handle updating an existing connection\n  const handleUpdateConnection = async (id, updatedConnectionData) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/connections/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(updatedConnectionData)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      fetchData(\"connections\", setConnections);\n      showMessage(\"Connection updated successfully!\");\n    } catch (error) {\n      console.error(\"Error updating connection:\", error);\n      showMessage(`Error updating connection: ${error.message}`, 8000);\n    }\n  };\n\n  // Handle deleting a connection\n  const handleDeleteConnection = async id => {\n    const confirmed = window.confirm(\"Are you sure you want to delete this connection?\");\n    if (!confirmed) {\n      return;\n    }\n    try {\n      const response = await fetch(`${API_BASE_URL}/connections/${id}`, {\n        method: \"DELETE\"\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      setConnections(prev => prev.filter(conn => conn.id !== id));\n      showMessage(\"Connection deleted successfully!\");\n    } catch (error) {\n      console.error(\"Error deleting connection:\", error);\n      showMessage(`Error deleting connection: ${error.message}`, 5000);\n    }\n  };\n\n  // Handle editing a connection (set the connection to be edited in state)\n  const handleEditConnection = connection => {\n    const formattedHops = connection.hops.map(hop => ({\n      patch_panel_id: hop.patch_panel.id,\n      patch_panel_port: hop.patch_panel_port,\n      is_port_up: hop.is_port_up\n    }));\n    // Note: editingConnection is managed by ConnectionForm now\n    // Passing this up just to trigger the form to open/populate\n    // A more robust solution might use a shared state or context for editing.\n  };\n\n  // Function to add a new PC, Patch Panel, or Switch\n  const handleAddEntity = async (type, data) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/${type}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const newEntity = await response.json();\n      if (type === \"pcs\") setPcs(prev => [...prev, newEntity]);\n      if (type === \"patch_panels\") setPatchPanels(prev => [...prev, newEntity]);\n      if (type === \"switches\") setSwitches(prev => [...prev, newEntity]);\n      showMessage(`${type.slice(0, -1).toUpperCase()} added successfully!`);\n      // Re-fetch data relevant to selection dropdowns\n      if (type === \"patch_panels\") fetchData(\"patch_panels\", setPatchPanels);\n      if (type === \"switches\") fetchData(\"switches\", setSwitches);\n      if (type === \"pcs\") fetchData(\"pcs\", setPcs);\n    } catch (error) {\n      console.error(`Error adding ${type}:`, error);\n      showMessage(`Error adding ${type}: ${error.message}`, 5000);\n    }\n  };\n\n  // Function to update an existing PC, Patch Panel, or Switch\n  const handleUpdateEntity = async (type, id, data) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/${type}/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const updatedEntity = await response.json();\n      if (type === \"pcs\") setPcs(prev => prev.map(item => item.id === id ? updatedEntity : item));\n      if (type === \"patch_panels\") setPatchPanels(prev => prev.map(item => item.id === id ? updatedEntity : item));\n      if (type === \"switches\") setSwitches(prev => prev.map(item => item.id === id ? updatedEntity : item));\n      showMessage(`${type.slice(0, -1).toUpperCase()} updated successfully!`);\n      // Re-fetch connections as well, in case associated entity data has changed\n      fetchData(\"connections\", setConnections);\n    } catch (error) {\n      console.error(`Error updating ${type}:`, error);\n      showMessage(`Error updating ${type}: ${error.message}`, 5000);\n    }\n  };\n\n  // Function to delete a PC, Patch Panel, or Switch\n  const handleDeleteEntity = async (type, id) => {\n    const confirmed = window.confirm(`Are you sure you want to delete this ${type.slice(0, -1)}? This will also delete associated connections.`);\n    if (!confirmed) {\n      return;\n    }\n    try {\n      const response = await fetch(`${API_BASE_URL}/${type}/${id}`, {\n        method: \"DELETE\"\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      if (type === \"pcs\") setPcs(prev => prev.filter(item => item.id !== id));\n      if (type === \"patch_panels\") setPatchPanels(prev => prev.filter(item => item.id !== id));\n      if (type === \"switches\") setSwitches(prev => prev.filter(item => item.id !== id));\n      showMessage(`${type.slice(0, -1).toUpperCase()} deleted successfully!`);\n      // Re-fetch connections as well, as some might have been deleted due to cascade\n      fetchData(\"connections\", setConnections);\n    } catch (error) {\n      console.error(`Error deleting ${type}:`, error);\n      showMessage(`Error deleting ${type}: ${error.message}`, 5000);\n    }\n  };\n\n  // Function to open the port status modal\n  const handleShowPortStatus = async (entityType, entityId) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/${entityType}/${entityId}/ports`);\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setPortStatusData(data);\n      setModalEntityType(entityType);\n      setModalEntityId(entityId);\n      setShowPortStatusModal(true);\n    } catch (error) {\n      console.error(`Failed to fetch ${entityType} port status:`, error);\n      showMessage(`Error fetching port status: ${error.message}`, 5000);\n    }\n  };\n  const handleClosePortStatusModal = () => {\n    setShowPortStatusModal(false);\n    setPortStatusData(null);\n    setModalEntityType(null);\n    setModalEntityId(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-gray-100 to-blue-200 font-inter p-4 sm:p-8\",\n    children: [isMessageVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed top-4 left-1/2 -translate-x-1/2 bg-blue-500 text-white px-6 py-3 rounded-lg shadow-lg z-50 animate-fade-in-down\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 9\n    }, this), showPortStatusModal && portStatusData && /*#__PURE__*/_jsxDEV(PortStatusModal, {\n      isOpen: showPortStatusModal,\n      onClose: handleClosePortStatusModal,\n      data: portStatusData,\n      entityType: modalEntityType,\n      entityId: modalEntityId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"mb-8 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-extrabold text-blue-800 tracking-tight sm:text-5xl\",\n        children: \"Network Device Documentation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-2 text-lg text-gray-600\",\n        children: \"Track your network connections from PC to Patch Panel to Switch with ease.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-6xl mx-auto bg-white rounded-xl shadow-lg p-6 sm:p-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex border-b border-gray-200 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `py-3 px-6 text-lg font-medium ${activeTab === \"connections\" ? \"border-b-4 border-blue-600 text-blue-800\" : \"text-gray-600 hover:text-blue-600\"}`,\n          onClick: () => setActiveTab(\"connections\"),\n          children: \"Connections\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `py-3 px-6 text-lg font-medium ${activeTab === \"pcs\" ? \"border-b-4 border-blue-600 text-blue-800\" : \"text-gray-600 hover:text-blue-600\"}`,\n          onClick: () => setActiveTab(\"pcs\"),\n          children: \"PCs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `py-3 px-6 text-lg font-medium ${activeTab === \"switches\" ? \"border-b-4 border-blue-600 text-blue-800\" : \"text-gray-600 hover:text-blue-600\"}`,\n          onClick: () => setActiveTab(\"switches\"),\n          children: \"Switches\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `py-3 px-6 text-lg font-medium ${activeTab === \"patch_panels\" ? \"border-b-4 border-blue-600 text-blue-800\" : \"text-gray-600 hover:text-blue-600\"}`,\n          onClick: () => setActiveTab(\"patch_panels\"),\n          children: \"Patch Panels\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), activeTab === \"connections\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"mb-10 p-6 bg-blue-50 rounded-lg border border-blue-200 shadow-inner\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-bold text-blue-700 mb-4\",\n            children: \"Add/Edit Connection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ConnectionForm, {\n            pcs: pcs,\n            patchPanels: patchPanels,\n            switches: switches,\n            onAddConnection: handleAddConnection,\n            onUpdateConnection: handleUpdateConnection\n            // No longer passing editingConnection state directly from App.js\n            // ConnectionForm manages its own editing state or receives initial editing data\n            ,\n            editingConnection: null // Set to null or a dedicated state for the form if needed\n            ,\n            setEditingConnection: () => {} // Placeholder, as form manages internally for new/edit flow\n            ,\n            onAddEntity: handleAddEntity,\n            onShowPortStatus: handleShowPortStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-bold text-blue-700 mb-6\",\n            children: \"All Connections\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ConnectionList, {\n            connections: connections // Pass all connections, let ConnectionList handle its own search/filter\n            ,\n            onDelete: handleDeleteConnection,\n            onEdit: handleEditConnection\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 15\n          }, this), connections.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-center text-gray-500 text-lg mt-8\",\n            children: \"No connections found. Start by adding one above.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), activeTab === \"pcs\" && /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold text-blue-700 mb-6\",\n          children: \"All PCs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PcList, {\n          pcs: pcs,\n          onAddEntity: handleAddEntity,\n          onUpdateEntity: handleUpdateEntity,\n          onDeleteEntity: handleDeleteEntity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 11\n      }, this), activeTab === \"switches\" && /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold text-blue-700 mb-6\",\n          children: \"All Switches\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SwitchList, {\n          switches: switches,\n          onAddEntity: handleAddEntity,\n          onUpdateEntity: handleUpdateEntity,\n          onDeleteEntity: handleDeleteEntity,\n          onShowPortStatus: handleShowPortStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 11\n      }, this), activeTab === \"patch_panels\" && /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold text-blue-700 mb-6\",\n          children: \"All Patch Panels\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg shadow-md p-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white p-5 rounded-lg shadow-sm border border-gray-100 mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold text-gray-700 mb-3\",\n              children: \"Add New Patch Panel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: e => {\n                e.preventDefault();\n                const name = e.target.name.value;\n                const location = e.target.location.value;\n                const totalPorts = parseInt(e.target.totalPorts.value);\n                handleAddEntity(\"patch_panels\", {\n                  name,\n                  location,\n                  total_ports: totalPorts\n                });\n                e.target.reset(); // Clear form\n              },\n              className: \"space-y-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"name\",\n                placeholder: \"Patch Panel Name\",\n                className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"location\",\n                placeholder: \"Location (Optional)\",\n                className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                name: \"totalPorts\",\n                placeholder: \"Total Ports (e.g., 24)\",\n                className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\",\n                min: \"1\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"w-full bg-green-500 text-white p-2 rounded-md hover:bg-green-600 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500\",\n                children: \"Add Patch Panel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: patchPanels.length > 0 ? patchPanels.map(pp => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between bg-gray-50 p-4 rounded-md shadow-sm border border-gray-100\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"font-semibold text-lg\",\n                  children: pp.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 503,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-600\",\n                  children: [\"Location: \", pp.location || \"N/A\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 504,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-600\",\n                  children: [\"Total Ports: \", pp.total_ports]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 507,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex space-x-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleShowPortStatus(\"patch_panels\", pp.id),\n                  className: \"px-3 py-1 bg-blue-500 text-white text-xs rounded-md hover:bg-blue-600\",\n                  children: \"View Ports\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 512,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDeleteEntity(\"patch_panels\", pp.id),\n                  className: \"px-3 py-1 bg-red-500 text-white text-xs rounded-md hover:bg-red-600\",\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 520,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 23\n              }, this)]\n            }, pp.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 21\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-center text-gray-500\",\n              children: \"No patch panels added yet.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"mt-12 text-center text-gray-500 text-sm\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xA9 2025 Network Doc App. All rights reserved.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 290,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YccdCgEsx++cfognh0+hVagj+L8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","ConnectionList","ConnectionForm","PortStatusModal","PcList","SwitchList","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","process","env","NODE_ENV","App","_s","pcs","setPcs","patchPanels","setPatchPanels","switches","setSwitches","connections","setConnections","activeTab","setActiveTab","message","setMessage","isMessageVisible","setIsMessageVisible","showPortStatusModal","setShowPortStatusModal","portStatusData","setPortStatusData","modalEntityType","setModalEntityType","modalEntityId","setModalEntityId","showMessage","msg","duration","setTimeout","fetchData","endpoint","setter","response","fetch","ok","errorData","json","catch","Error","error","status","data","console","handleAddConnection","newConnectionData","method","headers","body","JSON","stringify","handleUpdateConnection","id","updatedConnectionData","handleDeleteConnection","confirmed","window","confirm","prev","filter","conn","handleEditConnection","connection","formattedHops","hops","map","hop","patch_panel_id","patch_panel","patch_panel_port","is_port_up","handleAddEntity","type","newEntity","slice","toUpperCase","handleUpdateEntity","updatedEntity","item","handleDeleteEntity","handleShowPortStatus","entityType","entityId","handleClosePortStatusModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onClose","onClick","onAddConnection","onUpdateConnection","editingConnection","setEditingConnection","onAddEntity","onShowPortStatus","onDelete","onEdit","length","onUpdateEntity","onDeleteEntity","onSubmit","e","preventDefault","name","target","value","location","totalPorts","parseInt","total_ports","reset","placeholder","required","min","pp","_c","$RefreshReg$"],"sources":["/app/src/App.js"],"sourcesContent":["// frontend/src/App.js\n// This is the main React component for the frontend application.\n// It orchestrates the display of various sections (Connections, PCs, Switches).\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport ConnectionList from \"./components/ConnectionList\";\nimport ConnectionForm from \"./components/ConnectionForm\";\nimport PortStatusModal from \"./components/PortStatusModal\";\nimport PcList from \"./components/PcList\"; // New: Import PcList component\nimport SwitchList from \"./components/SwitchList\"; // New: Import SwitchList component\n\n// Base URL for the backend API. When running in Docker Compose,\n// 'backend' is the service name and resolves to the backend container's IP.\nconst API_BASE_URL =\n  process.env.NODE_ENV === \"production\"\n    ? \"/api\" // In production, proxy requests through Nginx or similar\n    : \"http://localhost:5004\"; // For local development with 'npm start'\n\nfunction App() {\n  // State variables to store fetched data\n  const [pcs, setPcs] = useState([]);\n  const [patchPanels, setPatchPanels] = useState([]);\n  const [switches, setSwitches] = useState([]);\n  const [connections, setConnections] = useState([]);\n\n  // State for current active tab\n  const [activeTab, setActiveTab] = useState(\"connections\"); // 'connections', 'pcs', 'switches'\n\n  const [message, setMessage] = useState(\"\"); // General message for success/error\n  const [isMessageVisible, setIsMessageVisible] = useState(false); // Controls message visibility\n\n  // State for Port Status Modal\n  const [showPortStatusModal, setShowPortStatusModal] = useState(false);\n  const [portStatusData, setPortStatusData] = useState(null);\n  const [modalEntityType, setModalEntityType] = useState(null);\n  const [modalEntityId, setModalEntityId] = useState(null);\n\n  // Function to show a message temporarily\n  const showMessage = (msg, duration = 3000) => {\n    setMessage(msg);\n    setIsMessageVisible(true);\n    setTimeout(() => {\n      setIsMessageVisible(false);\n      setMessage(\"\");\n    }, duration);\n  };\n\n  // Memoized function to fetch data from the backend\n  const fetchData = useCallback(async (endpoint, setter) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/${endpoint}`);\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(\n          errorData.error || `HTTP error! status: ${response.status}`\n        );\n      }\n      const data = await response.json();\n      setter(data);\n    } catch (error) {\n      console.error(`Failed to fetch ${endpoint}:`, error);\n      showMessage(`Error fetching ${endpoint}: ${error.message}`, 5000);\n    }\n  }, []);\n\n  // Fetch all initial data when the component mounts\n  useEffect(() => {\n    fetchData(\"pcs\", setPcs);\n    fetchData(\"patch_panels\", setPatchPanels);\n    fetchData(\"switches\", setSwitches);\n    fetchData(\"connections\", setConnections);\n  }, [fetchData]);\n\n  // Handle adding a new connection\n  const handleAddConnection = async (newConnectionData) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/connections`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(newConnectionData),\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(\n          errorData.error || `HTTP error! status: ${response.status}`\n        );\n      }\n      fetchData(\"connections\", setConnections);\n      showMessage(\"Connection added successfully!\");\n    } catch (error) {\n      console.error(\"Error adding connection:\", error);\n      showMessage(`Error adding connection: ${error.message}`, 8000);\n    }\n  };\n\n  // Handle updating an existing connection\n  const handleUpdateConnection = async (id, updatedConnectionData) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/connections/${id}`, {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(updatedConnectionData),\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(\n          errorData.error || `HTTP error! status: ${response.status}`\n        );\n      }\n      fetchData(\"connections\", setConnections);\n      showMessage(\"Connection updated successfully!\");\n    } catch (error) {\n      console.error(\"Error updating connection:\", error);\n      showMessage(`Error updating connection: ${error.message}`, 8000);\n    }\n  };\n\n  // Handle deleting a connection\n  const handleDeleteConnection = async (id) => {\n    const confirmed = window.confirm(\n      \"Are you sure you want to delete this connection?\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      const response = await fetch(`${API_BASE_URL}/connections/${id}`, {\n        method: \"DELETE\",\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(\n          errorData.error || `HTTP error! status: ${response.status}`\n        );\n      }\n      setConnections((prev) => prev.filter((conn) => conn.id !== id));\n      showMessage(\"Connection deleted successfully!\");\n    } catch (error) {\n      console.error(\"Error deleting connection:\", error);\n      showMessage(`Error deleting connection: ${error.message}`, 5000);\n    }\n  };\n\n  // Handle editing a connection (set the connection to be edited in state)\n  const handleEditConnection = (connection) => {\n    const formattedHops = connection.hops.map((hop) => ({\n      patch_panel_id: hop.patch_panel.id,\n      patch_panel_port: hop.patch_panel_port,\n      is_port_up: hop.is_port_up,\n    }));\n    // Note: editingConnection is managed by ConnectionForm now\n    // Passing this up just to trigger the form to open/populate\n    // A more robust solution might use a shared state or context for editing.\n  };\n\n  // Function to add a new PC, Patch Panel, or Switch\n  const handleAddEntity = async (type, data) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/${type}`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(data),\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(\n          errorData.error || `HTTP error! status: ${response.status}`\n        );\n      }\n      const newEntity = await response.json();\n      if (type === \"pcs\") setPcs((prev) => [...prev, newEntity]);\n      if (type === \"patch_panels\")\n        setPatchPanels((prev) => [...prev, newEntity]);\n      if (type === \"switches\") setSwitches((prev) => [...prev, newEntity]);\n      showMessage(`${type.slice(0, -1).toUpperCase()} added successfully!`);\n      // Re-fetch data relevant to selection dropdowns\n      if (type === \"patch_panels\") fetchData(\"patch_panels\", setPatchPanels);\n      if (type === \"switches\") fetchData(\"switches\", setSwitches);\n      if (type === \"pcs\") fetchData(\"pcs\", setPcs);\n    } catch (error) {\n      console.error(`Error adding ${type}:`, error);\n      showMessage(`Error adding ${type}: ${error.message}`, 5000);\n    }\n  };\n\n  // Function to update an existing PC, Patch Panel, or Switch\n  const handleUpdateEntity = async (type, id, data) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/${type}/${id}`, {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(data),\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(\n          errorData.error || `HTTP error! status: ${response.status}`\n        );\n      }\n      const updatedEntity = await response.json();\n      if (type === \"pcs\")\n        setPcs((prev) =>\n          prev.map((item) => (item.id === id ? updatedEntity : item))\n        );\n      if (type === \"patch_panels\")\n        setPatchPanels((prev) =>\n          prev.map((item) => (item.id === id ? updatedEntity : item))\n        );\n      if (type === \"switches\")\n        setSwitches((prev) =>\n          prev.map((item) => (item.id === id ? updatedEntity : item))\n        );\n      showMessage(`${type.slice(0, -1).toUpperCase()} updated successfully!`);\n      // Re-fetch connections as well, in case associated entity data has changed\n      fetchData(\"connections\", setConnections);\n    } catch (error) {\n      console.error(`Error updating ${type}:`, error);\n      showMessage(`Error updating ${type}: ${error.message}`, 5000);\n    }\n  };\n\n  // Function to delete a PC, Patch Panel, or Switch\n  const handleDeleteEntity = async (type, id) => {\n    const confirmed = window.confirm(\n      `Are you sure you want to delete this ${type.slice(\n        0,\n        -1\n      )}? This will also delete associated connections.`\n    );\n    if (!confirmed) {\n      return;\n    }\n    try {\n      const response = await fetch(`${API_BASE_URL}/${type}/${id}`, {\n        method: \"DELETE\",\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(\n          errorData.error || `HTTP error! status: ${response.status}`\n        );\n      }\n      if (type === \"pcs\")\n        setPcs((prev) => prev.filter((item) => item.id !== id));\n      if (type === \"patch_panels\")\n        setPatchPanels((prev) => prev.filter((item) => item.id !== id));\n      if (type === \"switches\")\n        setSwitches((prev) => prev.filter((item) => item.id !== id));\n      showMessage(`${type.slice(0, -1).toUpperCase()} deleted successfully!`);\n      // Re-fetch connections as well, as some might have been deleted due to cascade\n      fetchData(\"connections\", setConnections);\n    } catch (error) {\n      console.error(`Error deleting ${type}:`, error);\n      showMessage(`Error deleting ${type}: ${error.message}`, 5000);\n    }\n  };\n\n  // Function to open the port status modal\n  const handleShowPortStatus = async (entityType, entityId) => {\n    try {\n      const response = await fetch(\n        `${API_BASE_URL}/${entityType}/${entityId}/ports`\n      );\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(\n          errorData.error || `HTTP error! status: ${response.status}`\n        );\n      }\n      const data = await response.json();\n      setPortStatusData(data);\n      setModalEntityType(entityType);\n      setModalEntityId(entityId);\n      setShowPortStatusModal(true);\n    } catch (error) {\n      console.error(`Failed to fetch ${entityType} port status:`, error);\n      showMessage(`Error fetching port status: ${error.message}`, 5000);\n    }\n  };\n\n  const handleClosePortStatusModal = () => {\n    setShowPortStatusModal(false);\n    setPortStatusData(null);\n    setModalEntityType(null);\n    setModalEntityId(null);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-100 to-blue-200 font-inter p-4 sm:p-8\">\n      {/* Global Message Box */}\n      {isMessageVisible && (\n        <div className=\"fixed top-4 left-1/2 -translate-x-1/2 bg-blue-500 text-white px-6 py-3 rounded-lg shadow-lg z-50 animate-fade-in-down\">\n          {message}\n        </div>\n      )}\n\n      {/* Port Status Modal */}\n      {showPortStatusModal && portStatusData && (\n        <PortStatusModal\n          isOpen={showPortStatusModal}\n          onClose={handleClosePortStatusModal}\n          data={portStatusData}\n          entityType={modalEntityType}\n          entityId={modalEntityId}\n        />\n      )}\n\n      {/* Header Section */}\n      <header className=\"mb-8 text-center\">\n        <h1 className=\"text-4xl font-extrabold text-blue-800 tracking-tight sm:text-5xl\">\n          Network Device Documentation\n        </h1>\n        <p className=\"mt-2 text-lg text-gray-600\">\n          Track your network connections from PC to Patch Panel to Switch with\n          ease.\n        </p>\n      </header>\n\n      {/* Main Content Area */}\n      <main className=\"max-w-6xl mx-auto bg-white rounded-xl shadow-lg p-6 sm:p-8\">\n        {/* Tab Navigation */}\n        <div className=\"flex border-b border-gray-200 mb-6\">\n          <button\n            className={`py-3 px-6 text-lg font-medium ${\n              activeTab === \"connections\"\n                ? \"border-b-4 border-blue-600 text-blue-800\"\n                : \"text-gray-600 hover:text-blue-600\"\n            }`}\n            onClick={() => setActiveTab(\"connections\")}\n          >\n            Connections\n          </button>\n          <button\n            className={`py-3 px-6 text-lg font-medium ${\n              activeTab === \"pcs\"\n                ? \"border-b-4 border-blue-600 text-blue-800\"\n                : \"text-gray-600 hover:text-blue-600\"\n            }`}\n            onClick={() => setActiveTab(\"pcs\")}\n          >\n            PCs\n          </button>\n          <button\n            className={`py-3 px-6 text-lg font-medium ${\n              activeTab === \"switches\"\n                ? \"border-b-4 border-blue-600 text-blue-800\"\n                : \"text-gray-600 hover:text-blue-600\"\n            }`}\n            onClick={() => setActiveTab(\"switches\")}\n          >\n            Switches\n          </button>\n          <button\n            className={`py-3 px-6 text-lg font-medium ${\n              activeTab === \"patch_panels\"\n                ? \"border-b-4 border-blue-600 text-blue-800\"\n                : \"text-gray-600 hover:text-blue-600\"\n            }`}\n            onClick={() => setActiveTab(\"patch_panels\")}\n          >\n            Patch Panels\n          </button>\n        </div>\n\n        {/* Conditional Tab Content Rendering */}\n        {activeTab === \"connections\" && (\n          <>\n            {/* Connection Form Section */}\n            <section className=\"mb-10 p-6 bg-blue-50 rounded-lg border border-blue-200 shadow-inner\">\n              <h2 className=\"text-2xl font-bold text-blue-700 mb-4\">\n                Add/Edit Connection\n              </h2>\n              <ConnectionForm\n                pcs={pcs}\n                patchPanels={patchPanels}\n                switches={switches}\n                onAddConnection={handleAddConnection}\n                onUpdateConnection={handleUpdateConnection}\n                // No longer passing editingConnection state directly from App.js\n                // ConnectionForm manages its own editing state or receives initial editing data\n                editingConnection={null} // Set to null or a dedicated state for the form if needed\n                setEditingConnection={() => {}} // Placeholder, as form manages internally for new/edit flow\n                onAddEntity={handleAddEntity}\n                onShowPortStatus={handleShowPortStatus}\n              />\n            </section>\n\n            {/* Connection List Section */}\n            <section>\n              <h2 className=\"text-2xl font-bold text-blue-700 mb-6\">\n                All Connections\n              </h2>\n              <ConnectionList\n                connections={connections} // Pass all connections, let ConnectionList handle its own search/filter\n                onDelete={handleDeleteConnection}\n                onEdit={handleEditConnection}\n              />\n              {connections.length === 0 && (\n                <p className=\"text-center text-gray-500 text-lg mt-8\">\n                  No connections found. Start by adding one above.\n                </p>\n              )}\n            </section>\n          </>\n        )}\n\n        {activeTab === \"pcs\" && (\n          <section>\n            <h2 className=\"text-2xl font-bold text-blue-700 mb-6\">All PCs</h2>\n            <PcList\n              pcs={pcs}\n              onAddEntity={handleAddEntity}\n              onUpdateEntity={handleUpdateEntity}\n              onDeleteEntity={handleDeleteEntity}\n            />\n          </section>\n        )}\n\n        {activeTab === \"switches\" && (\n          <section>\n            <h2 className=\"text-2xl font-bold text-blue-700 mb-6\">\n              All Switches\n            </h2>\n            <SwitchList\n              switches={switches}\n              onAddEntity={handleAddEntity}\n              onUpdateEntity={handleUpdateEntity}\n              onDeleteEntity={handleDeleteEntity}\n              onShowPortStatus={handleShowPortStatus}\n            />\n          </section>\n        )}\n\n        {activeTab === \"patch_panels\" && (\n          <section>\n            <h2 className=\"text-2xl font-bold text-blue-700 mb-6\">\n              All Patch Panels\n            </h2>\n            {/* You'll need to create a PatchPanelList component similar to PcList/SwitchList */}\n            {/* For now, let's add a placeholder or a simple list here */}\n            <div className=\"bg-white rounded-lg shadow-md p-4\">\n              {/* Add New Patch Panel Form (from ConnectionForm, made directly available here if needed, or create a dedicated form) */}\n              <div className=\"bg-white p-5 rounded-lg shadow-sm border border-gray-100 mb-6\">\n                <h3 className=\"text-lg font-semibold text-gray-700 mb-3\">\n                  Add New Patch Panel\n                </h3>\n                {/* Simplified form for adding just Patch Panels directly in this tab */}\n                <form\n                  onSubmit={(e) => {\n                    e.preventDefault();\n                    const name = e.target.name.value;\n                    const location = e.target.location.value;\n                    const totalPorts = parseInt(e.target.totalPorts.value);\n                    handleAddEntity(\"patch_panels\", {\n                      name,\n                      location,\n                      total_ports: totalPorts,\n                    });\n                    e.target.reset(); // Clear form\n                  }}\n                  className=\"space-y-3\"\n                >\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder=\"Patch Panel Name\"\n                    className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                    required\n                  />\n                  <input\n                    type=\"text\"\n                    name=\"location\"\n                    placeholder=\"Location (Optional)\"\n                    className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                  />\n                  <input\n                    type=\"number\"\n                    name=\"totalPorts\"\n                    placeholder=\"Total Ports (e.g., 24)\"\n                    className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                    min=\"1\"\n                    required\n                  />\n                  <button\n                    type=\"submit\"\n                    className=\"w-full bg-green-500 text-white p-2 rounded-md hover:bg-green-600 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500\"\n                  >\n                    Add Patch Panel\n                  </button>\n                </form>\n              </div>\n\n              {/* List of existing Patch Panels */}\n              <div className=\"space-y-4\">\n                {patchPanels.length > 0 ? (\n                  patchPanels.map((pp) => (\n                    <div\n                      key={pp.id}\n                      className=\"flex items-center justify-between bg-gray-50 p-4 rounded-md shadow-sm border border-gray-100\"\n                    >\n                      <div>\n                        <p className=\"font-semibold text-lg\">{pp.name}</p>\n                        <p className=\"text-sm text-gray-600\">\n                          Location: {pp.location || \"N/A\"}\n                        </p>\n                        <p className=\"text-sm text-gray-600\">\n                          Total Ports: {pp.total_ports}\n                        </p>\n                      </div>\n                      <div className=\"flex space-x-2\">\n                        <button\n                          onClick={() =>\n                            handleShowPortStatus(\"patch_panels\", pp.id)\n                          }\n                          className=\"px-3 py-1 bg-blue-500 text-white text-xs rounded-md hover:bg-blue-600\"\n                        >\n                          View Ports\n                        </button>\n                        <button\n                          onClick={() =>\n                            handleDeleteEntity(\"patch_panels\", pp.id)\n                          }\n                          className=\"px-3 py-1 bg-red-500 text-white text-xs rounded-md hover:bg-red-600\"\n                        >\n                          Delete\n                        </button>\n                      </div>\n                    </div>\n                  ))\n                ) : (\n                  <p className=\"text-center text-gray-500\">\n                    No patch panels added yet.\n                  </p>\n                )}\n              </div>\n            </div>\n          </section>\n        )}\n      </main>\n\n      {/* Footer (Optional) */}\n      <footer className=\"mt-12 text-center text-gray-500 text-sm\">\n        <p>&copy; 2025 Network Doc App. All rights reserved.</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}