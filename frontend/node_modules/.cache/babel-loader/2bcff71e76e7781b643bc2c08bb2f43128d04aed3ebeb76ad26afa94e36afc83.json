{"ast":null,"code":"var _jsxFileName = \"/app/src/components/ConnectionForm.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/ConnectionForm.js\n// This component provides forms to add new PCs, Patch Panels, Servers,\n// and to create or edit network connections between them.\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ConnectionForm({\n  pcs,\n  patchPanels,\n  servers,\n  onAddConnection,\n  onUpdateConnection,\n  editingConnection,\n  setEditingConnection,\n  onAddEntity,\n  onShowPortStatus\n}) {\n  _s();\n  var _servers$find;\n  const [pcId, setPcId] = useState('');\n  const [serverPort, setServerPort] = useState('');\n  const [isServerPortUp, setIsServerPortUp] = useState(true); // New: Server port status\n  const [serverId, setServerId] = useState('');\n  // State to manage multiple patch panel hops\n  const [hops, setHops] = useState([]); // Array of { patch_panel_id, patch_panel_port, is_port_up }\n\n  // State for new entity forms (PC, Patch Panel, Server)\n  const [newPcName, setNewPcName] = useState('');\n  const [newPcIp, setNewPcIp] = useState('');\n  const [newPcDesc, setNewPcDesc] = useState('');\n  const [newPpName, setNewPpName] = useState('');\n  const [newPpLocation, setNewPpLocation] = useState('');\n  const [newPpTotalPorts, setNewPpTotalPorts] = useState(1); // New: Total ports for Patch Panel\n\n  const [newServerName, setNewServerName] = useState('');\n  const [newServerIp, setNewServerIp] = useState('');\n  const [newServerLocation, setNewServerLocation] = useState('');\n  const [newServerTotalPorts, setNewServerTotalPorts] = useState(1); // New: Total ports for Server\n\n  // Populate form fields if editing an existing connection\n  useEffect(() => {\n    if (editingConnection) {\n      setPcId(editingConnection.pc_id || '');\n      setServerId(editingConnection.server_id || '');\n      setServerPort(editingConnection.server_port || '');\n      setIsServerPortUp(editingConnection.is_server_port_up !== undefined ? editingConnection.is_server_port_up : true);\n      // When editing, populate hops\n      setHops(editingConnection.hops || []);\n    } else {\n      // Clear form if not editing\n      setPcId('');\n      setServerId('');\n      setServerPort('');\n      setIsServerPortUp(true);\n      setHops([]);\n    }\n  }, [editingConnection]);\n\n  // Handle changes for a specific hop's patch panel ID\n  const handleHopPatchPanelChange = (index, value) => {\n    const updatedHops = [...hops];\n    updatedHops[index].patch_panel_id = parseInt(value);\n    setHops(updatedHops);\n  };\n\n  // Handle changes for a specific hop's patch panel port\n  const handleHopPortChange = (index, value) => {\n    const updatedHops = [...hops];\n    updatedHops[index].patch_panel_port = value;\n    setHops(updatedHops);\n  };\n\n  // Handle changes for a specific hop's port status\n  const handleHopPortStatusChange = (index, value) => {\n    const updatedHops = [...hops];\n    updatedHops[index].is_port_up = value;\n    setHops(updatedHops);\n  };\n\n  // Add a new empty hop to the list\n  const addHop = () => {\n    setHops([...hops, {\n      patch_panel_id: '',\n      patch_panel_port: '',\n      is_port_up: true\n    }]);\n  };\n\n  // Remove a hop by index\n  const removeHop = index => {\n    setHops(hops.filter((_, i) => i !== index));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // Validate that all hops have selections\n    const allHopsValid = hops.every(hop => hop.patch_panel_id && hop.patch_panel_port.trim());\n    if (!allHopsValid) {\n      alert('Please fill out all patch panel details for each hop.');\n      return;\n    }\n    const connectionData = {\n      pc_id: parseInt(pcId),\n      server_id: parseInt(serverId),\n      server_port: serverPort,\n      is_server_port_up: isServerPortUp,\n      // Include server port status\n      hops: hops.map(hop => ({\n        // Send hops as an array of objects\n        patch_panel_id: hop.patch_panel_id,\n        patch_panel_port: hop.patch_panel_port,\n        is_port_up: hop.is_port_up // Include hop port status\n      }))\n    };\n    if (editingConnection) {\n      await onUpdateConnection(editingConnection.id, connectionData);\n    } else {\n      await onAddConnection(connectionData);\n    }\n    // Clear form fields after submission\n    setPcId('');\n    setServerId('');\n    setServerPort('');\n    setIsServerPortUp(true);\n    setHops([]);\n    setEditingConnection(null); // Ensure editing state is cleared\n  };\n  const handleCancelEdit = () => {\n    setEditingConnection(null);\n    // Also clear the form fields\n    setPcId('');\n    setServerId('');\n    setServerPort('');\n    setIsServerPortUp(true);\n    setHops([]);\n  };\n  const handleAddPc = async e => {\n    e.preventDefault();\n    if (newPcName.trim()) {\n      await onAddEntity('pcs', {\n        name: newPcName,\n        ip_address: newPcIp,\n        description: newPcDesc\n      });\n      setNewPcName('');\n      setNewPcIp('');\n      setNewPcDesc('');\n    }\n  };\n  const handleAddPp = async e => {\n    e.preventDefault();\n    if (newPpName.trim()) {\n      await onAddEntity('patch_panels', {\n        name: newPpName,\n        location: newPpLocation,\n        total_ports: parseInt(newPpTotalPorts)\n      });\n      setNewPpName('');\n      setNewPpLocation('');\n      setNewPpTotalPorts(1);\n    }\n  };\n  const handleAddServer = async e => {\n    e.preventDefault();\n    if (newServerName.trim()) {\n      await onAddEntity('servers', {\n        name: newServerName,\n        ip_address: newServerIp,\n        location: newServerLocation,\n        total_ports: parseInt(newServerTotalPorts)\n      });\n      setNewServerName('');\n      setNewServerIp('');\n      setNewServerLocation('');\n      setNewServerTotalPorts(1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-3 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-5 rounded-lg shadow-sm border border-gray-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold text-gray-700 mb-3\",\n          children: \"Add New PC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleAddPc,\n          className: \"space-y-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"PC Name\",\n            value: newPcName,\n            onChange: e => setNewPcName(e.target.value),\n            className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"IP Address (Optional)\",\n            value: newPcIp,\n            onChange: e => setNewPcIp(e.target.value),\n            className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Description (Optional)\",\n            value: newPcDesc,\n            onChange: e => setNewPcDesc(e.target.value),\n            className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"w-full bg-indigo-500 text-white p-2 rounded-md hover:bg-indigo-600 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\",\n            children: \"Add PC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-5 rounded-lg shadow-sm border border-gray-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold text-gray-700 mb-3\",\n          children: \"Add New Patch Panel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleAddPp,\n          className: \"space-y-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Patch Panel Name\",\n            value: newPpName,\n            onChange: e => setNewPpName(e.target.value),\n            className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Location (Optional)\",\n            value: newPpLocation,\n            onChange: e => setNewPpLocation(e.target.value),\n            className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Total Ports (e.g., 24)\",\n            value: newPpTotalPorts,\n            onChange: e => setNewPpTotalPorts(e.target.value),\n            className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\",\n            min: \"1\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"w-full bg-green-500 text-white p-2 rounded-md hover:bg-green-600 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500\",\n            children: \"Add Patch Panel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), patchPanels.length > 0 &&\n          /*#__PURE__*/\n          /* Only show if existing PPs */\n          _jsxDEV(\"select\", {\n            onChange: e => onShowPortStatus('patch_panels', e.target.value),\n            className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500 mt-2\",\n            defaultValue: \"\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"View Port Status for Existing PP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this), patchPanels.map(pp => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: pp.id,\n              children: [pp.name, \" (\", pp.location, \")\"]\n            }, pp.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-5 rounded-lg shadow-sm border border-gray-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold text-gray-700 mb-3\",\n          children: \"Add New Server\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleAddServer,\n          className: \"space-y-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Server Name\",\n            value: newServerName,\n            onChange: e => setNewServerName(e.target.value),\n            className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"IP Address (Optional)\",\n            value: newServerIp,\n            onChange: e => setNewServerIp(e.target.value),\n            className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Location (Optional)\",\n            value: newServerLocation,\n            onChange: e => setNewServerLocation(e.target.value),\n            className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Total Ports (e.g., 4)\",\n            value: newServerTotalPorts,\n            onChange: e => setNewServerTotalPorts(e.target.value),\n            className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\",\n            min: \"1\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"w-full bg-red-500 text-white p-2 rounded-md hover:bg-red-600 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\",\n            children: \"Add Server\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), servers.length > 0 &&\n          /*#__PURE__*/\n          /* Only show if existing Servers */\n          _jsxDEV(\"select\", {\n            onChange: e => onShowPortStatus('servers', e.target.value),\n            className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500 mt-2\",\n            defaultValue: \"\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"View Port Status for Existing Server\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 17\n            }, this), servers.map(server => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: server.id,\n              children: [server.name, \" (\", server.ip_address, \")\"]\n            }, server.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"space-y-6 p-6 bg-white rounded-lg shadow-md border border-blue-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-bold text-blue-700 text-center\",\n        children: editingConnection ? 'Edit Existing Connection' : 'Create New Connection'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"pc-select\",\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Select PC:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"pc-select\",\n            value: pcId,\n            onChange: e => setPcId(e.target.value),\n            className: \"w-full p-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"-- Select a PC --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 15\n            }, this), pcs.map(pc => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: pc.id,\n              children: [pc.name, \" (\", pc.ip_address || 'No IP', \")\"]\n            }, pc.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this), pcs.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-red-500 mt-1\",\n            children: \"Please add a PC first.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"server-select\",\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Select Server:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"server-select\",\n            value: serverId,\n            onChange: e => setServerId(e.target.value),\n            className: \"w-full p-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"-- Select a Server --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 15\n            }, this), servers.map(server => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: server.id,\n              children: [server.name, \" (\", server.ip_address, \")\"]\n            }, server.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this), servers.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-red-500 mt-1\",\n            children: \"Please add a Server first.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"md:col-span-2 grid grid-cols-2 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"server-port\",\n              className: \"block text-sm font-medium text-gray-700 mb-1\",\n              children: \"Server Port:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"server-port\",\n              type: \"text\",\n              placeholder: \"e.g., Eth0/1, GigaPort-03\",\n              value: serverPort,\n              onChange: e => setServerPort(e.target.value),\n              className: \"w-full p-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center pt-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"is-server-port-up\",\n              type: \"checkbox\",\n              checked: isServerPortUp,\n              onChange: e => setIsServerPortUp(e.target.checked),\n              className: \"h-4 w-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"is-server-port-up\",\n              className: \"ml-2 block text-sm text-gray-900\",\n              children: \"Port Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this), serverId && servers.find(s => s.id === parseInt(serverId)) && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => onShowPortStatus('servers', serverId),\n            className: \"mt-2 px-4 py-2 bg-blue-500 text-white text-sm font-medium rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 col-span-2\",\n            children: [\"View Server Port Status (\", (_servers$find = servers.find(s => s.id === parseInt(serverId))) === null || _servers$find === void 0 ? void 0 : _servers$find.name, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 border border-gray-200 rounded-md bg-gray-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-lg font-semibold text-gray-700 mb-3\",\n          children: \"Patch Panel Hops (in sequence)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this), hops.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-500 mt-2 text-center mb-4\",\n          children: \"Click \\\"Add Patch Panel Hop\\\" to start building the path.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 13\n        }, this), hops.map((hop, index) => {\n          var _patchPanels$find;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col md:flex-row items-end md:items-center space-y-3 md:space-y-0 md:space-x-3 mb-4 p-3 border border-gray-100 rounded-md bg-white shadow-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-grow w-full md:w-auto\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `pp-select-${index}`,\n                className: \"block text-xs font-medium text-gray-600 mb-1\",\n                children: [\"Patch Panel \", index + 1, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: `pp-select-${index}`,\n                value: hop.patch_panel_id,\n                onChange: e => handleHopPatchPanelChange(index, e.target.value),\n                className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500 text-sm\",\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"-- Select Patch Panel --\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 19\n                }, this), patchPanels.map(pp => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: pp.id,\n                  children: [pp.name, \" (\", pp.location, \")\"]\n                }, pp.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 17\n              }, this), patchPanels.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-xs text-red-500 mt-1\",\n                children: \"Please add a Patch Panel first.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 46\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-grow w-full md:w-auto\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `pp-port-${index}`,\n                className: \"block text-xs font-medium text-gray-600 mb-1\",\n                children: \"Port:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: `pp-port-${index}`,\n                type: \"text\",\n                placeholder: \"Port\",\n                value: hop.patch_panel_port,\n                onChange: e => handleHopPortChange(index, e.target.value),\n                className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500 text-sm\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center w-full md:w-auto md:pt-5\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                id: `is-pp-port-up-${index}`,\n                type: \"checkbox\",\n                checked: hop.is_port_up,\n                onChange: e => handleHopPortStatusChange(index, e.target.checked),\n                className: \"h-4 w-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `is-pp-port-up-${index}`,\n                className: \"ml-2 block text-sm text-gray-900\",\n                children: \"Port Up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => removeHop(index),\n              className: \"p-2 bg-red-500 text-white rounded-md hover:bg-red-600 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 text-sm flex-shrink-0\",\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 15\n            }, this), hop.patch_panel_id && patchPanels.find(pp => pp.id === parseInt(hop.patch_panel_id)) && /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => onShowPortStatus('patch_panels', hop.patch_panel_id),\n              className: \"w-full md:w-auto mt-2 md:mt-0 px-3 py-2 bg-blue-500 text-white text-xs font-medium rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 flex-shrink-0\",\n              children: [\"View Ports (\", (_patchPanels$find = patchPanels.find(pp => pp.id === parseInt(hop.patch_panel_id))) === null || _patchPanels$find === void 0 ? void 0 : _patchPanels$find.name, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addHop,\n          className: \"w-full mt-2 py-2 px-4 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\",\n          children: \"Add Patch Panel Hop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end space-x-3 mt-6\",\n        children: [editingConnection && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleCancelEdit,\n          className: \"px-5 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-300 transition-colors duration-200\",\n          children: \"Cancel Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"px-5 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200\",\n          children: editingConnection ? 'Update Connection' : 'Add Connection'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n_s(ConnectionForm, \"Ns5MAviqwtjX1dL7nz/GVDQ0Yfk=\");\n_c = ConnectionForm;\nexport default ConnectionForm;\nvar _c;\n$RefreshReg$(_c, \"ConnectionForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ConnectionForm","pcs","patchPanels","servers","onAddConnection","onUpdateConnection","editingConnection","setEditingConnection","onAddEntity","onShowPortStatus","_s","_servers$find","pcId","setPcId","serverPort","setServerPort","isServerPortUp","setIsServerPortUp","serverId","setServerId","hops","setHops","newPcName","setNewPcName","newPcIp","setNewPcIp","newPcDesc","setNewPcDesc","newPpName","setNewPpName","newPpLocation","setNewPpLocation","newPpTotalPorts","setNewPpTotalPorts","newServerName","setNewServerName","newServerIp","setNewServerIp","newServerLocation","setNewServerLocation","newServerTotalPorts","setNewServerTotalPorts","pc_id","server_id","server_port","is_server_port_up","undefined","handleHopPatchPanelChange","index","value","updatedHops","patch_panel_id","parseInt","handleHopPortChange","patch_panel_port","handleHopPortStatusChange","is_port_up","addHop","removeHop","filter","_","i","handleSubmit","e","preventDefault","allHopsValid","every","hop","trim","alert","connectionData","map","id","handleCancelEdit","handleAddPc","name","ip_address","description","handleAddPp","location","total_ports","handleAddServer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","target","required","min","length","defaultValue","disabled","pp","server","htmlFor","pc","checked","find","s","onClick","_patchPanels$find","_c","$RefreshReg$"],"sources":["/app/src/components/ConnectionForm.js"],"sourcesContent":["// frontend/src/components/ConnectionForm.js\n// This component provides forms to add new PCs, Patch Panels, Servers,\n// and to create or edit network connections between them.\n\nimport React, { useState, useEffect } from 'react';\n\nfunction ConnectionForm({ pcs, patchPanels, servers, onAddConnection, onUpdateConnection, editingConnection, setEditingConnection, onAddEntity, onShowPortStatus }) {\n  const [pcId, setPcId] = useState('');\n  const [serverPort, setServerPort] = useState('');\n  const [isServerPortUp, setIsServerPortUp] = useState(true); // New: Server port status\n  const [serverId, setServerId] = useState('');\n  // State to manage multiple patch panel hops\n  const [hops, setHops] = useState([]); // Array of { patch_panel_id, patch_panel_port, is_port_up }\n\n  // State for new entity forms (PC, Patch Panel, Server)\n  const [newPcName, setNewPcName] = useState('');\n  const [newPcIp, setNewPcIp] = useState('');\n  const [newPcDesc, setNewPcDesc] = useState('');\n\n  const [newPpName, setNewPpName] = useState('');\n  const [newPpLocation, setNewPpLocation] = useState('');\n  const [newPpTotalPorts, setNewPpTotalPorts] = useState(1); // New: Total ports for Patch Panel\n\n  const [newServerName, setNewServerName] = useState('');\n  const [newServerIp, setNewServerIp] = useState('');\n  const [newServerLocation, setNewServerLocation] = useState('');\n  const [newServerTotalPorts, setNewServerTotalPorts] = useState(1); // New: Total ports for Server\n\n  // Populate form fields if editing an existing connection\n  useEffect(() => {\n    if (editingConnection) {\n      setPcId(editingConnection.pc_id || '');\n      setServerId(editingConnection.server_id || '');\n      setServerPort(editingConnection.server_port || '');\n      setIsServerPortUp(editingConnection.is_server_port_up !== undefined ? editingConnection.is_server_port_up : true);\n      // When editing, populate hops\n      setHops(editingConnection.hops || []);\n    } else {\n      // Clear form if not editing\n      setPcId('');\n      setServerId('');\n      setServerPort('');\n      setIsServerPortUp(true);\n      setHops([]);\n    }\n  }, [editingConnection]);\n\n  // Handle changes for a specific hop's patch panel ID\n  const handleHopPatchPanelChange = (index, value) => {\n    const updatedHops = [...hops];\n    updatedHops[index].patch_panel_id = parseInt(value);\n    setHops(updatedHops);\n  };\n\n  // Handle changes for a specific hop's patch panel port\n  const handleHopPortChange = (index, value) => {\n    const updatedHops = [...hops];\n    updatedHops[index].patch_panel_port = value;\n    setHops(updatedHops);\n  };\n\n  // Handle changes for a specific hop's port status\n  const handleHopPortStatusChange = (index, value) => {\n    const updatedHops = [...hops];\n    updatedHops[index].is_port_up = value;\n    setHops(updatedHops);\n  };\n\n  // Add a new empty hop to the list\n  const addHop = () => {\n    setHops([...hops, { patch_panel_id: '', patch_panel_port: '', is_port_up: true }]);\n  };\n\n  // Remove a hop by index\n  const removeHop = (index) => {\n    setHops(hops.filter((_, i) => i !== index));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // Validate that all hops have selections\n    const allHopsValid = hops.every(hop => hop.patch_panel_id && hop.patch_panel_port.trim());\n    if (!allHopsValid) {\n      alert('Please fill out all patch panel details for each hop.');\n      return;\n    }\n\n    const connectionData = {\n      pc_id: parseInt(pcId),\n      server_id: parseInt(serverId),\n      server_port: serverPort,\n      is_server_port_up: isServerPortUp, // Include server port status\n      hops: hops.map(hop => ({ // Send hops as an array of objects\n        patch_panel_id: hop.patch_panel_id,\n        patch_panel_port: hop.patch_panel_port,\n        is_port_up: hop.is_port_up // Include hop port status\n      })),\n    };\n\n    if (editingConnection) {\n      await onUpdateConnection(editingConnection.id, connectionData);\n    } else {\n      await onAddConnection(connectionData);\n    }\n    // Clear form fields after submission\n    setPcId('');\n    setServerId('');\n    setServerPort('');\n    setIsServerPortUp(true);\n    setHops([]);\n    setEditingConnection(null); // Ensure editing state is cleared\n  };\n\n  const handleCancelEdit = () => {\n    setEditingConnection(null);\n    // Also clear the form fields\n    setPcId('');\n    setServerId('');\n    setServerPort('');\n    setIsServerPortUp(true);\n    setHops([]);\n  };\n\n  const handleAddPc = async (e) => {\n    e.preventDefault();\n    if (newPcName.trim()) {\n      await onAddEntity('pcs', { name: newPcName, ip_address: newPcIp, description: newPcDesc });\n      setNewPcName('');\n      setNewPcIp('');\n      setNewPcDesc('');\n    }\n  };\n\n  const handleAddPp = async (e) => {\n    e.preventDefault();\n    if (newPpName.trim()) {\n      await onAddEntity('patch_panels', { name: newPpName, location: newPpLocation, total_ports: parseInt(newPpTotalPorts) });\n      setNewPpName('');\n      setNewPpLocation('');\n      setNewPpTotalPorts(1);\n    }\n  };\n\n  const handleAddServer = async (e) => {\n    e.preventDefault();\n    if (newServerName.trim()) {\n      await onAddEntity('servers', { name: newServerName, ip_address: newServerIp, location: newServerLocation, total_ports: parseInt(newServerTotalPorts) });\n      setNewServerName('');\n      setNewServerIp('');\n      setNewServerLocation('');\n      setNewServerTotalPorts(1);\n    }\n  };\n\n  return (\n    <div className=\"space-y-8\">\n      {/* Forms to Add New Entities (PC, Patch Panel, Server) */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        {/* Add New PC Form */}\n        <div className=\"bg-white p-5 rounded-lg shadow-sm border border-gray-100\">\n          <h3 className=\"text-lg font-semibold text-gray-700 mb-3\">Add New PC</h3>\n          <form onSubmit={handleAddPc} className=\"space-y-3\">\n            <input\n              type=\"text\"\n              placeholder=\"PC Name\"\n              value={newPcName}\n              onChange={(e) => setNewPcName(e.target.value)}\n              className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n              required\n            />\n            <input\n              type=\"text\"\n              placeholder=\"IP Address (Optional)\"\n              value={newPcIp}\n              onChange={(e) => setNewPcIp(e.target.value)}\n              className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Description (Optional)\"\n              value={newPcDesc}\n              onChange={(e) => setNewPcDesc(e.target.value)}\n              className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n            />\n            <button\n              type=\"submit\"\n              className=\"w-full bg-indigo-500 text-white p-2 rounded-md hover:bg-indigo-600 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n            >\n              Add PC\n            </button>\n          </form>\n        </div>\n\n        {/* Add New Patch Panel Form */}\n        <div className=\"bg-white p-5 rounded-lg shadow-sm border border-gray-100\">\n          <h3 className=\"text-lg font-semibold text-gray-700 mb-3\">Add New Patch Panel</h3>\n          <form onSubmit={handleAddPp} className=\"space-y-3\">\n            <input\n              type=\"text\"\n              placeholder=\"Patch Panel Name\"\n              value={newPpName}\n              onChange={(e) => setNewPpName(e.target.value)}\n              className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n              required\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Location (Optional)\"\n              value={newPpLocation}\n              onChange={(e) => setNewPpLocation(e.target.value)}\n              className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n            />\n            <input\n              type=\"number\"\n              placeholder=\"Total Ports (e.g., 24)\"\n              value={newPpTotalPorts}\n              onChange={(e) => setNewPpTotalPorts(e.target.value)}\n              className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n              min=\"1\"\n              required\n            />\n            <button\n              type=\"submit\"\n              className=\"w-full bg-green-500 text-white p-2 rounded-md hover:bg-green-600 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500\"\n            >\n              Add Patch Panel\n            </button>\n            {patchPanels.length > 0 && ( /* Only show if existing PPs */\n              <select\n                onChange={(e) => onShowPortStatus('patch_panels', e.target.value)}\n                className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500 mt-2\"\n                defaultValue=\"\"\n              >\n                <option value=\"\" disabled>View Port Status for Existing PP</option>\n                {patchPanels.map((pp) => (\n                  <option key={pp.id} value={pp.id}>\n                    {pp.name} ({pp.location})\n                  </option>\n                ))}\n              </select>\n            )}\n          </form>\n        </div>\n\n        {/* Add New Server Form */}\n        <div className=\"bg-white p-5 rounded-lg shadow-sm border border-gray-100\">\n          <h3 className=\"text-lg font-semibold text-gray-700 mb-3\">Add New Server</h3>\n          <form onSubmit={handleAddServer} className=\"space-y-3\">\n            <input\n              type=\"text\"\n              placeholder=\"Server Name\"\n              value={newServerName}\n              onChange={(e) => setNewServerName(e.target.value)}\n              className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n              required\n            />\n            <input\n              type=\"text\"\n              placeholder=\"IP Address (Optional)\"\n              value={newServerIp}\n              onChange={(e) => setNewServerIp(e.target.value)}\n              className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Location (Optional)\"\n              value={newServerLocation}\n              onChange={(e) => setNewServerLocation(e.target.value)}\n              className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n            />\n            <input\n              type=\"number\"\n              placeholder=\"Total Ports (e.g., 4)\"\n              value={newServerTotalPorts}\n              onChange={(e) => setNewServerTotalPorts(e.target.value)}\n              className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n              min=\"1\"\n              required\n            />\n            <button\n              type=\"submit\"\n              className=\"w-full bg-red-500 text-white p-2 rounded-md hover:bg-red-600 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\n            >\n              Add Server\n            </button>\n            {servers.length > 0 && ( /* Only show if existing Servers */\n              <select\n                onChange={(e) => onShowPortStatus('servers', e.target.value)}\n                className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500 mt-2\"\n                defaultValue=\"\"\n              >\n                <option value=\"\" disabled>View Port Status for Existing Server</option>\n                {servers.map((server) => (\n                  <option key={server.id} value={server.id}>\n                    {server.name} ({server.ip_address})\n                  </option>\n                ))}\n              </select>\n            )}\n          </form>\n        </div>\n      </div>\n\n      {/* Connection Form */}\n      <form onSubmit={handleSubmit} className=\"space-y-6 p-6 bg-white rounded-lg shadow-md border border-blue-200\">\n        <h3 className=\"text-xl font-bold text-blue-700 text-center\">\n          {editingConnection ? 'Edit Existing Connection' : 'Create New Connection'}\n        </h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          {/* PC Selection */}\n          <div>\n            <label htmlFor=\"pc-select\" className=\"block text-sm font-medium text-gray-700 mb-1\">Select PC:</label>\n            <select\n              id=\"pc-select\"\n              value={pcId}\n              onChange={(e) => setPcId(e.target.value)}\n              className=\"w-full p-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500\"\n              required\n            >\n              <option value=\"\">-- Select a PC --</option>\n              {pcs.map((pc) => (\n                <option key={pc.id} value={pc.id}>\n                  {pc.name} ({pc.ip_address || 'No IP'})\n                </option>\n              ))}\n            </select>\n            {pcs.length === 0 && <p className=\"text-sm text-red-500 mt-1\">Please add a PC first.</p>}\n          </div>\n\n          {/* Server Selection */}\n          <div>\n            <label htmlFor=\"server-select\" className=\"block text-sm font-medium text-gray-700 mb-1\">Select Server:</label>\n            <select\n              id=\"server-select\"\n              value={serverId}\n              onChange={(e) => setServerId(e.target.value)}\n              className=\"w-full p-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500\"\n              required\n            >\n              <option value=\"\">-- Select a Server --</option>\n              {servers.map((server) => (\n                <option key={server.id} value={server.id}>\n                  {server.name} ({server.ip_address})\n                </option>\n              ))}\n            </select>\n            {servers.length === 0 && <p className=\"text-sm text-red-500 mt-1\">Please add a Server first.</p>}\n          </div>\n\n          {/* Server Port Input and Status */}\n          <div className=\"md:col-span-2 grid grid-cols-2 gap-4\">\n            <div>\n              <label htmlFor=\"server-port\" className=\"block text-sm font-medium text-gray-700 mb-1\">Server Port:</label>\n              <input\n                id=\"server-port\"\n                type=\"text\"\n                placeholder=\"e.g., Eth0/1, GigaPort-03\"\n                value={serverPort}\n                onChange={(e) => setServerPort(e.target.value)}\n                className=\"w-full p-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500\"\n                required\n              />\n            </div>\n            <div className=\"flex items-center pt-5\">\n              <input\n                id=\"is-server-port-up\"\n                type=\"checkbox\"\n                checked={isServerPortUp}\n                onChange={(e) => setIsServerPortUp(e.target.checked)}\n                className=\"h-4 w-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\n              />\n              <label htmlFor=\"is-server-port-up\" className=\"ml-2 block text-sm text-gray-900\">\n                Port Up\n              </label>\n            </div>\n            {serverId && servers.find(s => s.id === parseInt(serverId)) && (\n              <button\n                type=\"button\"\n                onClick={() => onShowPortStatus('servers', serverId)}\n                className=\"mt-2 px-4 py-2 bg-blue-500 text-white text-sm font-medium rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 col-span-2\"\n              >\n                View Server Port Status ({servers.find(s => s.id === parseInt(serverId))?.name})\n              </button>\n            )}\n          </div>\n        </div>\n\n        {/* Dynamic Patch Panel Hops Section */}\n        <div className=\"p-4 border border-gray-200 rounded-md bg-gray-50\">\n          <h4 className=\"text-lg font-semibold text-gray-700 mb-3\">Patch Panel Hops (in sequence)</h4>\n          {hops.length === 0 && (\n            <p className=\"text-sm text-gray-500 mt-2 text-center mb-4\">Click \"Add Patch Panel Hop\" to start building the path.</p>\n          )}\n          {hops.map((hop, index) => (\n            <div key={index} className=\"flex flex-col md:flex-row items-end md:items-center space-y-3 md:space-y-0 md:space-x-3 mb-4 p-3 border border-gray-100 rounded-md bg-white shadow-sm\">\n              <div className=\"flex-grow w-full md:w-auto\">\n                <label htmlFor={`pp-select-${index}`} className=\"block text-xs font-medium text-gray-600 mb-1\">Patch Panel {index + 1}:</label>\n                <select\n                  id={`pp-select-${index}`}\n                  value={hop.patch_panel_id}\n                  onChange={(e) => handleHopPatchPanelChange(index, e.target.value)}\n                  className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500 text-sm\"\n                  required\n                >\n                  <option value=\"\">-- Select Patch Panel --</option>\n                  {patchPanels.map((pp) => (\n                    <option key={pp.id} value={pp.id}>\n                      {pp.name} ({pp.location})\n                    </option>\n                  ))}\n                </select>\n                {patchPanels.length === 0 && <p className=\"text-xs text-red-500 mt-1\">Please add a Patch Panel first.</p>}\n              </div>\n              <div className=\"flex-grow w-full md:w-auto\">\n                <label htmlFor={`pp-port-${index}`} className=\"block text-xs font-medium text-gray-600 mb-1\">Port:</label>\n                <input\n                  id={`pp-port-${index}`}\n                  type=\"text\"\n                  placeholder=\"Port\"\n                  value={hop.patch_panel_port}\n                  onChange={(e) => handleHopPortChange(index, e.target.value)}\n                  className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500 text-sm\"\n                  required\n                />\n              </div>\n              <div className=\"flex items-center w-full md:w-auto md:pt-5\">\n                <input\n                  id={`is-pp-port-up-${index}`}\n                  type=\"checkbox\"\n                  checked={hop.is_port_up}\n                  onChange={(e) => handleHopPortStatusChange(index, e.target.checked)}\n                  className=\"h-4 w-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\n                />\n                <label htmlFor={`is-pp-port-up-${index}`} className=\"ml-2 block text-sm text-gray-900\">\n                  Port Up\n                </label>\n              </div>\n              <button\n                type=\"button\"\n                onClick={() => removeHop(index)}\n                className=\"p-2 bg-red-500 text-white rounded-md hover:bg-red-600 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 text-sm flex-shrink-0\"\n              >\n                Remove\n              </button>\n              {hop.patch_panel_id && patchPanels.find(pp => pp.id === parseInt(hop.patch_panel_id)) && (\n                <button\n                  type=\"button\"\n                  onClick={() => onShowPortStatus('patch_panels', hop.patch_panel_id)}\n                  className=\"w-full md:w-auto mt-2 md:mt-0 px-3 py-2 bg-blue-500 text-white text-xs font-medium rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 flex-shrink-0\"\n                >\n                  View Ports ({patchPanels.find(pp => pp.id === parseInt(hop.patch_panel_id))?.name})\n                </button>\n              )}\n            </div>\n          ))}\n          <button\n            type=\"button\"\n            onClick={addHop}\n            className=\"w-full mt-2 py-2 px-4 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n          >\n            Add Patch Panel Hop\n          </button>\n        </div>\n\n        {/* Action Buttons for Connection Form */}\n        <div className=\"flex justify-end space-x-3 mt-6\">\n          {editingConnection && (\n            <button\n              type=\"button\"\n              onClick={handleCancelEdit}\n              className=\"px-5 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-300 transition-colors duration-200\"\n            >\n              Cancel Edit\n            </button>\n          )}\n          <button\n            type=\"submit\"\n            className=\"px-5 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200\"\n          >\n            {editingConnection ? 'Update Connection' : 'Add Connection'}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default ConnectionForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}