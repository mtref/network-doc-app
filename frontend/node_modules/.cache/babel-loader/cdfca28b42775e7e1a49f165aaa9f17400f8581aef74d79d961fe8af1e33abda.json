{"ast":null,"code":"var _jsxFileName = \"/app/src/components/ConnectionForm.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/ConnectionForm.js\n// This component provides forms to add new PCs, Patch Panels, Switches,\n// and to create or edit network connections between them.\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ConnectionForm({\n  pcs,\n  patchPanels,\n  switches,\n  onAddConnection,\n  onUpdateConnection,\n  editingConnection,\n  setEditingConnection,\n  onAddEntity,\n  onShowPortStatus\n}) {\n  _s();\n  var _switches$find;\n  // Renamed servers to switches\n  const [pcId, setPcId] = useState(\"\");\n  const [switchPort, setSwitchPort] = useState(\"\");\n  const [isSwitchPortUp, setIsSwitchPortUp] = useState(true);\n  const [switchId, setSwitchId] = useState(\"\");\n  // State to manage multiple patch panel hops\n  const [hops, setHops] = useState([]); // Array of { patch_panel_id, patch_panel_port, is_port_up }\n\n  // State for new entity forms (PC, Patch Panel, Switch)\n  const [newPcName, setNewPcName] = useState(\"\");\n  const [newPcIp, setNewPcIp] = useState(\"\");\n  const [newPcDesc, setNewPcDesc] = useState(\"\");\n  const [newPpName, setNewPpName] = useState(\"\");\n  const [newPpLocation, setNewPpLocation] = useState(\"\");\n  const [newPpTotalPorts, setNewPpTotalPorts] = useState(1);\n  const [newSwitchName, setNewSwitchName] = useState(\"\"); // Renamed newServerName\n  const [newSwitchIp, setNewSwitchIp] = useState(\"\"); // Renamed newServerIp\n  const [newSwitchLocation, setNewSwitchLocation] = useState(\"\"); // Renamed newServerLocation\n  const [newSwitchTotalPorts, setNewSwitchTotalPorts] = useState(1); // Renamed newServerTotalPorts\n\n  // Populate form fields if editing an existing connection\n  useEffect(() => {\n    if (editingConnection) {\n      setPcId(editingConnection.pc_id || \"\");\n      setSwitchId(editingConnection.switch_id || \"\"); // Renamed serverId\n      setSwitchPort(editingConnection.switch_port || \"\"); // Renamed serverPort\n      setIsSwitchPortUp(editingConnection.is_switch_port_up !== undefined ? editingConnection.is_switch_port_up : true); // Renamed isServerPortUp\n      // When editing, populate hops\n      setHops(editingConnection.hops || []);\n    } else {\n      // Clear form if not editing\n      setPcId(\"\");\n      setSwitchId(\"\");\n      setSwitchPort(\"\");\n      setIsSwitchPortUp(true);\n      setHops([]);\n    }\n  }, [editingConnection]);\n\n  // Handle changes for a specific hop's patch panel ID\n  const handleHopPatchPanelChange = (index, value) => {\n    const updatedHops = [...hops];\n    updatedHops[index].patch_panel_id = parseInt(value);\n    setHops(updatedHops);\n  };\n\n  // Handle changes for a specific hop's patch panel port\n  const handleHopPortChange = (index, value) => {\n    const updatedHops = [...hops];\n    updatedHops[index].patch_panel_port = value;\n    setHops(updatedHops);\n  };\n\n  // Handle changes for a specific hop's port status\n  const handleHopPortStatusChange = (index, value) => {\n    const updatedHops = [...hops];\n    updatedHops[index].is_port_up = value;\n    setHops(updatedHops);\n  };\n\n  // Add a new empty hop to the list\n  const addHop = () => {\n    setHops([...hops, {\n      patch_panel_id: \"\",\n      patch_panel_port: \"\",\n      is_port_up: true\n    }]);\n  };\n\n  // Remove a hop by index\n  const removeHop = index => {\n    setHops(hops.filter((_, i) => i !== index));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // Validate that all hops have selections\n    const allHopsValid = hops.every(hop => hop.patch_panel_id && hop.patch_panel_port.trim());\n    if (!allHopsValid) {\n      alert(\"Please fill out all patch panel details for each hop.\");\n      return;\n    }\n    const connectionData = {\n      pc_id: parseInt(pcId),\n      switch_id: parseInt(switchId),\n      // Renamed serverId\n      switch_port: switchPort,\n      // Renamed serverPort\n      is_switch_port_up: isSwitchPortUp,\n      // Renamed isServerPortUp\n      hops: hops.map(hop => ({\n        // Send hops as an array of objects\n        patch_panel_id: hop.patch_panel_id,\n        patch_panel_port: hop.patch_panel_port,\n        is_port_up: hop.is_port_up // Include hop port status\n      }))\n    };\n    if (editingConnection) {\n      await onUpdateConnection(editingConnection.id, connectionData);\n    } else {\n      await onAddConnection(connectionData);\n    }\n    // Clear form fields after submission\n    setPcId(\"\");\n    setSwitchId(\"\");\n    setSwitchPort(\"\");\n    setIsSwitchPortUp(true);\n    setHops([]);\n    setEditingConnection(null); // Ensure editing state is cleared\n  };\n  const handleCancelEdit = () => {\n    setEditingConnection(null);\n    // Also clear the form fields\n    setPcId(\"\");\n    setSwitchId(\"\");\n    setSwitchPort(\"\");\n    setIsSwitchPortUp(true);\n    setHops([]);\n  };\n  const handleAddPc = async e => {\n    e.preventDefault();\n    if (newPcName.trim()) {\n      await onAddEntity(\"pcs\", {\n        name: newPcName,\n        ip_address: newPcIp,\n        description: newPcDesc\n      });\n      setNewPcName(\"\");\n      setNewPcIp(\"\");\n      setNewPcDesc(\"\");\n    }\n  };\n  const handleAddPp = async e => {\n    e.preventDefault();\n    if (newPpName.trim()) {\n      await onAddEntity(\"patch_panels\", {\n        name: newPpName,\n        location: newPpLocation,\n        total_ports: parseInt(newPpTotalPorts)\n      });\n      setNewPpName(\"\");\n      setNewPpLocation(\"\");\n      setNewPpTotalPorts(1);\n    }\n  };\n  const handleAddSwitch = async e => {\n    // Renamed handleAddServer\n    e.preventDefault();\n    if (newSwitchName.trim()) {\n      // Renamed newServerName\n      await onAddEntity(\"switches\", {\n        name: newSwitchName,\n        ip_address: newSwitchIp,\n        location: newSwitchLocation,\n        total_ports: parseInt(newSwitchTotalPorts)\n      }); // Renamed newServerName, newServerIp, newServerLocation, newServerTotalPorts and 'servers'\n      setNewSwitchName(\"\"); // Renamed newServerName\n      setNewSwitchIp(\"\"); // Renamed newServerIp\n      setNewSwitchLocation(\"\"); // Renamed newServerLocation\n      setNewSwitchTotalPorts(1); // Renamed newServerTotalPorts\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-3 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-5 rounded-lg shadow-sm border border-gray-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold text-gray-700 mb-3\",\n          children: \"Add New PC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleAddPc,\n          className: \"space-y-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"PC Name\",\n            value: newPcName,\n            onChange: e => setNewPcName(e.target.value),\n            className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"IP Address (Optional)\",\n            value: newPcIp,\n            onChange: e => setNewPcIp(e.target.value),\n            className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Description (Optional)\",\n            value: newPcDesc,\n            onChange: e => setNewPcDesc(e.target.value),\n            className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"w-full bg-indigo-500 text-white p-2 rounded-md hover:bg-indigo-600 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\",\n            children: \"Add PC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-5 rounded-lg shadow-sm border border-gray-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold text-gray-700 mb-3\",\n          children: \"Add New Patch Panel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleAddPp,\n          className: \"space-y-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Patch Panel Name\",\n            value: newPpName,\n            onChange: e => setNewPpName(e.target.value),\n            className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Location (Optional)\",\n            value: newPpLocation,\n            onChange: e => setNewPpLocation(e.target.value),\n            className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Total Ports (e.g., 24)\",\n            value: newPpTotalPorts,\n            onChange: e => setNewPpTotalPorts(e.target.value),\n            className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\",\n            min: \"1\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"w-full bg-green-500 text-white p-2 rounded-md hover:bg-green-600 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500\",\n            children: \"Add Patch Panel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), patchPanels.length > 0 /* Only show if existing PPs */ && /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => onShowPortStatus(\"patch_panels\", e.target.value),\n            className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500 mt-2\",\n            defaultValue: \"\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"View Port Status for Existing PP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this), patchPanels.map(pp => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: pp.id,\n              children: [pp.name, \" (\", pp.location, \")\"]\n            }, pp.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-5 rounded-lg shadow-sm border border-gray-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold text-gray-700 mb-3\",\n          children: \"Add New Switch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), \" \", \"// Renamed \\\"Add New Server\\\"\", /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleAddSwitch,\n          className: \"space-y-3\",\n          children: [\" \", \"// Renamed handleAddServer\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Switch Name\" // Renamed \"Server Name\"\n            ,\n            value: newSwitchName // Renamed newServerName\n            ,\n            onChange: e => setNewSwitchName(e.target.value) // Renamed newServerName\n            ,\n            className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"IP Address (Optional)\",\n            value: newSwitchIp // Renamed newServerIp\n            ,\n            onChange: e => setNewSwitchIp(e.target.value) // Renamed newServerIp\n            ,\n            className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Location (Optional)\",\n            value: newSwitchLocation // Renamed newServerLocation\n            ,\n            onChange: e => setNewSwitchLocation(e.target.value) // Renamed newServerLocation\n            ,\n            className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Total Ports (e.g., 4)\",\n            value: newSwitchTotalPorts // Renamed newServerTotalPorts\n            ,\n            onChange: e => setNewSwitchTotalPorts(e.target.value) // Renamed newServerTotalPorts\n            ,\n            className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\",\n            min: \"1\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"w-full bg-red-500 text-white p-2 rounded-md hover:bg-red-600 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\",\n            children: \"Add Switch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this), switches.length > 0 /* Only show if existing Switches */ && /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => onShowPortStatus(\"switches\", e.target.value),\n            className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500 mt-2\",\n            defaultValue: \"\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"View Port Status for Existing Switch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 17\n            }, this), switches.map(_switch => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: _switch.id,\n              children: [_switch.name, \" (\", _switch.ip_address, \")\"]\n            }, _switch.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"space-y-6 p-6 bg-white rounded-lg shadow-md border border-blue-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-bold text-blue-700 text-center\",\n        children: editingConnection ? \"Edit Existing Connection\" : \"Add New Connection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"pc-select\",\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Select PC:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"pc-select\",\n            value: pcId,\n            onChange: e => setPcId(e.target.value),\n            className: \"w-full p-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"-- Select a PC --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 15\n            }, this), pcs.map(pc => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: pc.id,\n              children: [pc.name, \" (\", pc.ip_address || \"No IP\", \")\"]\n            }, pc.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this), pcs.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-red-500 mt-1\",\n            children: \"Please add a PC first.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"switch-select\",\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Select Switch:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this), \" \", \"// Renamed \\\"Select Server\\\"\", /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"switch-select\" // Renamed server-select\n            ,\n            value: switchId // Renamed serverId\n            ,\n            onChange: e => setSwitchId(e.target.value) // Renamed setServerId\n            ,\n            className: \"w-full p-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"-- Select a Switch --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 15\n            }, this), \" // Renamed \\\"Select a Server\\\"\", switches.map((_switch // Renamed servers to switches, server to _switch\n            ) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: _switch.id,\n              children: [_switch.name, \" (\", _switch.ip_address, \")\"]\n            }, _switch.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 13\n          }, this), switches.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-red-500 mt-1\",\n            children: \"Please add a Switch first.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 15\n          }, this), \" \", \"// Renamed \\\"add a Server\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"md:col-span-2 grid grid-cols-2 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"switch-port\",\n              className: \"block text-sm font-medium text-gray-700 mb-1\",\n              children: \"Switch Port:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 15\n            }, this), \" \", \"// Renamed \\\"Server Port\\\"\", /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"switch-port\" // Renamed server-port\n              ,\n              type: \"text\",\n              placeholder: \"e.g., Eth0/1, GigaPort-03\",\n              value: switchPort // Renamed serverPort\n              ,\n              onChange: e => setSwitchPort(e.target.value) // Renamed setServerPort\n              ,\n              className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center pt-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"is-switch-port-up\" // Renamed is-server-port-up\n              ,\n              type: \"checkbox\",\n              checked: isSwitchPortUp // Renamed isServerPortUp\n              ,\n              onChange: e => setIsSwitchPortUp(e.target.checked) // Renamed setIsServerPortUp\n              ,\n              className: \"h-4 w-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"is-switch-port-up\",\n              className: \"ml-2 block text-sm text-gray-900\",\n              children: [\" \", \"// Renamed is-server-port-up Port Up\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 13\n          }, this), switchId && switches.find(s => s.id === parseInt(switchId)) &&\n          /*#__PURE__*/\n          // Renamed serverId, servers\n          _jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => onShowPortStatus(\"switches\", switchId) // Renamed 'servers', serverId\n            ,\n            className: \"mt-2 px-4 py-2 bg-blue-500 text-white text-sm font-medium rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 col-span-2\",\n            children: [\"View Switch Port Status (\", (_switches$find = switches.find(s => s.id === parseInt(switchId))) === null || _switches$find === void 0 ? void 0 : _switches$find.name, \") // Renamed Server, servers\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 border border-gray-200 rounded-md bg-gray-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-lg font-semibold text-gray-700 mb-3\",\n          children: \"Patch Panel Hops (in sequence)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 11\n        }, this), hops.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-500 mt-2 text-center mb-4\",\n          children: \"Click \\\"Add Patch Panel Hop\\\" to start building the path.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 13\n        }, this), hops.map((hop, index) => {\n          var _patchPanels$find;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col md:flex-row items-end md:items-center space-y-3 md:space-y-0 md:space-x-3 mb-4 p-3 border border-gray-100 rounded-md bg-white shadow-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-grow w-full md:w-auto\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `pp-select-${index}`,\n                className: \"block text-xs font-medium text-gray-600 mb-1\",\n                children: [\"Patch Panel \", index + 1, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: `pp-select-${index}`,\n                value: hop.patch_panel_id,\n                onChange: e => handleHopPatchPanelChange(index, e.target.value),\n                className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500 text-sm\",\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"-- Select Patch Panel --\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 19\n                }, this), patchPanels.map(pp => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: pp.id,\n                  children: [pp.name, \" (\", pp.location, \")\"]\n                }, pp.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 516,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 17\n              }, this), patchPanels.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-xs text-red-500 mt-1\",\n                children: \"Please add a Patch Panel first.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 522,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-grow w-full md:w-auto\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `pp-port-${index}`,\n                className: \"block text-xs font-medium text-gray-600 mb-1\",\n                children: \"Port:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: `pp-port-${index}`,\n                type: \"text\",\n                placeholder: \"Port\",\n                value: hop.patch_panel_port,\n                onChange: e => handleHopPortChange(index, e.target.value),\n                className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500 text-sm\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 534,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center w-full md:w-auto md:pt-5\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                id: `is-pp-port-up-${index}`,\n                type: \"checkbox\",\n                checked: hop.is_port_up,\n                onChange: e => handleHopPortStatusChange(index, e.target.checked),\n                className: \"h-4 w-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `is-pp-port-up-${index}`,\n                className: \"ml-2 block text-sm text-gray-900\",\n                children: \"Port Up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => removeHop(index),\n              className: \"p-2 bg-red-500 text-white rounded-md hover:bg-red-600 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 text-sm flex-shrink-0\",\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 15\n            }, this), hop.patch_panel_id && patchPanels.find(pp => pp.id === parseInt(hop.patch_panel_id)) && /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => onShowPortStatus(\"patch_panels\", hop.patch_panel_id),\n              className: \"w-full md:w-auto mt-2 md:mt-0 px-3 py-2 bg-blue-500 text-white text-xs font-medium rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 flex-shrink-0\",\n              children: [\"View Ports (\", (_patchPanels$find = patchPanels.find(pp => pp.id === parseInt(hop.patch_panel_id))) === null || _patchPanels$find === void 0 ? void 0 : _patchPanels$find.name, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 13\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addHop,\n          className: \"w-full mt-2 py-2 px-4 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\",\n          children: \"Add Patch Panel Hop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end space-x-3 mt-6\",\n        children: [editingConnection && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleCancelEdit,\n          className: \"px-5 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-300 transition-colors duration-200\",\n          children: \"Cancel Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"px-5 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200\",\n          children: editingConnection ? \"Update Connection\" : \"Add Connection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n}\n_s(ConnectionForm, \"+/hFr9YmgCnYOknydVnGCNKcX18=\");\n_c = ConnectionForm;\nexport default ConnectionForm;\nvar _c;\n$RefreshReg$(_c, \"ConnectionForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ConnectionForm","pcs","patchPanels","switches","onAddConnection","onUpdateConnection","editingConnection","setEditingConnection","onAddEntity","onShowPortStatus","_s","_switches$find","pcId","setPcId","switchPort","setSwitchPort","isSwitchPortUp","setIsSwitchPortUp","switchId","setSwitchId","hops","setHops","newPcName","setNewPcName","newPcIp","setNewPcIp","newPcDesc","setNewPcDesc","newPpName","setNewPpName","newPpLocation","setNewPpLocation","newPpTotalPorts","setNewPpTotalPorts","newSwitchName","setNewSwitchName","newSwitchIp","setNewSwitchIp","newSwitchLocation","setNewSwitchLocation","newSwitchTotalPorts","setNewSwitchTotalPorts","pc_id","switch_id","switch_port","is_switch_port_up","undefined","handleHopPatchPanelChange","index","value","updatedHops","patch_panel_id","parseInt","handleHopPortChange","patch_panel_port","handleHopPortStatusChange","is_port_up","addHop","removeHop","filter","_","i","handleSubmit","e","preventDefault","allHopsValid","every","hop","trim","alert","connectionData","map","id","handleCancelEdit","handleAddPc","name","ip_address","description","handleAddPp","location","total_ports","handleAddSwitch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","target","required","min","length","defaultValue","disabled","pp","_switch","htmlFor","pc","checked","find","s","onClick","_patchPanels$find","_c","$RefreshReg$"],"sources":["/app/src/components/ConnectionForm.js"],"sourcesContent":["// frontend/src/components/ConnectionForm.js\n// This component provides forms to add new PCs, Patch Panels, Switches,\n// and to create or edit network connections between them.\n\nimport React, { useState, useEffect } from \"react\";\n\nfunction ConnectionForm({\n  pcs,\n  patchPanels,\n  switches,\n  onAddConnection,\n  onUpdateConnection,\n  editingConnection,\n  setEditingConnection,\n  onAddEntity,\n  onShowPortStatus,\n}) {\n  // Renamed servers to switches\n  const [pcId, setPcId] = useState(\"\");\n  const [switchPort, setSwitchPort] = useState(\"\");\n  const [isSwitchPortUp, setIsSwitchPortUp] = useState(true);\n  const [switchId, setSwitchId] = useState(\"\");\n  // State to manage multiple patch panel hops\n  const [hops, setHops] = useState([]); // Array of { patch_panel_id, patch_panel_port, is_port_up }\n\n  // State for new entity forms (PC, Patch Panel, Switch)\n  const [newPcName, setNewPcName] = useState(\"\");\n  const [newPcIp, setNewPcIp] = useState(\"\");\n  const [newPcDesc, setNewPcDesc] = useState(\"\");\n\n  const [newPpName, setNewPpName] = useState(\"\");\n  const [newPpLocation, setNewPpLocation] = useState(\"\");\n  const [newPpTotalPorts, setNewPpTotalPorts] = useState(1);\n\n  const [newSwitchName, setNewSwitchName] = useState(\"\"); // Renamed newServerName\n  const [newSwitchIp, setNewSwitchIp] = useState(\"\"); // Renamed newServerIp\n  const [newSwitchLocation, setNewSwitchLocation] = useState(\"\"); // Renamed newServerLocation\n  const [newSwitchTotalPorts, setNewSwitchTotalPorts] = useState(1); // Renamed newServerTotalPorts\n\n  // Populate form fields if editing an existing connection\n  useEffect(() => {\n    if (editingConnection) {\n      setPcId(editingConnection.pc_id || \"\");\n      setSwitchId(editingConnection.switch_id || \"\"); // Renamed serverId\n      setSwitchPort(editingConnection.switch_port || \"\"); // Renamed serverPort\n      setIsSwitchPortUp(\n        editingConnection.is_switch_port_up !== undefined\n          ? editingConnection.is_switch_port_up\n          : true\n      ); // Renamed isServerPortUp\n      // When editing, populate hops\n      setHops(editingConnection.hops || []);\n    } else {\n      // Clear form if not editing\n      setPcId(\"\");\n      setSwitchId(\"\");\n      setSwitchPort(\"\");\n      setIsSwitchPortUp(true);\n      setHops([]);\n    }\n  }, [editingConnection]);\n\n  // Handle changes for a specific hop's patch panel ID\n  const handleHopPatchPanelChange = (index, value) => {\n    const updatedHops = [...hops];\n    updatedHops[index].patch_panel_id = parseInt(value);\n    setHops(updatedHops);\n  };\n\n  // Handle changes for a specific hop's patch panel port\n  const handleHopPortChange = (index, value) => {\n    const updatedHops = [...hops];\n    updatedHops[index].patch_panel_port = value;\n    setHops(updatedHops);\n  };\n\n  // Handle changes for a specific hop's port status\n  const handleHopPortStatusChange = (index, value) => {\n    const updatedHops = [...hops];\n    updatedHops[index].is_port_up = value;\n    setHops(updatedHops);\n  };\n\n  // Add a new empty hop to the list\n  const addHop = () => {\n    setHops([\n      ...hops,\n      { patch_panel_id: \"\", patch_panel_port: \"\", is_port_up: true },\n    ]);\n  };\n\n  // Remove a hop by index\n  const removeHop = (index) => {\n    setHops(hops.filter((_, i) => i !== index));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // Validate that all hops have selections\n    const allHopsValid = hops.every(\n      (hop) => hop.patch_panel_id && hop.patch_panel_port.trim()\n    );\n    if (!allHopsValid) {\n      alert(\"Please fill out all patch panel details for each hop.\");\n      return;\n    }\n\n    const connectionData = {\n      pc_id: parseInt(pcId),\n      switch_id: parseInt(switchId), // Renamed serverId\n      switch_port: switchPort, // Renamed serverPort\n      is_switch_port_up: isSwitchPortUp, // Renamed isServerPortUp\n      hops: hops.map((hop) => ({\n        // Send hops as an array of objects\n        patch_panel_id: hop.patch_panel_id,\n        patch_panel_port: hop.patch_panel_port,\n        is_port_up: hop.is_port_up, // Include hop port status\n      })),\n    };\n\n    if (editingConnection) {\n      await onUpdateConnection(editingConnection.id, connectionData);\n    } else {\n      await onAddConnection(connectionData);\n    }\n    // Clear form fields after submission\n    setPcId(\"\");\n    setSwitchId(\"\");\n    setSwitchPort(\"\");\n    setIsSwitchPortUp(true);\n    setHops([]);\n    setEditingConnection(null); // Ensure editing state is cleared\n  };\n\n  const handleCancelEdit = () => {\n    setEditingConnection(null);\n    // Also clear the form fields\n    setPcId(\"\");\n    setSwitchId(\"\");\n    setSwitchPort(\"\");\n    setIsSwitchPortUp(true);\n    setHops([]);\n  };\n\n  const handleAddPc = async (e) => {\n    e.preventDefault();\n    if (newPcName.trim()) {\n      await onAddEntity(\"pcs\", {\n        name: newPcName,\n        ip_address: newPcIp,\n        description: newPcDesc,\n      });\n      setNewPcName(\"\");\n      setNewPcIp(\"\");\n      setNewPcDesc(\"\");\n    }\n  };\n\n  const handleAddPp = async (e) => {\n    e.preventDefault();\n    if (newPpName.trim()) {\n      await onAddEntity(\"patch_panels\", {\n        name: newPpName,\n        location: newPpLocation,\n        total_ports: parseInt(newPpTotalPorts),\n      });\n      setNewPpName(\"\");\n      setNewPpLocation(\"\");\n      setNewPpTotalPorts(1);\n    }\n  };\n\n  const handleAddSwitch = async (e) => {\n    // Renamed handleAddServer\n    e.preventDefault();\n    if (newSwitchName.trim()) {\n      // Renamed newServerName\n      await onAddEntity(\"switches\", {\n        name: newSwitchName,\n        ip_address: newSwitchIp,\n        location: newSwitchLocation,\n        total_ports: parseInt(newSwitchTotalPorts),\n      }); // Renamed newServerName, newServerIp, newServerLocation, newServerTotalPorts and 'servers'\n      setNewSwitchName(\"\"); // Renamed newServerName\n      setNewSwitchIp(\"\"); // Renamed newServerIp\n      setNewSwitchLocation(\"\"); // Renamed newServerLocation\n      setNewSwitchTotalPorts(1); // Renamed newServerTotalPorts\n    }\n  };\n\n  return (\n    <div className=\"space-y-8\">\n      {/* Forms to Add New Entities (PC, Patch Panel, Switch) */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        {/* Add New PC Form */}\n        <div className=\"bg-white p-5 rounded-lg shadow-sm border border-gray-100\">\n          <h3 className=\"text-lg font-semibold text-gray-700 mb-3\">\n            Add New PC\n          </h3>{\" \"}\n          {/* Simplified \"Add New PC or Server\" */}\n          <form onSubmit={handleAddPc} className=\"space-y-3\">\n            <input\n              type=\"text\"\n              placeholder=\"PC Name\"\n              value={newPcName}\n              onChange={(e) => setNewPcName(e.target.value)}\n              className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n              required\n            />\n            <input\n              type=\"text\"\n              placeholder=\"IP Address (Optional)\"\n              value={newPcIp}\n              onChange={(e) => setNewPcIp(e.target.value)}\n              className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Description (Optional)\"\n              value={newPcDesc}\n              onChange={(e) => setNewPcDesc(e.target.value)}\n              className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n            />\n            <button\n              type=\"submit\"\n              className=\"w-full bg-indigo-500 text-white p-2 rounded-md hover:bg-indigo-600 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n            >\n              Add PC\n            </button>\n          </form>\n        </div>\n\n        {/* Add New Patch Panel Form */}\n        <div className=\"bg-white p-5 rounded-lg shadow-sm border border-gray-100\">\n          <h3 className=\"text-lg font-semibold text-gray-700 mb-3\">\n            Add New Patch Panel\n          </h3>\n          <form onSubmit={handleAddPp} className=\"space-y-3\">\n            <input\n              type=\"text\"\n              placeholder=\"Patch Panel Name\"\n              value={newPpName}\n              onChange={(e) => setNewPpName(e.target.value)}\n              className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n              required\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Location (Optional)\"\n              value={newPpLocation}\n              onChange={(e) => setNewPpLocation(e.target.value)}\n              className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n            />\n            <input\n              type=\"number\"\n              placeholder=\"Total Ports (e.g., 24)\"\n              value={newPpTotalPorts}\n              onChange={(e) => setNewPpTotalPorts(e.target.value)}\n              className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n              min=\"1\"\n              required\n            />\n            <button\n              type=\"submit\"\n              className=\"w-full bg-green-500 text-white p-2 rounded-md hover:bg-green-600 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500\"\n            >\n              Add Patch Panel\n            </button>\n            {patchPanels.length > 0 /* Only show if existing PPs */ && (\n              <select\n                onChange={(e) =>\n                  onShowPortStatus(\"patch_panels\", e.target.value)\n                }\n                className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500 mt-2\"\n                defaultValue=\"\"\n              >\n                <option value=\"\" disabled>\n                  View Port Status for Existing PP\n                </option>\n                {patchPanels.map((pp) => (\n                  <option key={pp.id} value={pp.id}>\n                    {pp.name} ({pp.location})\n                  </option>\n                ))}\n              </select>\n            )}\n          </form>\n        </div>\n\n        {/* Add New Switch Form (Renamed from Add New Server Form) */}\n        <div className=\"bg-white p-5 rounded-lg shadow-sm border border-gray-100\">\n          <h3 className=\"text-lg font-semibold text-gray-700 mb-3\">\n            Add New Switch\n          </h3>{\" \"}\n          // Renamed \"Add New Server\"\n          <form onSubmit={handleAddSwitch} className=\"space-y-3\">\n            {\" \"}\n            // Renamed handleAddServer\n            <input\n              type=\"text\"\n              placeholder=\"Switch Name\" // Renamed \"Server Name\"\n              value={newSwitchName} // Renamed newServerName\n              onChange={(e) => setNewSwitchName(e.target.value)} // Renamed newServerName\n              className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n              required\n            />\n            <input\n              type=\"text\"\n              placeholder=\"IP Address (Optional)\"\n              value={newSwitchIp} // Renamed newServerIp\n              onChange={(e) => setNewSwitchIp(e.target.value)} // Renamed newServerIp\n              className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Location (Optional)\"\n              value={newSwitchLocation} // Renamed newServerLocation\n              onChange={(e) => setNewSwitchLocation(e.target.value)} // Renamed newServerLocation\n              className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n            />\n            <input\n              type=\"number\"\n              placeholder=\"Total Ports (e.g., 4)\"\n              value={newSwitchTotalPorts} // Renamed newServerTotalPorts\n              onChange={(e) => setNewSwitchTotalPorts(e.target.value)} // Renamed newServerTotalPorts\n              className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n              min=\"1\"\n              required\n            />\n            <button\n              type=\"submit\"\n              className=\"w-full bg-red-500 text-white p-2 rounded-md hover:bg-red-600 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\n            >\n              Add Switch\n            </button>\n            {switches.length > 0 /* Only show if existing Switches */ && (\n              <select\n                onChange={(e) => onShowPortStatus(\"switches\", e.target.value)}\n                className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500 mt-2\"\n                defaultValue=\"\"\n              >\n                <option value=\"\" disabled>\n                  View Port Status for Existing Switch\n                </option>\n                {switches.map((_switch) => (\n                  <option key={_switch.id} value={_switch.id}>\n                    {_switch.name} ({_switch.ip_address})\n                  </option>\n                ))}\n              </select>\n            )}\n          </form>\n        </div>\n      </div>\n\n      {/* Connection Form */}\n      <form\n        onSubmit={handleSubmit}\n        className=\"space-y-6 p-6 bg-white rounded-lg shadow-md border border-blue-200\"\n      >\n        <h3 className=\"text-xl font-bold text-blue-700 text-center\">\n          {editingConnection\n            ? \"Edit Existing Connection\"\n            : \"Add New Connection\"}\n        </h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          {/* PC Selection */}\n          <div>\n            <label\n              htmlFor=\"pc-select\"\n              className=\"block text-sm font-medium text-gray-700 mb-1\"\n            >\n              Select PC:\n            </label>\n            <select\n              id=\"pc-select\"\n              value={pcId}\n              onChange={(e) => setPcId(e.target.value)}\n              className=\"w-full p-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500\"\n              required\n            >\n              <option value=\"\">-- Select a PC --</option>\n              {pcs.map((pc) => (\n                <option key={pc.id} value={pc.id}>\n                  {pc.name} ({pc.ip_address || \"No IP\"})\n                </option>\n              ))}\n            </select>\n            {pcs.length === 0 && (\n              <p className=\"text-sm text-red-500 mt-1\">\n                Please add a PC first.\n              </p>\n            )}\n          </div>\n\n          {/* Switch Selection (Renamed from Server Selection) */}\n          <div>\n            <label\n              htmlFor=\"switch-select\"\n              className=\"block text-sm font-medium text-gray-700 mb-1\"\n            >\n              Select Switch:\n            </label>{\" \"}\n            // Renamed \"Select Server\"\n            <select\n              id=\"switch-select\" // Renamed server-select\n              value={switchId} // Renamed serverId\n              onChange={(e) => setSwitchId(e.target.value)} // Renamed setServerId\n              className=\"w-full p-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500\"\n              required\n            >\n              <option value=\"\">-- Select a Switch --</option> // Renamed \"Select\n              a Server\"\n              {switches.map(\n                (\n                  _switch // Renamed servers to switches, server to _switch\n                ) => (\n                  <option key={_switch.id} value={_switch.id}>\n                    {_switch.name} ({_switch.ip_address})\n                  </option>\n                )\n              )}\n            </select>\n            {switches.length === 0 && (\n              <p className=\"text-sm text-red-500 mt-1\">\n                Please add a Switch first.\n              </p>\n            )}{\" \"}\n            // Renamed \"add a Server\"\n          </div>\n\n          {/* Switch Port Input and Status (Renamed from Server Port Input and Status) */}\n          <div className=\"md:col-span-2 grid grid-cols-2 gap-4\">\n            <div>\n              <label\n                htmlFor=\"switch-port\"\n                className=\"block text-sm font-medium text-gray-700 mb-1\"\n              >\n                Switch Port:\n              </label>{\" \"}\n              // Renamed \"Server Port\"\n              <input\n                id=\"switch-port\" // Renamed server-port\n                type=\"text\"\n                placeholder=\"e.g., Eth0/1, GigaPort-03\"\n                value={switchPort} // Renamed serverPort\n                onChange={(e) => setSwitchPort(e.target.value)} // Renamed setServerPort\n                className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                required\n              />\n            </div>\n            <div className=\"flex items-center pt-5\">\n              <input\n                id=\"is-switch-port-up\" // Renamed is-server-port-up\n                type=\"checkbox\"\n                checked={isSwitchPortUp} // Renamed isServerPortUp\n                onChange={(e) => setIsSwitchPortUp(e.target.checked)} // Renamed setIsServerPortUp\n                className=\"h-4 w-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\n              />\n              <label\n                htmlFor=\"is-switch-port-up\"\n                className=\"ml-2 block text-sm text-gray-900\"\n              >\n                {\" \"}\n                // Renamed is-server-port-up Port Up\n              </label>\n            </div>\n            {switchId &&\n              switches.find((s) => s.id === parseInt(switchId)) && ( // Renamed serverId, servers\n                <button\n                  type=\"button\"\n                  onClick={() => onShowPortStatus(\"switches\", switchId)} // Renamed 'servers', serverId\n                  className=\"mt-2 px-4 py-2 bg-blue-500 text-white text-sm font-medium rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 col-span-2\"\n                >\n                  View Switch Port Status (\n                  {switches.find((s) => s.id === parseInt(switchId))?.name}) //\n                  Renamed Server, servers\n                </button>\n              )}\n          </div>\n        </div>\n\n        {/* Dynamic Patch Panel Hops Section */}\n        <div className=\"p-4 border border-gray-200 rounded-md bg-gray-50\">\n          <h4 className=\"text-lg font-semibold text-gray-700 mb-3\">\n            Patch Panel Hops (in sequence)\n          </h4>\n          {hops.length === 0 && (\n            <p className=\"text-sm text-gray-500 mt-2 text-center mb-4\">\n              Click \"Add Patch Panel Hop\" to start building the path.\n            </p>\n          )}\n          {hops.map((hop, index) => (\n            <div\n              key={index}\n              className=\"flex flex-col md:flex-row items-end md:items-center space-y-3 md:space-y-0 md:space-x-3 mb-4 p-3 border border-gray-100 rounded-md bg-white shadow-sm\"\n            >\n              <div className=\"flex-grow w-full md:w-auto\">\n                <label\n                  htmlFor={`pp-select-${index}`}\n                  className=\"block text-xs font-medium text-gray-600 mb-1\"\n                >\n                  Patch Panel {index + 1}:\n                </label>\n                <select\n                  id={`pp-select-${index}`}\n                  value={hop.patch_panel_id}\n                  onChange={(e) =>\n                    handleHopPatchPanelChange(index, e.target.value)\n                  }\n                  className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500 text-sm\"\n                  required\n                >\n                  <option value=\"\">-- Select Patch Panel --</option>\n                  {patchPanels.map((pp) => (\n                    <option key={pp.id} value={pp.id}>\n                      {pp.name} ({pp.location})\n                    </option>\n                  ))}\n                </select>\n                {patchPanels.length === 0 && (\n                  <p className=\"text-xs text-red-500 mt-1\">\n                    Please add a Patch Panel first.\n                  </p>\n                )}\n              </div>\n              <div className=\"flex-grow w-full md:w-auto\">\n                <label\n                  htmlFor={`pp-port-${index}`}\n                  className=\"block text-xs font-medium text-gray-600 mb-1\"\n                >\n                  Port:\n                </label>\n                <input\n                  id={`pp-port-${index}`}\n                  type=\"text\"\n                  placeholder=\"Port\"\n                  value={hop.patch_panel_port}\n                  onChange={(e) => handleHopPortChange(index, e.target.value)}\n                  className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500 text-sm\"\n                  required\n                />\n              </div>\n              <div className=\"flex items-center w-full md:w-auto md:pt-5\">\n                <input\n                  id={`is-pp-port-up-${index}`}\n                  type=\"checkbox\"\n                  checked={hop.is_port_up}\n                  onChange={(e) =>\n                    handleHopPortStatusChange(index, e.target.checked)\n                  }\n                  className=\"h-4 w-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\n                />\n                <label\n                  htmlFor={`is-pp-port-up-${index}`}\n                  className=\"ml-2 block text-sm text-gray-900\"\n                >\n                  Port Up\n                </label>\n              </div>\n              <button\n                type=\"button\"\n                onClick={() => removeHop(index)}\n                className=\"p-2 bg-red-500 text-white rounded-md hover:bg-red-600 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 text-sm flex-shrink-0\"\n              >\n                Remove\n              </button>\n              {hop.patch_panel_id &&\n                patchPanels.find(\n                  (pp) => pp.id === parseInt(hop.patch_panel_id)\n                ) && (\n                  <button\n                    type=\"button\"\n                    onClick={() =>\n                      onShowPortStatus(\"patch_panels\", hop.patch_panel_id)\n                    }\n                    className=\"w-full md:w-auto mt-2 md:mt-0 px-3 py-2 bg-blue-500 text-white text-xs font-medium rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 flex-shrink-0\"\n                  >\n                    View Ports (\n                    {\n                      patchPanels.find(\n                        (pp) => pp.id === parseInt(hop.patch_panel_id)\n                      )?.name\n                    }\n                    )\n                  </button>\n                )}\n            </div>\n          ))}\n          <button\n            type=\"button\"\n            onClick={addHop}\n            className=\"w-full mt-2 py-2 px-4 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n          >\n            Add Patch Panel Hop\n          </button>\n        </div>\n\n        {/* Action Buttons for Connection Form */}\n        <div className=\"flex justify-end space-x-3 mt-6\">\n          {editingConnection && (\n            <button\n              type=\"button\"\n              onClick={handleCancelEdit}\n              className=\"px-5 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-300 transition-colors duration-200\"\n            >\n              Cancel Edit\n            </button>\n          )}\n          <button\n            type=\"submit\"\n            className=\"px-5 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200\"\n          >\n            {editingConnection ? \"Update Connection\" : \"Add Connection\"}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default ConnectionForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}