{"ast":null,"code":"var _jsxFileName = \"/app/src/components/SwitchDiagramModal.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// frontend/src/components/SwitchDiagramModal.js\n// ... (existing imports)\n\nfunction SwitchDiagramModal({\n  isOpen,\n  onClose,\n  selectedSwitch,\n  connections,\n  pcs,\n  patchPanels,\n  switches\n}) {\n  _s();\n  // ... (existing states and useCallback hooks)\n\n  // Tooltip handlers for React Flow nodes\n  const onNodeMouseEnter = useCallback((event, node) => {\n    setHoveredNodeData({\n      type: node.data.type,\n      details: node.data.details\n    });\n    setTooltipPosition({\n      x: event.clientX,\n      y: event.clientY\n    });\n  }, []);\n  const onNodeMouseLeave = useCallback(() => {\n    setHoveredNodeData(null);\n  }, []);\n\n  // Effect to prepare data for React Flow whenever relevant props change\n  useEffect(() => {\n    // Ensure all necessary data is available before processing\n    if (!selectedSwitch || !connections || !pcs || !patchPanels) {\n      console.log(\"Missing essential data for diagram:\", {\n        selectedSwitch,\n        connections,\n        pcs,\n        patchPanels\n      });\n      setNodes([]); // Clear nodes if data is missing\n      setEdges([]); // Clear edges\n      return;\n    }\n    const rfNodes = [];\n    const rfEdges = [];\n    const center = {\n      x: 400,\n      y: 300\n    };\n    const pcRadius = 250; // Radius for PCs\n    const ppRadius = 150; // Radius for PPs\n\n    // 1. Add the central Switch node\n    rfNodes.push({\n      id: `switch-${selectedSwitch.id}`,\n      position: {\n        x: center.x - 50,\n        y: center.y - 50\n      },\n      data: {\n        label: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col items-center p-2 bg-red-500 text-white rounded-md shadow-md text-center\",\n          children: [/*#__PURE__*/_jsxDEV(Server, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-bold text-sm\",\n            children: selectedSwitch.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xs\",\n            children: selectedSwitch.ip_address || \"N/A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this),\n        type: \"Switch\",\n        details: selectedSwitch\n      },\n      style: {\n        width: NODE_WIDTH,\n        height: NODE_HEIGHT,\n        borderRadius: \"8px\"\n      }\n    });\n\n    // Maps to track unique PCs and PPs to avoid duplicate nodes\n    const uniquePcMap = new Map(); // id -> pc_data\n    const uniquePpMap = new Map(); // id -> pp_data\n\n    // Filter connections that involve the selected switch as the final destination\n    const connectionsToSelectedSwitch = connections.filter(conn => {\n      const isConnected = Number(conn.switch_id) === Number(selectedSwitch.id); // Ensure numeric comparison\n      const pcExists = !!pcs.find(p => Number(p.id) === Number(conn.pc_id)); // Check if PC object for this ID actually exists\n      // console.log(`Filter conn ${conn.id}: switch_id=${conn.switch_id}, selectedSwitch.id=${selectedSwitch.id}, connected=${isConnected}, pc_id=${conn.pc_id}, pcExists=${pcExists}`);\n      return isConnected && pcExists;\n    });\n\n    // console.log(\"Connections passing preliminary filter:\", connectionsToSelectedSwitch);\n\n    // Iterate over filtered connections to build nodes and edges\n    connectionsToSelectedSwitch.forEach(conn => {\n      // Get full PC data\n      const pcData = pcs.find(p => Number(p.id) === Number(conn.pc_id));\n      if (!pcData) {\n        console.warn(`PC with ID ${conn.pc_id} not found in PCs list for connection ${conn.id}. Skipping this connection's PC node.`);\n        return; // Skip if PC data is genuinely missing\n      }\n\n      // Add PC node if not already added\n      if (!uniquePcMap.has(pcData.id)) {\n        rfNodes.push({\n          id: `pc-${pcData.id}`,\n          // Use pcData.id for React Flow node ID\n          position: {\n            x: -300,\n            y: 0\n          },\n          // Placeholder, layout algorithm will position\n          data: {\n            label: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col items-center p-2 bg-indigo-500 text-white rounded-md shadow-md text-center\",\n              children: [/*#__PURE__*/_jsxDEV(Laptop, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-bold text-sm\",\n                children: pcData.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xs\",\n                children: pcData.ip_address || \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this),\n            type: \"PC\",\n            details: pcData // Store full details for tooltip\n          },\n          style: {\n            width: NODE_WIDTH,\n            height: NODE_HEIGHT,\n            borderRadius: \"8px\"\n          }\n        });\n        uniquePcMap.set(pcData.id, pcData);\n      }\n      let currentSourceNodeId = `pc-${pcData.id}`; // Path starts from this PC's node ID\n\n      // Handle hops\n      conn.hops.forEach(hop => {\n        const ppData = patchPanels.find(p => Number(p.id) === Number(hop.patch_panel_id));\n        if (!ppData) {\n          console.warn(`Patch Panel with ID ${hop.patch_panel_id} not found in Patch Panels list for connection ${conn.id}. Skipping this hop.`);\n          return; // Skip if PP data is genuinely missing\n        }\n        const ppNodeId = `pp-${ppData.id}`; // Use ppData.id for React Flow node ID\n        // Add Patch Panel node if not already added\n        if (!uniquePpMap.has(ppData.id)) {\n          rfNodes.push({\n            id: ppNodeId,\n            position: {\n              x: -150,\n              y: 0\n            },\n            // Placeholder, layout algorithm will position\n            data: {\n              label: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-col items-center p-1 bg-blue-500 text-white rounded-md shadow-md text-center text-xs\",\n                children: [/*#__PURE__*/_jsxDEV(Split, {\n                  size: 15\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-bold\",\n                  children: ppData.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this),\n              type: \"PatchPanel\",\n              details: ppData // Store full details for tooltip\n            },\n            style: {\n              width: PP_NODE_WIDTH,\n              height: PP_NODE_HEIGHT,\n              borderRadius: \"8px\"\n            }\n          });\n          uniquePpMap.set(ppData.id, ppData);\n        }\n\n        // Add edge from current source to this hop (Patch Panel)\n        rfEdges.push({\n          id: `edge-${conn.id}-hop-${hop.sequence}`,\n          // Use connection ID + hop sequence for unique edge ID\n          source: currentSourceNodeId,\n          target: ppNodeId,\n          type: \"default\",\n          animated: !hop.is_port_up,\n          label: `Port: ${hop.patch_panel_port}`,\n          labelBgStyle: {\n            fill: \"transparent\"\n          },\n          style: {\n            stroke: hop.is_port_up ? \"#888\" : \"red\",\n            strokeWidth: 2,\n            strokeDasharray: hop.is_port_up ? \"0\" : \"5 5\"\n          },\n          data: {\n            status: hop.is_port_up ? \"Up\" : \"Down\",\n            port: hop.patch_panel_port,\n            type: \"PP-Segment\"\n          }\n        });\n        currentSourceNodeId = ppNodeId; // Next segment starts from this patch panel\n      });\n\n      // Add final edge from last hop (or PC directly if no hops) to the Switch\n      rfEdges.push({\n        id: `edge-${conn.id}-to-switch`,\n        // Unique ID for the final segment\n        source: currentSourceNodeId,\n        target: `switch-${selectedSwitch.id}`,\n        type: \"default\",\n        animated: !conn.is_switch_port_up,\n        label: `Sw Port: ${conn.switch_port}`,\n        labelBgStyle: {\n          fill: \"transparent\"\n        },\n        style: {\n          stroke: conn.is_switch_port_up ? \"green\" : \"red\",\n          strokeWidth: 3\n        },\n        data: {\n          status: conn.is_switch_port_up ? \"Up\" : \"Down\",\n          port: conn.switch_port,\n          type: \"Switch-Final\"\n        }\n      });\n    });\n\n    // Update React Flow states\n    setNodes(rfNodes);\n    setEdges(rfEdges);\n  }, [selectedSwitch, connections, pcs, patchPanels, switches, setNodes, setEdges]); // Dependencies\n\n  if (!isOpen || !selectedSwitch) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-gray-600 bg-opacity-50 flex justify-center items-center z-50 p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow-xl w-full max-w-6xl h-[90vh] overflow-hidden flex flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center p-4 border-b border-gray-200 bg-gray-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold text-gray-800 flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Network, {\n            size: 24,\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), \" Network Diagram:\", \" \", selectedSwitch.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"text-gray-500 hover:text-gray-700 p-1 rounded-full hover:bg-gray-100 transition-colors duration-200\",\n          title: \"Close Diagram\",\n          children: /*#__PURE__*/_jsxDEV(XCircle, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flexGrow: 1,\n          height: \"100%\",\n          position: \"relative\"\n        },\n        children: nodes.length > 0 ? /*#__PURE__*/_jsxDEV(ReactFlow, {\n          nodes: nodes,\n          edges: edges,\n          onNodesChange: onNodesChange,\n          onEdgesChange: onEdgesChange,\n          onConnect: onConnect,\n          onNodeMouseEnter: onNodeMouseEnter,\n          onNodeMouseLeave: onNodeMouseLeave,\n          fitView: true,\n          attributionPosition: \"bottom-left\",\n          children: [/*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Background, {\n            variant: \"dots\",\n            gap: 12,\n            size: 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-xl text-gray-600\",\n          children: \"No PCs found connected to this switch.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), hoveredNodeData && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"fixed\",\n          left: tooltipPosition.x + 15,\n          top: tooltipPosition.y + 15,\n          zIndex: 1000\n        },\n        className: \"bg-gray-800 text-white text-xs p-2 rounded-md shadow-lg pointer-events-none whitespace-nowrap opacity-90 animate-fade-in-down\",\n        children: [hoveredNodeData.type === \"Switch\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Switch:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 19\n            }, this), \" \", hoveredNodeData.details.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"IP: \", hoveredNodeData.details.ip_address || \"N/A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Location: \", hoveredNodeData.details.location_name || \"N/A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Model: \", hoveredNodeData.details.model || \"N/A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total Ports: \", hoveredNodeData.details.total_ports]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), hoveredNodeData.type === \"PC\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"PC:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 19\n            }, this), \" \", hoveredNodeData.details.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"IP: \", hoveredNodeData.details.ip_address || \"N/A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"OS: \", hoveredNodeData.details.operating_system || \"N/A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Office: \", hoveredNodeData.details.office || \"N/A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Username: \", hoveredNodeData.details.username || \"N/A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"In Domain: \", hoveredNodeData.details.in_domain ? \"Yes\" : \"No\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), hoveredNodeData.type === \"PatchPanel\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Patch Panel:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 19\n            }, this), \" \", hoveredNodeData.details.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Location: \", hoveredNodeData.details.location_name || \"N/A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Rack: \", hoveredNodeData.details.rack_name || \"N/A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total Ports: \", hoveredNodeData.details.total_ports]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 border-t border-gray-200 bg-gray-50 text-sm text-center flex justify-center gap-4 flex-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Plug, {\n            size: 16,\n            className: \"text-green-500 mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this), \" Port Up\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(WifiOff, {\n            size: 16,\n            className: \"text-red-500 mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this), \" Port Down\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Server, {\n            size: 16,\n            className: \"text-red-500 mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this), \" Switch\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Laptop, {\n            size: 16,\n            className: \"text-indigo-500 mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this), \" PC\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Split, {\n            size: 16,\n            className: \"text-blue-500 mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), \" Patch Panel\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center ml-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"w-4 h-2 bg-green-500 inline-block mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-1\",\n            children: \"Active Line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"w-4 h-2 bg-red-500 inline-block mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-1\",\n            children: \"Inactive Line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"w-4 h-2 bg-gray-500 inline-block mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-1\",\n            children: \"Intermediate Path\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n}\n\n// Wrap the component in React.memo for performance\n_s(SwitchDiagramModal, \"XYKtxjVyZv26v8A0uWNFX/bHguc=\");\n_c = SwitchDiagramModal;\nexport default _c2 = React.memo(SwitchDiagramModal);\nvar _c, _c2;\n$RefreshReg$(_c, \"SwitchDiagramModal\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["SwitchDiagramModal","isOpen","onClose","selectedSwitch","connections","pcs","patchPanels","switches","_s","onNodeMouseEnter","useCallback","event","node","setHoveredNodeData","type","data","details","setTooltipPosition","x","clientX","y","clientY","onNodeMouseLeave","useEffect","console","log","setNodes","setEdges","rfNodes","rfEdges","center","pcRadius","ppRadius","push","id","position","label","_jsxDEV","className","children","Server","size","fileName","_jsxFileName","lineNumber","columnNumber","name","ip_address","style","width","NODE_WIDTH","height","NODE_HEIGHT","borderRadius","uniquePcMap","Map","uniquePpMap","connectionsToSelectedSwitch","filter","conn","isConnected","Number","switch_id","pcExists","find","p","pc_id","forEach","pcData","warn","has","Laptop","set","currentSourceNodeId","hops","hop","ppData","patch_panel_id","ppNodeId","Split","PP_NODE_WIDTH","PP_NODE_HEIGHT","sequence","source","target","animated","is_port_up","patch_panel_port","labelBgStyle","fill","stroke","strokeWidth","strokeDasharray","status","port","is_switch_port_up","switch_port","Network","onClick","title","XCircle","flexGrow","nodes","length","ReactFlow","edges","onNodesChange","onEdgesChange","onConnect","fitView","attributionPosition","MiniMap","Controls","Background","variant","gap","hoveredNodeData","left","tooltipPosition","top","zIndex","_Fragment","location_name","model","total_ports","operating_system","office","username","in_domain","rack_name","Plug","WifiOff","_c","_c2","React","memo","$RefreshReg$"],"sources":["/app/src/components/SwitchDiagramModal.js"],"sourcesContent":["// frontend/src/components/SwitchDiagramModal.js\n// ... (existing imports)\n\nfunction SwitchDiagramModal({\n  isOpen,\n  onClose,\n  selectedSwitch,\n  connections,\n  pcs,\n  patchPanels,\n  switches,\n}) {\n  // ... (existing states and useCallback hooks)\n\n  // Tooltip handlers for React Flow nodes\n  const onNodeMouseEnter = useCallback((event, node) => {\n    setHoveredNodeData({ type: node.data.type, details: node.data.details });\n    setTooltipPosition({ x: event.clientX, y: event.clientY });\n  }, []);\n\n  const onNodeMouseLeave = useCallback(() => {\n    setHoveredNodeData(null);\n  }, []);\n\n  // Effect to prepare data for React Flow whenever relevant props change\n  useEffect(() => {\n    // Ensure all necessary data is available before processing\n    if (!selectedSwitch || !connections || !pcs || !patchPanels) {\n      console.log(\"Missing essential data for diagram:\", {\n        selectedSwitch,\n        connections,\n        pcs,\n        patchPanels,\n      });\n      setNodes([]); // Clear nodes if data is missing\n      setEdges([]); // Clear edges\n      return;\n    }\n\n    const rfNodes = [];\n    const rfEdges = [];\n\n    const center = { x: 400, y: 300 };\n    const pcRadius = 250; // Radius for PCs\n    const ppRadius = 150; // Radius for PPs\n\n    // 1. Add the central Switch node\n    rfNodes.push({\n      id: `switch-${selectedSwitch.id}`,\n      position: { x: center.x - 50, y: center.y - 50 },\n      data: {\n        label: (\n          <div className=\"flex flex-col items-center p-2 bg-red-500 text-white rounded-md shadow-md text-center\">\n            <Server size={24} />\n            <span className=\"font-bold text-sm\">{selectedSwitch.name}</span>\n            <span className=\"text-xs\">\n              {selectedSwitch.ip_address || \"N/A\"}\n            </span>\n          </div>\n        ),\n        type: \"Switch\",\n        details: selectedSwitch,\n      },\n      style: { width: NODE_WIDTH, height: NODE_HEIGHT, borderRadius: \"8px\" },\n    });\n\n    // Maps to track unique PCs and PPs to avoid duplicate nodes\n    const uniquePcMap = new Map(); // id -> pc_data\n    const uniquePpMap = new Map(); // id -> pp_data\n\n    // Filter connections that involve the selected switch as the final destination\n    const connectionsToSelectedSwitch = connections.filter((conn) => {\n      const isConnected = Number(conn.switch_id) === Number(selectedSwitch.id); // Ensure numeric comparison\n      const pcExists = !!pcs.find((p) => Number(p.id) === Number(conn.pc_id)); // Check if PC object for this ID actually exists\n      // console.log(`Filter conn ${conn.id}: switch_id=${conn.switch_id}, selectedSwitch.id=${selectedSwitch.id}, connected=${isConnected}, pc_id=${conn.pc_id}, pcExists=${pcExists}`);\n      return isConnected && pcExists;\n    });\n\n    // console.log(\"Connections passing preliminary filter:\", connectionsToSelectedSwitch);\n\n    // Iterate over filtered connections to build nodes and edges\n    connectionsToSelectedSwitch.forEach((conn) => {\n      // Get full PC data\n      const pcData = pcs.find((p) => Number(p.id) === Number(conn.pc_id));\n      if (!pcData) {\n        console.warn(\n          `PC with ID ${conn.pc_id} not found in PCs list for connection ${conn.id}. Skipping this connection's PC node.`\n        );\n        return; // Skip if PC data is genuinely missing\n      }\n\n      // Add PC node if not already added\n      if (!uniquePcMap.has(pcData.id)) {\n        rfNodes.push({\n          id: `pc-${pcData.id}`, // Use pcData.id for React Flow node ID\n          position: { x: -300, y: 0 }, // Placeholder, layout algorithm will position\n          data: {\n            label: (\n              <div className=\"flex flex-col items-center p-2 bg-indigo-500 text-white rounded-md shadow-md text-center\">\n                <Laptop size={20} />\n                <span className=\"font-bold text-sm\">{pcData.name}</span>\n                <span className=\"text-xs\">{pcData.ip_address || \"N/A\"}</span>\n              </div>\n            ),\n            type: \"PC\",\n            details: pcData, // Store full details for tooltip\n          },\n          style: {\n            width: NODE_WIDTH,\n            height: NODE_HEIGHT,\n            borderRadius: \"8px\",\n          },\n        });\n        uniquePcMap.set(pcData.id, pcData);\n      }\n\n      let currentSourceNodeId = `pc-${pcData.id}`; // Path starts from this PC's node ID\n\n      // Handle hops\n      conn.hops.forEach((hop) => {\n        const ppData = patchPanels.find(\n          (p) => Number(p.id) === Number(hop.patch_panel_id)\n        );\n        if (!ppData) {\n          console.warn(\n            `Patch Panel with ID ${hop.patch_panel_id} not found in Patch Panels list for connection ${conn.id}. Skipping this hop.`\n          );\n          return; // Skip if PP data is genuinely missing\n        }\n\n        const ppNodeId = `pp-${ppData.id}`; // Use ppData.id for React Flow node ID\n        // Add Patch Panel node if not already added\n        if (!uniquePpMap.has(ppData.id)) {\n          rfNodes.push({\n            id: ppNodeId,\n            position: { x: -150, y: 0 }, // Placeholder, layout algorithm will position\n            data: {\n              label: (\n                <div className=\"flex flex-col items-center p-1 bg-blue-500 text-white rounded-md shadow-md text-center text-xs\">\n                  <Split size={15} />\n                  <span className=\"font-bold\">{ppData.name}</span>\n                </div>\n              ),\n              type: \"PatchPanel\",\n              details: ppData, // Store full details for tooltip\n            },\n            style: {\n              width: PP_NODE_WIDTH,\n              height: PP_NODE_HEIGHT,\n              borderRadius: \"8px\",\n            },\n          });\n          uniquePpMap.set(ppData.id, ppData);\n        }\n\n        // Add edge from current source to this hop (Patch Panel)\n        rfEdges.push({\n          id: `edge-${conn.id}-hop-${hop.sequence}`, // Use connection ID + hop sequence for unique edge ID\n          source: currentSourceNodeId,\n          target: ppNodeId,\n          type: \"default\",\n          animated: !hop.is_port_up,\n          label: `Port: ${hop.patch_panel_port}`,\n          labelBgStyle: { fill: \"transparent\" },\n          style: {\n            stroke: hop.is_port_up ? \"#888\" : \"red\",\n            strokeWidth: 2,\n            strokeDasharray: hop.is_port_up ? \"0\" : \"5 5\",\n          },\n          data: {\n            status: hop.is_port_up ? \"Up\" : \"Down\",\n            port: hop.patch_panel_port,\n            type: \"PP-Segment\",\n          },\n        });\n        currentSourceNodeId = ppNodeId; // Next segment starts from this patch panel\n      });\n\n      // Add final edge from last hop (or PC directly if no hops) to the Switch\n      rfEdges.push({\n        id: `edge-${conn.id}-to-switch`, // Unique ID for the final segment\n        source: currentSourceNodeId,\n        target: `switch-${selectedSwitch.id}`,\n        type: \"default\",\n        animated: !conn.is_switch_port_up,\n        label: `Sw Port: ${conn.switch_port}`,\n        labelBgStyle: { fill: \"transparent\" },\n        style: {\n          stroke: conn.is_switch_port_up ? \"green\" : \"red\",\n          strokeWidth: 3,\n        },\n        data: {\n          status: conn.is_switch_port_up ? \"Up\" : \"Down\",\n          port: conn.switch_port,\n          type: \"Switch-Final\",\n        },\n      });\n    });\n\n    // Update React Flow states\n    setNodes(rfNodes);\n    setEdges(rfEdges);\n  }, [\n    selectedSwitch,\n    connections,\n    pcs,\n    patchPanels,\n    switches,\n    setNodes,\n    setEdges,\n  ]); // Dependencies\n\n  if (!isOpen || !selectedSwitch) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex justify-center items-center z-50 p-4\">\n      <div className=\"bg-white rounded-lg shadow-xl w-full max-w-6xl h-[90vh] overflow-hidden flex flex-col\">\n        {/* Modal Header */}\n        <div className=\"flex justify-between items-center p-4 border-b border-gray-200 bg-gray-50\">\n          <h2 className=\"text-xl font-bold text-gray-800 flex items-center\">\n            <Network size={24} className=\"mr-2\" /> Network Diagram:{\" \"}\n            {selectedSwitch.name}\n          </h2>\n          <button\n            onClick={onClose}\n            className=\"text-gray-500 hover:text-gray-700 p-1 rounded-full hover:bg-gray-100 transition-colors duration-200\"\n            title=\"Close Diagram\"\n          >\n            <XCircle size={24} />\n          </button>\n        </div>\n\n        {/* React Flow Diagram Area */}\n        <div style={{ flexGrow: 1, height: \"100%\", position: \"relative\" }}>\n          {nodes.length > 0 ? (\n            <ReactFlow\n              nodes={nodes}\n              edges={edges}\n              onNodesChange={onNodesChange}\n              onEdgesChange={onEdgesChange}\n              onConnect={onConnect}\n              onNodeMouseEnter={onNodeMouseEnter}\n              onNodeMouseLeave={onNodeMouseLeave}\n              fitView\n              attributionPosition=\"bottom-left\"\n            >\n              <MiniMap />\n              <Controls />\n              <Background variant=\"dots\" gap={12} size={1} />\n            </ReactFlow>\n          ) : (\n            <p className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-xl text-gray-600\">\n              No PCs found connected to this switch.\n            </p>\n          )}\n        </div>\n\n        {/* Floating Tooltip */}\n        {hoveredNodeData && (\n          <div\n            style={{\n              position: \"fixed\",\n              left: tooltipPosition.x + 15,\n              top: tooltipPosition.y + 15,\n              zIndex: 1000,\n            }}\n            className=\"bg-gray-800 text-white text-xs p-2 rounded-md shadow-lg pointer-events-none whitespace-nowrap opacity-90 animate-fade-in-down\"\n          >\n            {hoveredNodeData.type === \"Switch\" && (\n              <>\n                <p>\n                  <strong>Switch:</strong> {hoveredNodeData.details.name}\n                </p>\n                <p>IP: {hoveredNodeData.details.ip_address || \"N/A\"}</p>\n                <p>\n                  Location: {hoveredNodeData.details.location_name || \"N/A\"}\n                </p>\n                <p>Model: {hoveredNodeData.details.model || \"N/A\"}</p>\n                <p>Total Ports: {hoveredNodeData.details.total_ports}</p>\n              </>\n            )}\n            {hoveredNodeData.type === \"PC\" && (\n              <>\n                <p>\n                  <strong>PC:</strong> {hoveredNodeData.details.name}\n                </p>\n                <p>IP: {hoveredNodeData.details.ip_address || \"N/A\"}</p>\n                <p>OS: {hoveredNodeData.details.operating_system || \"N/A\"}</p>\n                <p>Office: {hoveredNodeData.details.office || \"N/A\"}</p>\n                <p>Username: {hoveredNodeData.details.username || \"N/A\"}</p>\n                <p>\n                  In Domain: {hoveredNodeData.details.in_domain ? \"Yes\" : \"No\"}\n                </p>\n              </>\n            )}\n            {hoveredNodeData.type === \"PatchPanel\" && (\n              <>\n                <p>\n                  <strong>Patch Panel:</strong> {hoveredNodeData.details.name}\n                </p>\n                <p>\n                  Location: {hoveredNodeData.details.location_name || \"N/A\"}\n                </p>\n                <p>Rack: {hoveredNodeData.details.rack_name || \"N/A\"}</p>\n                <p>Total Ports: {hoveredNodeData.details.total_ports}</p>\n              </>\n            )}\n          </div>\n        )}\n\n        {/* Footer for status legend */}\n        <div className=\"p-4 border-t border-gray-200 bg-gray-50 text-sm text-center flex justify-center gap-4 flex-wrap\">\n          <div className=\"flex items-center\">\n            <Plug size={16} className=\"text-green-500 mr-1\" /> Port Up\n          </div>\n          <div className=\"flex items-center\">\n            <WifiOff size={16} className=\"text-red-500 mr-1\" /> Port Down\n          </div>\n          <div className=\"flex items-center\">\n            <Server size={16} className=\"text-red-500 mr-1\" /> Switch\n          </div>\n          <div className=\"flex items-center\">\n            <Laptop size={16} className=\"text-indigo-500 mr-1\" /> PC\n          </div>\n          <div className=\"flex items-center\">\n            <Split size={16} className=\"text-blue-500 mr-1\" /> Patch Panel\n          </div>\n          <div className=\"flex items-center ml-4\">\n            <span className=\"w-4 h-2 bg-green-500 inline-block mr-1\"></span>\n            <span className=\"ml-1\">Active Line</span>\n          </div>\n          <div className=\"flex items-center\">\n            <span className=\"w-4 h-2 bg-red-500 inline-block mr-1\"></span>\n            <span className=\"ml-1\">Inactive Line</span>\n          </div>\n          <div className=\"flex items-center\">\n            <span className=\"w-4 h-2 bg-gray-500 inline-block mr-1\"></span>\n            <span className=\"ml-1\">Intermediate Path</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Wrap the component in React.memo for performance\nexport default React.memo(SwitchDiagramModal);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}