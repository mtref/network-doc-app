{"ast":null,"code":"var _jsxFileName = \"/app/src/App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js\n// This is the main React component for the frontend application.\n// It orchestrates the display of various sections (Connections, PCs, Switches, Patch Panels).\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport ConnectionList from \"./components/ConnectionList\";\nimport ConnectionForm from \"./components/ConnectionForm\";\nimport PortStatusModal from \"./components/PortStatusModal\";\nimport PcList from \"./components/PcList\";\nimport SwitchList from \"./components/SwitchList\";\nimport PatchPanelList from \"./components/PatchPanelList\";\nimport PrintableConnectionForm from \"./components/PrintableConnectionForm\";\nimport { Printer } from \"lucide-react\";\n\n// Base URL for the backend API. When running in Docker Compose,\n// 'backend' is the service name and resolves to the backend container's IP.\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.NODE_ENV === \"production\" ? \"/api\" // In production, proxy requests through Nginx or similar\n: \"http://localhost:5004\"; // For local development with 'npm start'\n\nfunction App() {\n  _s();\n  // State variables to store fetched data\n  const [pcs, setPcs] = useState([]);\n  const [patchPanels, setPatchPanels] = useState([]);\n  const [switches, setSwitches] = useState([]);\n  const [connections, setConnections] = useState([]);\n  const [locations, setLocations] = useState([]);\n\n  // State for current active tab\n  const [activeTab, setActiveTab] = useState(\"connections\"); // 'connections', 'pcs', 'switches', 'patch_panels', 'locations'\n\n  const [message, setMessage] = useState(\"\"); // General message for success/error\n  const [isMessageVisible, setIsMessageVisible] = useState(false); // Controls message visibility\n\n  // State for Port Status Modal\n  const [showPortStatusModal, setShowPortStatusModal] = useState(false);\n  const [portStatusData, setPortStatusData] = useState(null);\n  const [modalEntityType, setModalEntityType] = useState(null);\n  const [modalEntityId, setModalEntityId] = useState(null);\n\n  // State for editing a connection in the ConnectionForm\n  const [editingConnection, setEditingConnection] = useState(null);\n\n  // State for showing the printable form\n  const [showPrintableForm, setShowPrintableForm] = useState(false);\n\n  // Function to show a message temporarily\n  const showMessage = (msg, duration = 3000) => {\n    setMessage(msg);\n    setIsMessageVisible(true);\n    setTimeout(() => {\n      setIsMessageVisible(false);\n      setMessage(\"\");\n    }, duration);\n  };\n\n  // Memoized function to fetch data from the backend\n  const fetchData = useCallback(async (endpoint, setter) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/${endpoint}`);\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setter(data);\n    } catch (error) {\n      console.error(`Failed to fetch ${endpoint}:`, error);\n      showMessage(`Error fetching ${endpoint}: ${error.message}`, 5000);\n    }\n  }, []);\n\n  // Fetch all initial data when the component mounts\n  useEffect(() => {\n    fetchData(\"pcs\", setPcs);\n    fetchData(\"patch_panels\", setPatchPanels);\n    fetchData(\"switches\", setSwitches);\n    fetchData(\"connections\", setConnections);\n    fetchData(\"locations\", setLocations);\n  }, [fetchData]);\n\n  // Handle adding a new connection\n  const handleAddConnection = async newConnectionData => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/connections`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newConnectionData)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      fetchData(\"connections\", setConnections);\n      showMessage(\"Connection added successfully!\");\n      setEditingConnection(null);\n    } catch (error) {\n      console.error(\"Error adding connection:\", error);\n      showMessage(`Error adding connection: ${error.message}`, 8000);\n    }\n  };\n\n  // Handle updating an existing connection\n  const handleUpdateConnection = async (id, updatedConnectionData) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/connections/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(updatedConnectionData)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      fetchData(\"connections\", setConnections);\n      showMessage(\"Connection updated successfully!\");\n      setEditingConnection(null);\n    } catch (error) {\n      console.error(\"Error updating connection:\", error);\n      showMessage(`Error updating connection: ${error.message}`, 8000);\n    }\n  };\n\n  // Handle deleting a connection\n  const handleDeleteConnection = async id => {\n    const confirmed = window.confirm(\"Are you sure you want to delete this connection?\");\n    if (!confirmed) {\n      return;\n    }\n    try {\n      const response = await fetch(`${API_BASE_URL}/connections/${id}`, {\n        method: \"DELETE\"\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      setConnections(prev => prev.filter(conn => conn.id !== id));\n      showMessage(\"Connection deleted successfully!\");\n    } catch (error) {\n      console.error(\"Error deleting connection:\", error);\n      showMessage(`Error deleting connection: ${error.message}`, 5000);\n    }\n  };\n\n  // Handle editing a connection (set the connection to be edited in state for form pre-fill)\n  const handleEditConnection = connection => {\n    var _connection$pc, _connection$switch;\n    const formattedConnection = {\n      id: connection.id,\n      pc_id: (_connection$pc = connection.pc) === null || _connection$pc === void 0 ? void 0 : _connection$pc.id,\n      switch_id: (_connection$switch = connection.switch) === null || _connection$switch === void 0 ? void 0 : _connection$switch.id,\n      switch_port: connection.switch_port,\n      is_switch_port_up: connection.is_switch_port_up,\n      hops: connection.hops.map(hop => {\n        var _hop$patch_panel;\n        return {\n          patch_panel_id: (_hop$patch_panel = hop.patch_panel) === null || _hop$patch_panel === void 0 ? void 0 : _hop$patch_panel.id,\n          patch_panel_port: hop.patch_panel_port,\n          is_port_up: hop.is_port_up\n        };\n      }),\n      pc: connection.pc,\n      switch: connection.switch\n    };\n    setEditingConnection(formattedConnection);\n  };\n\n  // Function to add a new PC, Patch Panel, Switch, or Location\n  const handleAddEntity = async (type, data) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/${type}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const newEntity = await response.json();\n      if (type === \"pcs\") setPcs(prev => [...prev, newEntity]);\n      if (type === \"patch_panels\") setPatchPanels(prev => [...prev, newEntity]);\n      if (type === \"switches\") setSwitches(prev => [...prev, newEntity]);\n      if (type === \"locations\") setLocations(prev => [...prev, newEntity]);\n      showMessage(`${type.slice(0, -1).toUpperCase()} added successfully!`);\n      // Re-fetch data relevant to selection dropdowns\n      if (type === \"patch_panels\") fetchData(\"patch_panels\", setPatchPanels);\n      if (type === \"switches\") fetchData(\"switches\", setSwitches);\n      if (type === \"pcs\") fetchData(\"pcs\", setPcs);\n      if (type === \"locations\") fetchData(\"locations\", setLocations);\n    } catch (error) {\n      console.error(`Error adding ${type}:`, error);\n      showMessage(`Error adding ${type}: ${error.message}`, 5000);\n    }\n  };\n\n  // Function to update an existing PC, Patch Panel, Switch, or Location\n  const handleUpdateEntity = async (type, id, data) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/${type}/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const updatedEntity = await response.json();\n      if (type === \"pcs\") setPcs(prev => prev.map(item => item.id === id ? updatedEntity : item));\n      if (type === \"patch_panels\") setPatchPanels(prev => prev.map(item => item.id === id ? updatedEntity : item));\n      if (type === \"switches\") setSwitches(prev => prev.map(item => item.id === id ? updatedEntity : item));\n      if (type === \"locations\") setLocations(prev => prev.map(item => item.id === id ? updatedEntity : item));\n      showMessage(`${type.slice(0, -1).toUpperCase()} updated successfully!`);\n      // Re-fetch connections and other related data as their foreign key info might have changed\n      fetchData(\"connections\", setConnections);\n      fetchData(\"patch_panels\", setPatchPanels);\n      fetchData(\"switches\", setSwitches);\n    } catch (error) {\n      console.error(`Error updating ${type}:`, error);\n      showMessage(`Error updating ${type}: ${error.message}`, 5000);\n    }\n  };\n\n  // Function to delete a PC, Patch Panel, Switch, or Location\n  const handleDeleteEntity = async (type, id) => {\n    const confirmed = window.confirm(`Are you sure you want to delete this ${type.slice(0, -1)}? This will also delete associated connections.`);\n    if (!confirmed) {\n      return;\n    }\n    try {\n      const response = await fetch(`${API_BASE_URL}/${type}/${id}`, {\n        method: \"DELETE\"\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      if (type === \"pcs\") setPcs(prev => prev.filter(item => item.id !== id));\n      if (type === \"patch_panels\") setPatchPanels(prev => prev.filter(item => item.id !== id));\n      if (type === \"switches\") setSwitches(prev => prev.filter(item => item.id !== id));\n      if (type === \"locations\") setLocations(prev => prev.filter(item => item.id !== id));\n      showMessage(`${type.slice(0, -1).toUpperCase()} deleted successfully!`);\n      // Re-fetch connections and other related data as cascade deletions might have occurred\n      fetchData(\"connections\", setConnections);\n      fetchData(\"patch_panels\", setPatchPanels);\n      fetchData(\"switches\", setSwitches);\n    } catch (error) {\n      console.error(`Error deleting ${type}:`, error);\n      showMessage(`Error deleting ${type}: ${error.message}`, 5000);\n    }\n  };\n\n  // Function to open the port status modal\n  const handleShowPortStatus = async (entityType, entityId) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/${entityType}/${entityId}/ports`);\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setPortStatusData(data);\n      setModalEntityType(entityType);\n      setModalEntityId(entityId);\n      setShowPortStatusModal(true);\n    } catch (error) {\n      console.error(`Failed to fetch ${entityType} port status:`, error);\n      showMessage(`Error fetching port status: ${error.message}`, 5000);\n    }\n  };\n  const handleClosePortStatusModal = () => {\n    setShowPortStatusModal(false);\n    setPortStatusData(null);\n    setModalEntityType(null);\n    setModalEntityId(null);\n  };\n\n  // Handle printing the form - Using requestAnimationFrame for better timing\n  const handlePrintForm = () => {\n    setShowPrintableForm(true); // Show the printable form\n    // Use requestAnimationFrame to ensure the DOM is ready before printing\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        // Double requestAnimationFrame for extra stability\n        window.print(); // Trigger browser print dialog\n        setShowPrintableForm(false); // Hide the printable form after print dialog is opened\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-gray-100 to-blue-200 font-inter p-4 sm:p-8\",\n    children: [isMessageVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed top-4 left-1/2 -translate-x-1/2 bg-blue-500 text-white px-6 py-3 rounded-lg shadow-lg z-50 animate-fade-in-down\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 9\n    }, this), showPortStatusModal && portStatusData && /*#__PURE__*/_jsxDEV(PortStatusModal, {\n      isOpen: showPortStatusModal,\n      onClose: handleClosePortStatusModal,\n      data: portStatusData,\n      entityType: modalEntityType,\n      entityId: modalEntityId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 9\n    }, this), showPrintableForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"print-only\",\n      children: /*#__PURE__*/_jsxDEV(PrintableConnectionForm, {\n        pcs: pcs,\n        patchPanels: patchPanels,\n        switches: switches,\n        locations: locations\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: showPrintableForm ? \"no-print\" : \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"mb-8 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-4xl font-extrabold text-blue-800 tracking-tight sm:text-5xl\",\n          children: \"Network Device Documentation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2 text-lg text-gray-600\",\n          children: \"Track your network connections from PC to Patch Panel to Switch with ease.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"max-w-6xl mx-auto bg-white rounded-xl shadow-lg p-6 sm:p-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex border-b border-gray-200 mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `py-3 px-6 text-lg font-medium ${activeTab === \"connections\" ? \"border-b-4 border-blue-600 text-blue-800\" : \"text-gray-600 hover:text-blue-600\"}`,\n            onClick: () => setActiveTab(\"connections\"),\n            children: \"Connections\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `py-3 px-6 text-lg font-medium ${activeTab === \"pcs\" ? \"border-b-4 border-blue-600 text-blue-800\" : \"text-gray-600 hover:text-blue-600\"}`,\n            onClick: () => setActiveTab(\"pcs\"),\n            children: \"PCs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `py-3 px-6 text-lg font-medium ${activeTab === \"switches\" ? \"border-b-4 border-blue-600 text-blue-800\" : \"text-gray-600 hover:text-blue-600\"}`,\n            onClick: () => setActiveTab(\"switches\"),\n            children: \"Switches\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `py-3 px-6 text-lg font-medium ${activeTab === \"patch_panels\" ? \"border-b-4 border-blue-600 text-blue-800\" : \"text-gray-600 hover:text-blue-600\"}`,\n            onClick: () => setActiveTab(\"patch_panels\"),\n            children: \"Patch Panels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `py-3 px-6 text-lg font-medium ${activeTab === \"locations\" ? \"border-b-4 border-blue-600 text-blue-800\" : \"text-gray-600 hover:text-blue-600\"}`,\n            onClick: () => setActiveTab(\"locations\"),\n            children: \"Locations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }, this), activeTab === \"connections\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"mb-10 p-6 bg-blue-50 rounded-lg border border-blue-200 shadow-inner\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-2xl font-bold text-blue-700 mb-4\",\n              children: \"Add/Edit Connection\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ConnectionForm, {\n              pcs: pcs,\n              patchPanels: patchPanels,\n              switches: switches,\n              onAddConnection: handleAddConnection,\n              onUpdateConnection: handleUpdateConnection,\n              editingConnection: editingConnection,\n              setEditingConnection: setEditingConnection,\n              onAddEntity: handleAddEntity,\n              onShowPortStatus: handleShowPortStatus,\n              locations: locations\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mb-6\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handlePrintForm,\n              className: \"px-6 py-3 bg-indigo-600 text-white rounded-md shadow-md hover:bg-indigo-700 transition-colors duration-200 flex items-center justify-center mx-auto\",\n              children: [/*#__PURE__*/_jsxDEV(Printer, {\n                size: 20,\n                className: \"mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 19\n              }, this), \" Print Empty Form\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-2xl font-bold text-blue-700 mb-6\",\n              children: \"All Connections\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ConnectionList, {\n              connections: connections,\n              onDelete: handleDeleteConnection,\n              onEdit: handleEditConnection\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 17\n            }, this), connections.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-center text-gray-500 text-lg mt-8\",\n              children: \"No connections found. Start by adding one above.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), activeTab === \"pcs\" && /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-bold text-blue-700 mb-6\",\n            children: \"All PCs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(PcList, {\n            pcs: pcs,\n            onAddEntity: handleAddEntity,\n            onUpdateEntity: handleUpdateEntity,\n            onDeleteEntity: handleDeleteEntity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 13\n        }, this), activeTab === \"switches\" && /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-bold text-blue-700 mb-6\",\n            children: \"All Switches\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(SwitchList, {\n            switches: switches,\n            onAddEntity: handleAddEntity,\n            onUpdateEntity: handleUpdateEntity,\n            onDeleteEntity: handleDeleteEntity,\n            onShowPortStatus: handleShowPortStatus,\n            locations: locations\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 13\n        }, this), activeTab === \"patch_panels\" && /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-bold text-blue-700 mb-6\",\n            children: \"All Patch Panels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(PatchPanelList, {\n            patchPanels: patchPanels,\n            onAddEntity: handleAddEntity,\n            onUpdateEntity: handleUpdateEntity,\n            onDeleteEntity: handleDeleteEntity,\n            onShowPortStatus: handleShowPortStatus,\n            locations: locations\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 13\n        }, this), activeTab === \"locations\" && /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-bold text-blue-700 mb-6\",\n            children: \"Manage Locations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white p-6 rounded-lg shadow-md border border-blue-200 mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-xl font-bold text-blue-700 mb-4\",\n              children: \"Add New Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: async e => {\n                e.preventDefault();\n                const name = e.target.locationName.value;\n                if (name.trim()) {\n                  await handleAddEntity(\"locations\", {\n                    name\n                  });\n                  e.target.locationName.value = \"\";\n                }\n              },\n              className: \"flex space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"locationName\",\n                placeholder: \"Location Name (e.g., Data Center)\",\n                className: \"flex-grow p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors duration-200\",\n                children: \"Add Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 558,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-3\",\n            children: locations.length > 0 ? locations.map(location => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-white rounded-lg shadow-sm border border-gray-100 p-4 flex justify-between items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-lg font-medium text-gray-800\",\n                children: location.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 575,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteEntity(\"locations\", location.id),\n                className: \"px-3 py-1 text-sm bg-red-600 text-white rounded-md hover:bg-red-700 transition-colors duration-200\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 23\n              }, this)]\n            }, location.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 21\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-center text-gray-500 text-lg\",\n              children: \"No locations added yet. Add some to get started!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"mt-12 text-center text-gray-500 text-sm\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\xA9 2025 Network Doc App. All rights reserved.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 335,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"itjcgIX/j75YmC3ifNvEcapuOGY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","ConnectionList","ConnectionForm","PortStatusModal","PcList","SwitchList","PatchPanelList","PrintableConnectionForm","Printer","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","process","env","NODE_ENV","App","_s","pcs","setPcs","patchPanels","setPatchPanels","switches","setSwitches","connections","setConnections","locations","setLocations","activeTab","setActiveTab","message","setMessage","isMessageVisible","setIsMessageVisible","showPortStatusModal","setShowPortStatusModal","portStatusData","setPortStatusData","modalEntityType","setModalEntityType","modalEntityId","setModalEntityId","editingConnection","setEditingConnection","showPrintableForm","setShowPrintableForm","showMessage","msg","duration","setTimeout","fetchData","endpoint","setter","response","fetch","ok","errorData","json","catch","Error","error","status","data","console","handleAddConnection","newConnectionData","method","headers","body","JSON","stringify","handleUpdateConnection","id","updatedConnectionData","handleDeleteConnection","confirmed","window","confirm","prev","filter","conn","handleEditConnection","connection","_connection$pc","_connection$switch","formattedConnection","pc_id","pc","switch_id","switch","switch_port","is_switch_port_up","hops","map","hop","_hop$patch_panel","patch_panel_id","patch_panel","patch_panel_port","is_port_up","handleAddEntity","type","newEntity","slice","toUpperCase","handleUpdateEntity","updatedEntity","item","handleDeleteEntity","handleShowPortStatus","entityType","entityId","handleClosePortStatusModal","handlePrintForm","requestAnimationFrame","print","className","children","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onClose","onClick","onAddConnection","onUpdateConnection","onAddEntity","onShowPortStatus","size","onDelete","onEdit","length","onUpdateEntity","onDeleteEntity","onSubmit","e","preventDefault","name","target","locationName","value","trim","placeholder","required","location","_c","$RefreshReg$"],"sources":["/app/src/App.js"],"sourcesContent":["// frontend/src/App.js\n// This is the main React component for the frontend application.\n// It orchestrates the display of various sections (Connections, PCs, Switches, Patch Panels).\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport ConnectionList from \"./components/ConnectionList\";\nimport ConnectionForm from \"./components/ConnectionForm\";\nimport PortStatusModal from \"./components/PortStatusModal\";\nimport PcList from \"./components/PcList\";\nimport SwitchList from \"./components/SwitchList\";\nimport PatchPanelList from \"./components/PatchPanelList\";\nimport PrintableConnectionForm from \"./components/PrintableConnectionForm\";\nimport { Printer } from \"lucide-react\";\n\n// Base URL for the backend API. When running in Docker Compose,\n// 'backend' is the service name and resolves to the backend container's IP.\nconst API_BASE_URL =\n  process.env.NODE_ENV === \"production\"\n    ? \"/api\" // In production, proxy requests through Nginx or similar\n    : \"http://localhost:5004\"; // For local development with 'npm start'\n\nfunction App() {\n  // State variables to store fetched data\n  const [pcs, setPcs] = useState([]);\n  const [patchPanels, setPatchPanels] = useState([]);\n  const [switches, setSwitches] = useState([]);\n  const [connections, setConnections] = useState([]);\n  const [locations, setLocations] = useState([]);\n\n  // State for current active tab\n  const [activeTab, setActiveTab] = useState(\"connections\"); // 'connections', 'pcs', 'switches', 'patch_panels', 'locations'\n\n  const [message, setMessage] = useState(\"\"); // General message for success/error\n  const [isMessageVisible, setIsMessageVisible] = useState(false); // Controls message visibility\n\n  // State for Port Status Modal\n  const [showPortStatusModal, setShowPortStatusModal] = useState(false);\n  const [portStatusData, setPortStatusData] = useState(null);\n  const [modalEntityType, setModalEntityType] = useState(null);\n  const [modalEntityId, setModalEntityId] = useState(null);\n\n  // State for editing a connection in the ConnectionForm\n  const [editingConnection, setEditingConnection] = useState(null);\n\n  // State for showing the printable form\n  const [showPrintableForm, setShowPrintableForm] = useState(false);\n\n  // Function to show a message temporarily\n  const showMessage = (msg, duration = 3000) => {\n    setMessage(msg);\n    setIsMessageVisible(true);\n    setTimeout(() => {\n      setIsMessageVisible(false);\n      setMessage(\"\");\n    }, duration);\n  };\n\n  // Memoized function to fetch data from the backend\n  const fetchData = useCallback(async (endpoint, setter) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/${endpoint}`);\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(\n          errorData.error || `HTTP error! status: ${response.status}`\n        );\n      }\n      const data = await response.json();\n      setter(data);\n    } catch (error) {\n      console.error(`Failed to fetch ${endpoint}:`, error);\n      showMessage(`Error fetching ${endpoint}: ${error.message}`, 5000);\n    }\n  }, []);\n\n  // Fetch all initial data when the component mounts\n  useEffect(() => {\n    fetchData(\"pcs\", setPcs);\n    fetchData(\"patch_panels\", setPatchPanels);\n    fetchData(\"switches\", setSwitches);\n    fetchData(\"connections\", setConnections);\n    fetchData(\"locations\", setLocations);\n  }, [fetchData]);\n\n  // Handle adding a new connection\n  const handleAddConnection = async (newConnectionData) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/connections`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(newConnectionData),\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(\n          errorData.error || `HTTP error! status: ${response.status}`\n        );\n      }\n      fetchData(\"connections\", setConnections);\n      showMessage(\"Connection added successfully!\");\n      setEditingConnection(null);\n    } catch (error) {\n      console.error(\"Error adding connection:\", error);\n      showMessage(`Error adding connection: ${error.message}`, 8000);\n    }\n  };\n\n  // Handle updating an existing connection\n  const handleUpdateConnection = async (id, updatedConnectionData) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/connections/${id}`, {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(updatedConnectionData),\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(\n          errorData.error || `HTTP error! status: ${response.status}`\n        );\n      }\n      fetchData(\"connections\", setConnections);\n      showMessage(\"Connection updated successfully!\");\n      setEditingConnection(null);\n    } catch (error) {\n      console.error(\"Error updating connection:\", error);\n      showMessage(`Error updating connection: ${error.message}`, 8000);\n    }\n  };\n\n  // Handle deleting a connection\n  const handleDeleteConnection = async (id) => {\n    const confirmed = window.confirm(\n      \"Are you sure you want to delete this connection?\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      const response = await fetch(`${API_BASE_URL}/connections/${id}`, {\n        method: \"DELETE\",\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(\n          errorData.error || `HTTP error! status: ${response.status}`\n        );\n      }\n      setConnections((prev) => prev.filter((conn) => conn.id !== id));\n      showMessage(\"Connection deleted successfully!\");\n    } catch (error) {\n      console.error(\"Error deleting connection:\", error);\n      showMessage(`Error deleting connection: ${error.message}`, 5000);\n    }\n  };\n\n  // Handle editing a connection (set the connection to be edited in state for form pre-fill)\n  const handleEditConnection = (connection) => {\n    const formattedConnection = {\n      id: connection.id,\n      pc_id: connection.pc?.id,\n      switch_id: connection.switch?.id,\n      switch_port: connection.switch_port,\n      is_switch_port_up: connection.is_switch_port_up,\n      hops: connection.hops.map((hop) => ({\n        patch_panel_id: hop.patch_panel?.id,\n        patch_panel_port: hop.patch_panel_port,\n        is_port_up: hop.is_port_up,\n      })),\n      pc: connection.pc,\n      switch: connection.switch,\n    };\n    setEditingConnection(formattedConnection);\n  };\n\n  // Function to add a new PC, Patch Panel, Switch, or Location\n  const handleAddEntity = async (type, data) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/${type}`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(data),\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(\n          errorData.error || `HTTP error! status: ${response.status}`\n        );\n      }\n      const newEntity = await response.json();\n      if (type === \"pcs\") setPcs((prev) => [...prev, newEntity]);\n      if (type === \"patch_panels\")\n        setPatchPanels((prev) => [...prev, newEntity]);\n      if (type === \"switches\") setSwitches((prev) => [...prev, newEntity]);\n      if (type === \"locations\") setLocations((prev) => [...prev, newEntity]);\n      showMessage(`${type.slice(0, -1).toUpperCase()} added successfully!`);\n      // Re-fetch data relevant to selection dropdowns\n      if (type === \"patch_panels\") fetchData(\"patch_panels\", setPatchPanels);\n      if (type === \"switches\") fetchData(\"switches\", setSwitches);\n      if (type === \"pcs\") fetchData(\"pcs\", setPcs);\n      if (type === \"locations\") fetchData(\"locations\", setLocations);\n    } catch (error) {\n      console.error(`Error adding ${type}:`, error);\n      showMessage(`Error adding ${type}: ${error.message}`, 5000);\n    }\n  };\n\n  // Function to update an existing PC, Patch Panel, Switch, or Location\n  const handleUpdateEntity = async (type, id, data) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/${type}/${id}`, {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(data),\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(\n          errorData.error || `HTTP error! status: ${response.status}`\n        );\n      }\n      const updatedEntity = await response.json();\n      if (type === \"pcs\")\n        setPcs((prev) =>\n          prev.map((item) => (item.id === id ? updatedEntity : item))\n        );\n      if (type === \"patch_panels\")\n        setPatchPanels((prev) =>\n          prev.map((item) => (item.id === id ? updatedEntity : item))\n        );\n      if (type === \"switches\")\n        setSwitches((prev) =>\n          prev.map((item) => (item.id === id ? updatedEntity : item))\n        );\n      if (type === \"locations\")\n        setLocations((prev) =>\n          prev.map((item) => (item.id === id ? updatedEntity : item))\n        );\n      showMessage(`${type.slice(0, -1).toUpperCase()} updated successfully!`);\n      // Re-fetch connections and other related data as their foreign key info might have changed\n      fetchData(\"connections\", setConnections);\n      fetchData(\"patch_panels\", setPatchPanels);\n      fetchData(\"switches\", setSwitches);\n    } catch (error) {\n      console.error(`Error updating ${type}:`, error);\n      showMessage(`Error updating ${type}: ${error.message}`, 5000);\n    }\n  };\n\n  // Function to delete a PC, Patch Panel, Switch, or Location\n  const handleDeleteEntity = async (type, id) => {\n    const confirmed = window.confirm(\n      `Are you sure you want to delete this ${type.slice(\n        0,\n        -1\n      )}? This will also delete associated connections.`\n    );\n    if (!confirmed) {\n      return;\n    }\n    try {\n      const response = await fetch(`${API_BASE_URL}/${type}/${id}`, {\n        method: \"DELETE\",\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(\n          errorData.error || `HTTP error! status: ${response.status}`\n        );\n      }\n      if (type === \"pcs\")\n        setPcs((prev) => prev.filter((item) => item.id !== id));\n      if (type === \"patch_panels\")\n        setPatchPanels((prev) => prev.filter((item) => item.id !== id));\n      if (type === \"switches\")\n        setSwitches((prev) => prev.filter((item) => item.id !== id));\n      if (type === \"locations\")\n        setLocations((prev) => prev.filter((item) => item.id !== id));\n      showMessage(`${type.slice(0, -1).toUpperCase()} deleted successfully!`);\n      // Re-fetch connections and other related data as cascade deletions might have occurred\n      fetchData(\"connections\", setConnections);\n      fetchData(\"patch_panels\", setPatchPanels);\n      fetchData(\"switches\", setSwitches);\n    } catch (error) {\n      console.error(`Error deleting ${type}:`, error);\n      showMessage(`Error deleting ${type}: ${error.message}`, 5000);\n    }\n  };\n\n  // Function to open the port status modal\n  const handleShowPortStatus = async (entityType, entityId) => {\n    try {\n      const response = await fetch(\n        `${API_BASE_URL}/${entityType}/${entityId}/ports`\n      );\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(\n          errorData.error || `HTTP error! status: ${response.status}`\n        );\n      }\n      const data = await response.json();\n      setPortStatusData(data);\n      setModalEntityType(entityType);\n      setModalEntityId(entityId);\n      setShowPortStatusModal(true);\n    } catch (error) {\n      console.error(`Failed to fetch ${entityType} port status:`, error);\n      showMessage(`Error fetching port status: ${error.message}`, 5000);\n    }\n  };\n\n  const handleClosePortStatusModal = () => {\n    setShowPortStatusModal(false);\n    setPortStatusData(null);\n    setModalEntityType(null);\n    setModalEntityId(null);\n  };\n\n  // Handle printing the form - Using requestAnimationFrame for better timing\n  const handlePrintForm = () => {\n    setShowPrintableForm(true); // Show the printable form\n    // Use requestAnimationFrame to ensure the DOM is ready before printing\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        // Double requestAnimationFrame for extra stability\n        window.print(); // Trigger browser print dialog\n        setShowPrintableForm(false); // Hide the printable form after print dialog is opened\n      });\n    });\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-100 to-blue-200 font-inter p-4 sm:p-8\">\n      {/* Global Message Box */}\n      {isMessageVisible && (\n        <div className=\"fixed top-4 left-1/2 -translate-x-1/2 bg-blue-500 text-white px-6 py-3 rounded-lg shadow-lg z-50 animate-fade-in-down\">\n          {message}\n        </div>\n      )}\n\n      {/* Port Status Modal */}\n      {showPortStatusModal && portStatusData && (\n        <PortStatusModal\n          isOpen={showPortStatusModal}\n          onClose={handleClosePortStatusModal}\n          data={portStatusData}\n          entityType={modalEntityType}\n          entityId={modalEntityId}\n        />\n      )}\n\n      {/* Printable Connection Form (Only visible when printing) */}\n      {showPrintableForm && (\n        <div className=\"print-only\">\n          <PrintableConnectionForm\n            pcs={pcs}\n            patchPanels={patchPanels}\n            switches={switches}\n            locations={locations}\n          />\n        </div>\n      )}\n\n      {/* Main App Content (Hidden when printing the form) */}\n      <div className={showPrintableForm ? \"no-print\" : \"\"}>\n        {/* Header Section */}\n        <header className=\"mb-8 text-center\">\n          <h1 className=\"text-4xl font-extrabold text-blue-800 tracking-tight sm:text-5xl\">\n            Network Device Documentation\n          </h1>\n          <p className=\"mt-2 text-lg text-gray-600\">\n            Track your network connections from PC to Patch Panel to Switch with\n            ease.\n          </p>\n        </header>\n\n        {/* Main Content Area */}\n        <main className=\"max-w-6xl mx-auto bg-white rounded-xl shadow-lg p-6 sm:p-8\">\n          {/* Tab Navigation */}\n          <div className=\"flex border-b border-gray-200 mb-6\">\n            <button\n              className={`py-3 px-6 text-lg font-medium ${\n                activeTab === \"connections\"\n                  ? \"border-b-4 border-blue-600 text-blue-800\"\n                  : \"text-gray-600 hover:text-blue-600\"\n              }`}\n              onClick={() => setActiveTab(\"connections\")}\n            >\n              Connections\n            </button>\n            <button\n              className={`py-3 px-6 text-lg font-medium ${\n                activeTab === \"pcs\"\n                  ? \"border-b-4 border-blue-600 text-blue-800\"\n                  : \"text-gray-600 hover:text-blue-600\"\n              }`}\n              onClick={() => setActiveTab(\"pcs\")}\n            >\n              PCs\n            </button>\n            <button\n              className={`py-3 px-6 text-lg font-medium ${\n                activeTab === \"switches\"\n                  ? \"border-b-4 border-blue-600 text-blue-800\"\n                  : \"text-gray-600 hover:text-blue-600\"\n              }`}\n              onClick={() => setActiveTab(\"switches\")}\n            >\n              Switches\n            </button>\n            <button\n              className={`py-3 px-6 text-lg font-medium ${\n                activeTab === \"patch_panels\"\n                  ? \"border-b-4 border-blue-600 text-blue-800\"\n                  : \"text-gray-600 hover:text-blue-600\"\n              }`}\n              onClick={() => setActiveTab(\"patch_panels\")}\n            >\n              Patch Panels\n            </button>\n            <button\n              className={`py-3 px-6 text-lg font-medium ${\n                activeTab === \"locations\"\n                  ? \"border-b-4 border-blue-600 text-blue-800\"\n                  : \"text-gray-600 hover:text-blue-600\"\n              }`}\n              onClick={() => setActiveTab(\"locations\")}\n            >\n              Locations\n            </button>\n          </div>\n\n          {/* Conditional Tab Content Rendering */}\n          {activeTab === \"connections\" && (\n            <>\n              {/* Connection Form Section */}\n              <section className=\"mb-10 p-6 bg-blue-50 rounded-lg border border-blue-200 shadow-inner\">\n                <h2 className=\"text-2xl font-bold text-blue-700 mb-4\">\n                  Add/Edit Connection\n                </h2>\n                <ConnectionForm\n                  pcs={pcs}\n                  patchPanels={patchPanels}\n                  switches={switches}\n                  onAddConnection={handleAddConnection}\n                  onUpdateConnection={handleUpdateConnection}\n                  editingConnection={editingConnection}\n                  setEditingConnection={setEditingConnection}\n                  onAddEntity={handleAddEntity}\n                  onShowPortStatus={handleShowPortStatus}\n                  locations={locations}\n                />\n              </section>\n\n              {/* Print Form Button */}\n              <div className=\"text-center mb-6\">\n                <button\n                  onClick={handlePrintForm}\n                  className=\"px-6 py-3 bg-indigo-600 text-white rounded-md shadow-md hover:bg-indigo-700 transition-colors duration-200 flex items-center justify-center mx-auto\"\n                >\n                  <Printer size={20} className=\"mr-2\" /> Print Empty Form\n                </button>\n              </div>\n\n              {/* Connection List Section */}\n              <section>\n                <h2 className=\"text-2xl font-bold text-blue-700 mb-6\">\n                  All Connections\n                </h2>\n                <ConnectionList\n                  connections={connections}\n                  onDelete={handleDeleteConnection}\n                  onEdit={handleEditConnection}\n                />\n                {connections.length === 0 && (\n                  <p className=\"text-center text-gray-500 text-lg mt-8\">\n                    No connections found. Start by adding one above.\n                  </p>\n                )}\n              </section>\n            </>\n          )}\n\n          {activeTab === \"pcs\" && (\n            <section>\n              <h2 className=\"text-2xl font-bold text-blue-700 mb-6\">All PCs</h2>\n              <PcList\n                pcs={pcs}\n                onAddEntity={handleAddEntity}\n                onUpdateEntity={handleUpdateEntity}\n                onDeleteEntity={handleDeleteEntity}\n              />\n            </section>\n          )}\n\n          {activeTab === \"switches\" && (\n            <section>\n              <h2 className=\"text-2xl font-bold text-blue-700 mb-6\">\n                All Switches\n              </h2>\n              <SwitchList\n                switches={switches}\n                onAddEntity={handleAddEntity}\n                onUpdateEntity={handleUpdateEntity}\n                onDeleteEntity={handleDeleteEntity}\n                onShowPortStatus={handleShowPortStatus}\n                locations={locations}\n              />\n            </section>\n          )}\n\n          {activeTab === \"patch_panels\" && (\n            <section>\n              <h2 className=\"text-2xl font-bold text-blue-700 mb-6\">\n                All Patch Panels\n              </h2>\n              <PatchPanelList\n                patchPanels={patchPanels}\n                onAddEntity={handleAddEntity}\n                onUpdateEntity={handleUpdateEntity}\n                onDeleteEntity={handleDeleteEntity}\n                onShowPortStatus={handleShowPortStatus}\n                locations={locations}\n              />\n            </section>\n          )}\n\n          {activeTab === \"locations\" && (\n            <section>\n              <h2 className=\"text-2xl font-bold text-blue-700 mb-6\">\n                Manage Locations\n              </h2>\n              {/* Form for adding new locations */}\n              <div className=\"bg-white p-6 rounded-lg shadow-md border border-blue-200 mb-6\">\n                <h3 className=\"text-xl font-bold text-blue-700 mb-4\">\n                  Add New Location\n                </h3>\n                <form\n                  onSubmit={async (e) => {\n                    e.preventDefault();\n                    const name = e.target.locationName.value;\n                    if (name.trim()) {\n                      await handleAddEntity(\"locations\", { name });\n                      e.target.locationName.value = \"\";\n                    }\n                  }}\n                  className=\"flex space-x-2\"\n                >\n                  <input\n                    type=\"text\"\n                    name=\"locationName\"\n                    placeholder=\"Location Name (e.g., Data Center)\"\n                    className=\"flex-grow p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                    required\n                  />\n                  <button\n                    type=\"submit\"\n                    className=\"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors duration-200\"\n                  >\n                    Add Location\n                  </button>\n                </form>\n              </div>\n\n              {/* List of existing locations */}\n              <div className=\"space-y-3\">\n                {locations.length > 0 ? (\n                  locations.map((location) => (\n                    <div\n                      key={location.id}\n                      className=\"bg-white rounded-lg shadow-sm border border-gray-100 p-4 flex justify-between items-center\"\n                    >\n                      <span className=\"text-lg font-medium text-gray-800\">\n                        {location.name}\n                      </span>\n                      <button\n                        onClick={() =>\n                          handleDeleteEntity(\"locations\", location.id)\n                        }\n                        className=\"px-3 py-1 text-sm bg-red-600 text-white rounded-md hover:bg-red-700 transition-colors duration-200\"\n                      >\n                        Delete\n                      </button>\n                    </div>\n                  ))\n                ) : (\n                  <p className=\"text-center text-gray-500 text-lg\">\n                    No locations added yet. Add some to get started!\n                  </p>\n                )}\n              </div>\n            </section>\n          )}\n        </main>\n\n        {/* Footer (Optional) */}\n        <footer className=\"mt-12 text-center text-gray-500 text-sm\">\n          <p>&copy; 2025 Network Doc App. All rights reserved.</p>\n        </footer>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,uBAAuB,MAAM,sCAAsC;AAC1E,SAASC,OAAO,QAAQ,cAAc;;AAEtC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,YAAY,GAChBC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GACjC,MAAM,CAAC;AAAA,EACP,uBAAuB,CAAC,CAAC;;AAE/B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACuB,WAAW,EAAEC,cAAc,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACyB,QAAQ,EAAEC,WAAW,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC2B,WAAW,EAAEC,cAAc,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC6B,SAAS,EAAEC,YAAY,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACA,MAAM,CAAC+B,SAAS,EAAEC,YAAY,CAAC,GAAGhC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC;;EAE3D,MAAM,CAACiC,OAAO,EAAEC,UAAU,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACmC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGpC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEjE;EACA,MAAM,CAACqC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGtC,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAACuC,cAAc,EAAEC,iBAAiB,CAAC,GAAGxC,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACyC,eAAe,EAAEC,kBAAkB,CAAC,GAAG1C,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAAC2C,aAAa,EAAEC,gBAAgB,CAAC,GAAG5C,QAAQ,CAAC,IAAI,CAAC;;EAExD;EACA,MAAM,CAAC6C,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG9C,QAAQ,CAAC,IAAI,CAAC;;EAEhE;EACA,MAAM,CAAC+C,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGhD,QAAQ,CAAC,KAAK,CAAC;;EAEjE;EACA,MAAMiD,WAAW,GAAGA,CAACC,GAAG,EAAEC,QAAQ,GAAG,IAAI,KAAK;IAC5CjB,UAAU,CAACgB,GAAG,CAAC;IACfd,mBAAmB,CAAC,IAAI,CAAC;IACzBgB,UAAU,CAAC,MAAM;MACfhB,mBAAmB,CAAC,KAAK,CAAC;MAC1BF,UAAU,CAAC,EAAE,CAAC;IAChB,CAAC,EAAEiB,QAAQ,CAAC;EACd,CAAC;;EAED;EACA,MAAME,SAAS,GAAGnD,WAAW,CAAC,OAAOoD,QAAQ,EAAEC,MAAM,KAAK;IACxD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAG1C,YAAY,IAAIuC,QAAQ,EAAE,CAAC;MAC3D,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACzD,MAAM,IAAIC,KAAK,CACbH,SAAS,CAACI,KAAK,IAAI,uBAAuBP,QAAQ,CAACQ,MAAM,EAC3D,CAAC;MACH;MACA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACI,IAAI,CAAC,CAAC;MAClCL,MAAM,CAACU,IAAI,CAAC;IACd,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdG,OAAO,CAACH,KAAK,CAAC,mBAAmBT,QAAQ,GAAG,EAAES,KAAK,CAAC;MACpDd,WAAW,CAAC,kBAAkBK,QAAQ,KAAKS,KAAK,CAAC9B,OAAO,EAAE,EAAE,IAAI,CAAC;IACnE;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAhC,SAAS,CAAC,MAAM;IACdoD,SAAS,CAAC,KAAK,EAAE/B,MAAM,CAAC;IACxB+B,SAAS,CAAC,cAAc,EAAE7B,cAAc,CAAC;IACzC6B,SAAS,CAAC,UAAU,EAAE3B,WAAW,CAAC;IAClC2B,SAAS,CAAC,aAAa,EAAEzB,cAAc,CAAC;IACxCyB,SAAS,CAAC,WAAW,EAAEvB,YAAY,CAAC;EACtC,CAAC,EAAE,CAACuB,SAAS,CAAC,CAAC;;EAEf;EACA,MAAMc,mBAAmB,GAAG,MAAOC,iBAAiB,IAAK;IACvD,IAAI;MACF,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAG1C,YAAY,cAAc,EAAE;QAC1DsD,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,iBAAiB;MACxC,CAAC,CAAC;MACF,IAAI,CAACZ,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIE,KAAK,CACbH,SAAS,CAACI,KAAK,IAAI,uBAAuBP,QAAQ,CAACQ,MAAM,EAC3D,CAAC;MACH;MACAX,SAAS,CAAC,aAAa,EAAEzB,cAAc,CAAC;MACxCqB,WAAW,CAAC,gCAAgC,CAAC;MAC7CH,oBAAoB,CAAC,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOiB,KAAK,EAAE;MACdG,OAAO,CAACH,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDd,WAAW,CAAC,4BAA4Bc,KAAK,CAAC9B,OAAO,EAAE,EAAE,IAAI,CAAC;IAChE;EACF,CAAC;;EAED;EACA,MAAMyC,sBAAsB,GAAG,MAAAA,CAAOC,EAAE,EAAEC,qBAAqB,KAAK;IAClE,IAAI;MACF,MAAMpB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAG1C,YAAY,gBAAgB4D,EAAE,EAAE,EAAE;QAChEN,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACG,qBAAqB;MAC5C,CAAC,CAAC;MACF,IAAI,CAACpB,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIE,KAAK,CACbH,SAAS,CAACI,KAAK,IAAI,uBAAuBP,QAAQ,CAACQ,MAAM,EAC3D,CAAC;MACH;MACAX,SAAS,CAAC,aAAa,EAAEzB,cAAc,CAAC;MACxCqB,WAAW,CAAC,kCAAkC,CAAC;MAC/CH,oBAAoB,CAAC,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOiB,KAAK,EAAE;MACdG,OAAO,CAACH,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDd,WAAW,CAAC,8BAA8Bc,KAAK,CAAC9B,OAAO,EAAE,EAAE,IAAI,CAAC;IAClE;EACF,CAAC;;EAED;EACA,MAAM4C,sBAAsB,GAAG,MAAOF,EAAE,IAAK;IAC3C,MAAMG,SAAS,GAAGC,MAAM,CAACC,OAAO,CAC9B,kDACF,CAAC;IACD,IAAI,CAACF,SAAS,EAAE;MACd;IACF;IAEA,IAAI;MACF,MAAMtB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAG1C,YAAY,gBAAgB4D,EAAE,EAAE,EAAE;QAChEN,MAAM,EAAE;MACV,CAAC,CAAC;MACF,IAAI,CAACb,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIE,KAAK,CACbH,SAAS,CAACI,KAAK,IAAI,uBAAuBP,QAAQ,CAACQ,MAAM,EAC3D,CAAC;MACH;MACApC,cAAc,CAAEqD,IAAI,IAAKA,IAAI,CAACC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACR,EAAE,KAAKA,EAAE,CAAC,CAAC;MAC/D1B,WAAW,CAAC,kCAAkC,CAAC;IACjD,CAAC,CAAC,OAAOc,KAAK,EAAE;MACdG,OAAO,CAACH,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDd,WAAW,CAAC,8BAA8Bc,KAAK,CAAC9B,OAAO,EAAE,EAAE,IAAI,CAAC;IAClE;EACF,CAAC;;EAED;EACA,MAAMmD,oBAAoB,GAAIC,UAAU,IAAK;IAAA,IAAAC,cAAA,EAAAC,kBAAA;IAC3C,MAAMC,mBAAmB,GAAG;MAC1Bb,EAAE,EAAEU,UAAU,CAACV,EAAE;MACjBc,KAAK,GAAAH,cAAA,GAAED,UAAU,CAACK,EAAE,cAAAJ,cAAA,uBAAbA,cAAA,CAAeX,EAAE;MACxBgB,SAAS,GAAAJ,kBAAA,GAAEF,UAAU,CAACO,MAAM,cAAAL,kBAAA,uBAAjBA,kBAAA,CAAmBZ,EAAE;MAChCkB,WAAW,EAAER,UAAU,CAACQ,WAAW;MACnCC,iBAAiB,EAAET,UAAU,CAACS,iBAAiB;MAC/CC,IAAI,EAAEV,UAAU,CAACU,IAAI,CAACC,GAAG,CAAEC,GAAG;QAAA,IAAAC,gBAAA;QAAA,OAAM;UAClCC,cAAc,GAAAD,gBAAA,GAAED,GAAG,CAACG,WAAW,cAAAF,gBAAA,uBAAfA,gBAAA,CAAiBvB,EAAE;UACnC0B,gBAAgB,EAAEJ,GAAG,CAACI,gBAAgB;UACtCC,UAAU,EAAEL,GAAG,CAACK;QAClB,CAAC;MAAA,CAAC,CAAC;MACHZ,EAAE,EAAEL,UAAU,CAACK,EAAE;MACjBE,MAAM,EAAEP,UAAU,CAACO;IACrB,CAAC;IACD9C,oBAAoB,CAAC0C,mBAAmB,CAAC;EAC3C,CAAC;;EAED;EACA,MAAMe,eAAe,GAAG,MAAAA,CAAOC,IAAI,EAAEvC,IAAI,KAAK;IAC5C,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAG1C,YAAY,IAAIyF,IAAI,EAAE,EAAE;QACtDnC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,IAAI;MAC3B,CAAC,CAAC;MACF,IAAI,CAACT,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIE,KAAK,CACbH,SAAS,CAACI,KAAK,IAAI,uBAAuBP,QAAQ,CAACQ,MAAM,EAC3D,CAAC;MACH;MACA,MAAMyC,SAAS,GAAG,MAAMjD,QAAQ,CAACI,IAAI,CAAC,CAAC;MACvC,IAAI4C,IAAI,KAAK,KAAK,EAAElF,MAAM,CAAE2D,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEwB,SAAS,CAAC,CAAC;MAC1D,IAAID,IAAI,KAAK,cAAc,EACzBhF,cAAc,CAAEyD,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEwB,SAAS,CAAC,CAAC;MAChD,IAAID,IAAI,KAAK,UAAU,EAAE9E,WAAW,CAAEuD,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEwB,SAAS,CAAC,CAAC;MACpE,IAAID,IAAI,KAAK,WAAW,EAAE1E,YAAY,CAAEmD,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEwB,SAAS,CAAC,CAAC;MACtExD,WAAW,CAAC,GAAGuD,IAAI,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,sBAAsB,CAAC;MACrE;MACA,IAAIH,IAAI,KAAK,cAAc,EAAEnD,SAAS,CAAC,cAAc,EAAE7B,cAAc,CAAC;MACtE,IAAIgF,IAAI,KAAK,UAAU,EAAEnD,SAAS,CAAC,UAAU,EAAE3B,WAAW,CAAC;MAC3D,IAAI8E,IAAI,KAAK,KAAK,EAAEnD,SAAS,CAAC,KAAK,EAAE/B,MAAM,CAAC;MAC5C,IAAIkF,IAAI,KAAK,WAAW,EAAEnD,SAAS,CAAC,WAAW,EAAEvB,YAAY,CAAC;IAChE,CAAC,CAAC,OAAOiC,KAAK,EAAE;MACdG,OAAO,CAACH,KAAK,CAAC,gBAAgByC,IAAI,GAAG,EAAEzC,KAAK,CAAC;MAC7Cd,WAAW,CAAC,gBAAgBuD,IAAI,KAAKzC,KAAK,CAAC9B,OAAO,EAAE,EAAE,IAAI,CAAC;IAC7D;EACF,CAAC;;EAED;EACA,MAAM2E,kBAAkB,GAAG,MAAAA,CAAOJ,IAAI,EAAE7B,EAAE,EAAEV,IAAI,KAAK;IACnD,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAG1C,YAAY,IAAIyF,IAAI,IAAI7B,EAAE,EAAE,EAAE;QAC5DN,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,IAAI;MAC3B,CAAC,CAAC;MACF,IAAI,CAACT,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIE,KAAK,CACbH,SAAS,CAACI,KAAK,IAAI,uBAAuBP,QAAQ,CAACQ,MAAM,EAC3D,CAAC;MACH;MACA,MAAM6C,aAAa,GAAG,MAAMrD,QAAQ,CAACI,IAAI,CAAC,CAAC;MAC3C,IAAI4C,IAAI,KAAK,KAAK,EAChBlF,MAAM,CAAE2D,IAAI,IACVA,IAAI,CAACe,GAAG,CAAEc,IAAI,IAAMA,IAAI,CAACnC,EAAE,KAAKA,EAAE,GAAGkC,aAAa,GAAGC,IAAK,CAC5D,CAAC;MACH,IAAIN,IAAI,KAAK,cAAc,EACzBhF,cAAc,CAAEyD,IAAI,IAClBA,IAAI,CAACe,GAAG,CAAEc,IAAI,IAAMA,IAAI,CAACnC,EAAE,KAAKA,EAAE,GAAGkC,aAAa,GAAGC,IAAK,CAC5D,CAAC;MACH,IAAIN,IAAI,KAAK,UAAU,EACrB9E,WAAW,CAAEuD,IAAI,IACfA,IAAI,CAACe,GAAG,CAAEc,IAAI,IAAMA,IAAI,CAACnC,EAAE,KAAKA,EAAE,GAAGkC,aAAa,GAAGC,IAAK,CAC5D,CAAC;MACH,IAAIN,IAAI,KAAK,WAAW,EACtB1E,YAAY,CAAEmD,IAAI,IAChBA,IAAI,CAACe,GAAG,CAAEc,IAAI,IAAMA,IAAI,CAACnC,EAAE,KAAKA,EAAE,GAAGkC,aAAa,GAAGC,IAAK,CAC5D,CAAC;MACH7D,WAAW,CAAC,GAAGuD,IAAI,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,wBAAwB,CAAC;MACvE;MACAtD,SAAS,CAAC,aAAa,EAAEzB,cAAc,CAAC;MACxCyB,SAAS,CAAC,cAAc,EAAE7B,cAAc,CAAC;MACzC6B,SAAS,CAAC,UAAU,EAAE3B,WAAW,CAAC;IACpC,CAAC,CAAC,OAAOqC,KAAK,EAAE;MACdG,OAAO,CAACH,KAAK,CAAC,kBAAkByC,IAAI,GAAG,EAAEzC,KAAK,CAAC;MAC/Cd,WAAW,CAAC,kBAAkBuD,IAAI,KAAKzC,KAAK,CAAC9B,OAAO,EAAE,EAAE,IAAI,CAAC;IAC/D;EACF,CAAC;;EAED;EACA,MAAM8E,kBAAkB,GAAG,MAAAA,CAAOP,IAAI,EAAE7B,EAAE,KAAK;IAC7C,MAAMG,SAAS,GAAGC,MAAM,CAACC,OAAO,CAC9B,wCAAwCwB,IAAI,CAACE,KAAK,CAChD,CAAC,EACD,CAAC,CACH,CAAC,iDACH,CAAC;IACD,IAAI,CAAC5B,SAAS,EAAE;MACd;IACF;IACA,IAAI;MACF,MAAMtB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAG1C,YAAY,IAAIyF,IAAI,IAAI7B,EAAE,EAAE,EAAE;QAC5DN,MAAM,EAAE;MACV,CAAC,CAAC;MACF,IAAI,CAACb,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIE,KAAK,CACbH,SAAS,CAACI,KAAK,IAAI,uBAAuBP,QAAQ,CAACQ,MAAM,EAC3D,CAAC;MACH;MACA,IAAIwC,IAAI,KAAK,KAAK,EAChBlF,MAAM,CAAE2D,IAAI,IAAKA,IAAI,CAACC,MAAM,CAAE4B,IAAI,IAAKA,IAAI,CAACnC,EAAE,KAAKA,EAAE,CAAC,CAAC;MACzD,IAAI6B,IAAI,KAAK,cAAc,EACzBhF,cAAc,CAAEyD,IAAI,IAAKA,IAAI,CAACC,MAAM,CAAE4B,IAAI,IAAKA,IAAI,CAACnC,EAAE,KAAKA,EAAE,CAAC,CAAC;MACjE,IAAI6B,IAAI,KAAK,UAAU,EACrB9E,WAAW,CAAEuD,IAAI,IAAKA,IAAI,CAACC,MAAM,CAAE4B,IAAI,IAAKA,IAAI,CAACnC,EAAE,KAAKA,EAAE,CAAC,CAAC;MAC9D,IAAI6B,IAAI,KAAK,WAAW,EACtB1E,YAAY,CAAEmD,IAAI,IAAKA,IAAI,CAACC,MAAM,CAAE4B,IAAI,IAAKA,IAAI,CAACnC,EAAE,KAAKA,EAAE,CAAC,CAAC;MAC/D1B,WAAW,CAAC,GAAGuD,IAAI,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,wBAAwB,CAAC;MACvE;MACAtD,SAAS,CAAC,aAAa,EAAEzB,cAAc,CAAC;MACxCyB,SAAS,CAAC,cAAc,EAAE7B,cAAc,CAAC;MACzC6B,SAAS,CAAC,UAAU,EAAE3B,WAAW,CAAC;IACpC,CAAC,CAAC,OAAOqC,KAAK,EAAE;MACdG,OAAO,CAACH,KAAK,CAAC,kBAAkByC,IAAI,GAAG,EAAEzC,KAAK,CAAC;MAC/Cd,WAAW,CAAC,kBAAkBuD,IAAI,KAAKzC,KAAK,CAAC9B,OAAO,EAAE,EAAE,IAAI,CAAC;IAC/D;EACF,CAAC;;EAED;EACA,MAAM+E,oBAAoB,GAAG,MAAAA,CAAOC,UAAU,EAAEC,QAAQ,KAAK;IAC3D,IAAI;MACF,MAAM1D,QAAQ,GAAG,MAAMC,KAAK,CAC1B,GAAG1C,YAAY,IAAIkG,UAAU,IAAIC,QAAQ,QAC3C,CAAC;MACD,IAAI,CAAC1D,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIE,KAAK,CACbH,SAAS,CAACI,KAAK,IAAI,uBAAuBP,QAAQ,CAACQ,MAAM,EAC3D,CAAC;MACH;MACA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACI,IAAI,CAAC,CAAC;MAClCpB,iBAAiB,CAACyB,IAAI,CAAC;MACvBvB,kBAAkB,CAACuE,UAAU,CAAC;MAC9BrE,gBAAgB,CAACsE,QAAQ,CAAC;MAC1B5E,sBAAsB,CAAC,IAAI,CAAC;IAC9B,CAAC,CAAC,OAAOyB,KAAK,EAAE;MACdG,OAAO,CAACH,KAAK,CAAC,mBAAmBkD,UAAU,eAAe,EAAElD,KAAK,CAAC;MAClEd,WAAW,CAAC,+BAA+Bc,KAAK,CAAC9B,OAAO,EAAE,EAAE,IAAI,CAAC;IACnE;EACF,CAAC;EAED,MAAMkF,0BAA0B,GAAGA,CAAA,KAAM;IACvC7E,sBAAsB,CAAC,KAAK,CAAC;IAC7BE,iBAAiB,CAAC,IAAI,CAAC;IACvBE,kBAAkB,CAAC,IAAI,CAAC;IACxBE,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;;EAED;EACA,MAAMwE,eAAe,GAAGA,CAAA,KAAM;IAC5BpE,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC;IAC5B;IACAqE,qBAAqB,CAAC,MAAM;MAC1BA,qBAAqB,CAAC,MAAM;QAC1B;QACAtC,MAAM,CAACuC,KAAK,CAAC,CAAC,CAAC,CAAC;QAChBtE,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC;MAC/B,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;EAED,oBACEpC,OAAA;IAAK2G,SAAS,EAAC,gFAAgF;IAAAC,QAAA,GAE5FrF,gBAAgB,iBACfvB,OAAA;MAAK2G,SAAS,EAAC,uHAAuH;MAAAC,QAAA,EACnIvF;IAAO;MAAAwF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACN,EAGAvF,mBAAmB,IAAIE,cAAc,iBACpC3B,OAAA,CAACP,eAAe;MACdwH,MAAM,EAAExF,mBAAoB;MAC5ByF,OAAO,EAAEX,0BAA2B;MACpClD,IAAI,EAAE1B,cAAe;MACrB0E,UAAU,EAAExE,eAAgB;MAC5ByE,QAAQ,EAAEvE;IAAc;MAAA8E,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CACF,EAGA7E,iBAAiB,iBAChBnC,OAAA;MAAK2G,SAAS,EAAC,YAAY;MAAAC,QAAA,eACzB5G,OAAA,CAACH,uBAAuB;QACtBY,GAAG,EAAEA,GAAI;QACTE,WAAW,EAAEA,WAAY;QACzBE,QAAQ,EAAEA,QAAS;QACnBI,SAAS,EAAEA;MAAU;QAAA4F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN,eAGDhH,OAAA;MAAK2G,SAAS,EAAExE,iBAAiB,GAAG,UAAU,GAAG,EAAG;MAAAyE,QAAA,gBAElD5G,OAAA;QAAQ2G,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAClC5G,OAAA;UAAI2G,SAAS,EAAC,kEAAkE;UAAAC,QAAA,EAAC;QAEjF;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACLhH,OAAA;UAAG2G,SAAS,EAAC,4BAA4B;UAAAC,QAAA,EAAC;QAG1C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAGThH,OAAA;QAAM2G,SAAS,EAAC,4DAA4D;QAAAC,QAAA,gBAE1E5G,OAAA;UAAK2G,SAAS,EAAC,oCAAoC;UAAAC,QAAA,gBACjD5G,OAAA;YACE2G,SAAS,EAAE,iCACTxF,SAAS,KAAK,aAAa,GACvB,0CAA0C,GAC1C,mCAAmC,EACtC;YACHgG,OAAO,EAAEA,CAAA,KAAM/F,YAAY,CAAC,aAAa,CAAE;YAAAwF,QAAA,EAC5C;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACThH,OAAA;YACE2G,SAAS,EAAE,iCACTxF,SAAS,KAAK,KAAK,GACf,0CAA0C,GAC1C,mCAAmC,EACtC;YACHgG,OAAO,EAAEA,CAAA,KAAM/F,YAAY,CAAC,KAAK,CAAE;YAAAwF,QAAA,EACpC;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACThH,OAAA;YACE2G,SAAS,EAAE,iCACTxF,SAAS,KAAK,UAAU,GACpB,0CAA0C,GAC1C,mCAAmC,EACtC;YACHgG,OAAO,EAAEA,CAAA,KAAM/F,YAAY,CAAC,UAAU,CAAE;YAAAwF,QAAA,EACzC;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACThH,OAAA;YACE2G,SAAS,EAAE,iCACTxF,SAAS,KAAK,cAAc,GACxB,0CAA0C,GAC1C,mCAAmC,EACtC;YACHgG,OAAO,EAAEA,CAAA,KAAM/F,YAAY,CAAC,cAAc,CAAE;YAAAwF,QAAA,EAC7C;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACThH,OAAA;YACE2G,SAAS,EAAE,iCACTxF,SAAS,KAAK,WAAW,GACrB,0CAA0C,GAC1C,mCAAmC,EACtC;YACHgG,OAAO,EAAEA,CAAA,KAAM/F,YAAY,CAAC,WAAW,CAAE;YAAAwF,QAAA,EAC1C;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,EAGL7F,SAAS,KAAK,aAAa,iBAC1BnB,OAAA,CAAAE,SAAA;UAAA0G,QAAA,gBAEE5G,OAAA;YAAS2G,SAAS,EAAC,qEAAqE;YAAAC,QAAA,gBACtF5G,OAAA;cAAI2G,SAAS,EAAC,uCAAuC;cAAAC,QAAA,EAAC;YAEtD;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACLhH,OAAA,CAACR,cAAc;cACbiB,GAAG,EAAEA,GAAI;cACTE,WAAW,EAAEA,WAAY;cACzBE,QAAQ,EAAEA,QAAS;cACnBuG,eAAe,EAAE7D,mBAAoB;cACrC8D,kBAAkB,EAAEvD,sBAAuB;cAC3C7B,iBAAiB,EAAEA,iBAAkB;cACrCC,oBAAoB,EAAEA,oBAAqB;cAC3CoF,WAAW,EAAE3B,eAAgB;cAC7B4B,gBAAgB,EAAEnB,oBAAqB;cACvCnF,SAAS,EAAEA;YAAU;cAAA4F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACK,CAAC,eAGVhH,OAAA;YAAK2G,SAAS,EAAC,kBAAkB;YAAAC,QAAA,eAC/B5G,OAAA;cACEmH,OAAO,EAAEX,eAAgB;cACzBG,SAAS,EAAC,qJAAqJ;cAAAC,QAAA,gBAE/J5G,OAAA,CAACF,OAAO;gBAAC0H,IAAI,EAAE,EAAG;gBAACb,SAAS,EAAC;cAAM;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,qBACxC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eAGNhH,OAAA;YAAA4G,QAAA,gBACE5G,OAAA;cAAI2G,SAAS,EAAC,uCAAuC;cAAAC,QAAA,EAAC;YAEtD;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACLhH,OAAA,CAACT,cAAc;cACbwB,WAAW,EAAEA,WAAY;cACzB0G,QAAQ,EAAExD,sBAAuB;cACjCyD,MAAM,EAAElD;YAAqB;cAAAqC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9B,CAAC,EACDjG,WAAW,CAAC4G,MAAM,KAAK,CAAC,iBACvB3H,OAAA;cAAG2G,SAAS,EAAC,wCAAwC;cAAAC,QAAA,EAAC;YAEtD;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CACJ;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACM,CAAC;QAAA,eACV,CACH,EAEA7F,SAAS,KAAK,KAAK,iBAClBnB,OAAA;UAAA4G,QAAA,gBACE5G,OAAA;YAAI2G,SAAS,EAAC,uCAAuC;YAAAC,QAAA,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClEhH,OAAA,CAACN,MAAM;YACLe,GAAG,EAAEA,GAAI;YACT6G,WAAW,EAAE3B,eAAgB;YAC7BiC,cAAc,EAAE5B,kBAAmB;YACnC6B,cAAc,EAAE1B;UAAmB;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK,CACV,EAEA7F,SAAS,KAAK,UAAU,iBACvBnB,OAAA;UAAA4G,QAAA,gBACE5G,OAAA;YAAI2G,SAAS,EAAC,uCAAuC;YAAAC,QAAA,EAAC;UAEtD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACLhH,OAAA,CAACL,UAAU;YACTkB,QAAQ,EAAEA,QAAS;YACnByG,WAAW,EAAE3B,eAAgB;YAC7BiC,cAAc,EAAE5B,kBAAmB;YACnC6B,cAAc,EAAE1B,kBAAmB;YACnCoB,gBAAgB,EAAEnB,oBAAqB;YACvCnF,SAAS,EAAEA;UAAU;YAAA4F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK,CACV,EAEA7F,SAAS,KAAK,cAAc,iBAC3BnB,OAAA;UAAA4G,QAAA,gBACE5G,OAAA;YAAI2G,SAAS,EAAC,uCAAuC;YAAAC,QAAA,EAAC;UAEtD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACLhH,OAAA,CAACJ,cAAc;YACbe,WAAW,EAAEA,WAAY;YACzB2G,WAAW,EAAE3B,eAAgB;YAC7BiC,cAAc,EAAE5B,kBAAmB;YACnC6B,cAAc,EAAE1B,kBAAmB;YACnCoB,gBAAgB,EAAEnB,oBAAqB;YACvCnF,SAAS,EAAEA;UAAU;YAAA4F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK,CACV,EAEA7F,SAAS,KAAK,WAAW,iBACxBnB,OAAA;UAAA4G,QAAA,gBACE5G,OAAA;YAAI2G,SAAS,EAAC,uCAAuC;YAAAC,QAAA,EAAC;UAEtD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAELhH,OAAA;YAAK2G,SAAS,EAAC,+DAA+D;YAAAC,QAAA,gBAC5E5G,OAAA;cAAI2G,SAAS,EAAC,sCAAsC;cAAAC,QAAA,EAAC;YAErD;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACLhH,OAAA;cACE8H,QAAQ,EAAE,MAAOC,CAAC,IAAK;gBACrBA,CAAC,CAACC,cAAc,CAAC,CAAC;gBAClB,MAAMC,IAAI,GAAGF,CAAC,CAACG,MAAM,CAACC,YAAY,CAACC,KAAK;gBACxC,IAAIH,IAAI,CAACI,IAAI,CAAC,CAAC,EAAE;kBACf,MAAM1C,eAAe,CAAC,WAAW,EAAE;oBAAEsC;kBAAK,CAAC,CAAC;kBAC5CF,CAAC,CAACG,MAAM,CAACC,YAAY,CAACC,KAAK,GAAG,EAAE;gBAClC;cACF,CAAE;cACFzB,SAAS,EAAC,gBAAgB;cAAAC,QAAA,gBAE1B5G,OAAA;gBACE4F,IAAI,EAAC,MAAM;gBACXqC,IAAI,EAAC,cAAc;gBACnBK,WAAW,EAAC,mCAAmC;gBAC/C3B,SAAS,EAAC,2FAA2F;gBACrG4B,QAAQ;cAAA;gBAAA1B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACT,CAAC,eACFhH,OAAA;gBACE4F,IAAI,EAAC,QAAQ;gBACbe,SAAS,EAAC,8FAA8F;gBAAAC,QAAA,EACzG;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,eAGNhH,OAAA;YAAK2G,SAAS,EAAC,WAAW;YAAAC,QAAA,EACvB3F,SAAS,CAAC0G,MAAM,GAAG,CAAC,GACnB1G,SAAS,CAACmE,GAAG,CAAEoD,QAAQ,iBACrBxI,OAAA;cAEE2G,SAAS,EAAC,4FAA4F;cAAAC,QAAA,gBAEtG5G,OAAA;gBAAM2G,SAAS,EAAC,mCAAmC;gBAAAC,QAAA,EAChD4B,QAAQ,CAACP;cAAI;gBAAApB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACV,CAAC,eACPhH,OAAA;gBACEmH,OAAO,EAAEA,CAAA,KACPhB,kBAAkB,CAAC,WAAW,EAAEqC,QAAQ,CAACzE,EAAE,CAC5C;gBACD4C,SAAS,EAAC,oGAAoG;gBAAAC,QAAA,EAC/G;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA,GAbJwB,QAAQ,CAACzE,EAAE;cAAA8C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAcb,CACN,CAAC,gBAEFhH,OAAA;cAAG2G,SAAS,EAAC,mCAAmC;cAAAC,QAAA,EAAC;YAEjD;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG;UACJ;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CACV;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eAGPhH,OAAA;QAAQ2G,SAAS,EAAC,yCAAyC;QAAAC,QAAA,eACzD5G,OAAA;UAAA4G,QAAA,EAAG;QAAiD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACxG,EAAA,CAvkBQD,GAAG;AAAAkI,EAAA,GAAHlI,GAAG;AAykBZ,eAAeA,GAAG;AAAC,IAAAkI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}