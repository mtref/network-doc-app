{"ast":null,"code":"var _jsxFileName = \"/app/src/App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js\n// This is the main React component for the frontend application.\n// It orchestrates the display of various sections (Connections, PCs, Switches, Patch Panels).\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport ConnectionList from \"./components/ConnectionList\";\nimport ConnectionForm from \"./components/ConnectionForm\";\nimport PortStatusModal from \"./components/PortStatusModal\";\nimport PcList from \"./components/PcList\";\nimport SwitchList from \"./components/SwitchList\";\nimport PatchPanelList from \"./components/PatchPanelList\";\n\n// Base URL for the backend API. When running in Docker Compose,\n// 'backend' is the service name and resolves to the backend container's IP.\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.NODE_ENV === \"production\" ? \"/api\" // In production, proxy requests through Nginx or similar\n: \"http://localhost:5004\"; // For local development with 'npm start'\n\nfunction App() {\n  _s();\n  // State variables to store fetched data\n  const [pcs, setPcs] = useState([]);\n  const [patchPanels, setPatchPanels] = useState([]);\n  const [switches, setSwitches] = useState([]);\n  const [connections, setConnections] = useState([]);\n  const [locations, setLocations] = useState([]);\n\n  // State for current active tab\n  const [activeTab, setActiveTab] = useState(\"connections\"); // 'connections', 'pcs', 'switches', 'patch_panels', 'locations'\n\n  const [message, setMessage] = useState(\"\"); // General message for success/error\n  const [isMessageVisible, setIsMessageVisible] = useState(false); // Controls message visibility\n\n  // State for Port Status Modal\n  const [showPortStatusModal, setShowPortStatusModal] = useState(false);\n  const [portStatusData, setPortStatusData] = useState(null);\n  const [modalEntityType, setModalEntityType] = useState(null);\n  const [modalEntityId, setModalEntityId] = useState(null);\n\n  // State for editing a connection in the ConnectionForm\n  const [editingConnection, setEditingConnection] = useState(null);\n\n  // Function to show a message temporarily\n  const showMessage = (msg, duration = 3000) => {\n    setMessage(msg);\n    setIsMessageVisible(true);\n    setTimeout(() => {\n      setIsMessageVisible(false);\n      setMessage(\"\");\n    }, duration);\n  };\n\n  // Memoized function to fetch data from the backend\n  const fetchData = useCallback(async (endpoint, setter) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/${endpoint}`);\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setter(data);\n    } catch (error) {\n      console.error(`Failed to fetch ${endpoint}:`, error);\n      showMessage(`Error fetching ${endpoint}: ${error.message}`, 5000);\n    }\n  }, []);\n\n  // Fetch all initial data when the component mounts\n  useEffect(() => {\n    fetchData(\"pcs\", setPcs);\n    fetchData(\"patch_panels\", setPatchPanels);\n    fetchData(\"switches\", setSwitches);\n    fetchData(\"connections\", setConnections);\n    fetchData(\"locations\", setLocations);\n  }, [fetchData]);\n\n  // Handle adding a new connection\n  const handleAddConnection = async newConnectionData => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/connections`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newConnectionData)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      fetchData(\"connections\", setConnections);\n      showMessage(\"Connection added successfully!\");\n      setEditingConnection(null); // Clear editing state after add\n    } catch (error) {\n      console.error(\"Error adding connection:\", error);\n      showMessage(`Error adding connection: ${error.message}`, 8000);\n    }\n  };\n\n  // Handle updating an existing connection\n  const handleUpdateConnection = async (id, updatedConnectionData) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/connections/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(updatedConnectionData)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      fetchData(\"connections\", setConnections);\n      showMessage(\"Connection updated successfully!\");\n      setEditingConnection(null); // Clear editing state after update\n    } catch (error) {\n      console.error(\"Error updating connection:\", error);\n      showMessage(`Error updating connection: ${error.message}`, 8000);\n    }\n  };\n\n  // Handle deleting a connection\n  const handleDeleteConnection = async id => {\n    const confirmed = window.confirm(\"Are you sure you want to delete this connection?\");\n    if (!confirmed) {\n      return;\n    }\n    try {\n      const response = await fetch(`${API_BASE_URL}/connections/${id}`, {\n        method: \"DELETE\"\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      setConnections(prev => prev.filter(conn => conn.id !== id));\n      showMessage(\"Connection deleted successfully!\");\n    } catch (error) {\n      console.error(\"Error deleting connection:\", error);\n      showMessage(`Error deleting connection: ${error.message}`, 5000);\n    }\n  };\n\n  // Handle editing a connection (set the connection to be edited in state for form pre-fill)\n  const handleEditConnection = connection => {\n    var _connection$pc, _connection$switch;\n    // Format the connection object to match the expected structure of ConnectionForm's state\n    const formattedConnection = {\n      id: connection.id,\n      pc_id: (_connection$pc = connection.pc) === null || _connection$pc === void 0 ? void 0 : _connection$pc.id,\n      switch_id: (_connection$switch = connection.switch) === null || _connection$switch === void 0 ? void 0 : _connection$switch.id,\n      switch_port: connection.switch_port,\n      is_switch_port_up: connection.is_switch_port_up,\n      hops: connection.hops.map(hop => {\n        var _hop$patch_panel;\n        return {\n          patch_panel_id: (_hop$patch_panel = hop.patch_panel) === null || _hop$patch_panel === void 0 ? void 0 : _hop$patch_panel.id,\n          patch_panel_port: hop.patch_panel_port,\n          is_port_up: hop.is_port_up\n        };\n      })\n      // Include full PC and Switch objects for display in the form if needed,\n      // though the form primarily uses their IDs for dropdowns.\n      // The `pcs`, `patchPanels`, `switches` props already provide the full objects.\n    };\n    setEditingConnection(formattedConnection);\n  };\n\n  // Function to add a new PC, Patch Panel, Switch, or Location\n  const handleAddEntity = async (type, data) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/${type}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const newEntity = await response.json();\n      if (type === \"pcs\") setPcs(prev => [...prev, newEntity]);\n      if (type === \"patch_panels\") setPatchPanels(prev => [...prev, newEntity]);\n      if (type === \"switches\") setSwitches(prev => [...prev, newEntity]);\n      if (type === \"locations\") setLocations(prev => [...prev, newEntity]);\n      showMessage(`${type.slice(0, -1).toUpperCase()} added successfully!`);\n      // Re-fetch data relevant to selection dropdowns\n      if (type === \"patch_panels\") fetchData(\"patch_panels\", setPatchPanels);\n      if (type === \"switches\") fetchData(\"switches\", setSwitches);\n      if (type === \"pcs\") fetchData(\"pcs\", setPcs);\n      if (type === \"locations\") fetchData(\"locations\", setLocations);\n    } catch (error) {\n      console.error(`Error adding ${type}:`, error);\n      showMessage(`Error adding ${type}: ${error.message}`, 5000);\n    }\n  };\n\n  // Function to update an existing PC, Patch Panel, Switch, or Location\n  const handleUpdateEntity = async (type, id, data) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/${type}/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const updatedEntity = await response.json();\n      if (type === \"pcs\") setPcs(prev => prev.map(item => item.id === id ? updatedEntity : item));\n      if (type === \"patch_panels\") setPatchPanels(prev => prev.map(item => item.id === id ? updatedEntity : item));\n      if (type === \"switches\") setSwitches(prev => prev.map(item => item.id === id ? updatedEntity : item));\n      if (type === \"locations\") setLocations(prev => prev.map(item => item.id === id ? updatedEntity : item));\n      showMessage(`${type.slice(0, -1).toUpperCase()} updated successfully!`);\n      // Re-fetch connections and other related data as their foreign key info might have changed\n      fetchData(\"connections\", setConnections);\n      fetchData(\"patch_panels\", setPatchPanels);\n      fetchData(\"switches\", setSwitches);\n    } catch (error) {\n      console.error(`Error updating ${type}:`, error);\n      showMessage(`Error updating ${type}: ${error.message}`, 5000);\n    }\n  };\n\n  // Function to delete a PC, Patch Panel, Switch, or Location\n  const handleDeleteEntity = async (type, id) => {\n    const confirmed = window.confirm(`Are you sure you want to delete this ${type.slice(0, -1)}? This will also delete associated connections.`);\n    if (!confirmed) {\n      return;\n    }\n    try {\n      const response = await fetch(`${API_BASE_URL}/${type}/${id}`, {\n        method: \"DELETE\"\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      if (type === \"pcs\") setPcs(prev => prev.filter(item => item.id !== id));\n      if (type === \"patch_panels\") setPatchPanels(prev => prev.filter(item => item.id !== id));\n      if (type === \"switches\") setSwitches(prev => prev.filter(item => item.id !== id));\n      if (type === \"locations\") setLocations(prev => prev.filter(item => item.id !== id));\n      showMessage(`${type.slice(0, -1).toUpperCase()} deleted successfully!`);\n      // Re-fetch connections and other related data as cascade deletions might have occurred\n      fetchData(\"connections\", setConnections);\n      fetchData(\"patch_panels\", setPatchPanels);\n      fetchData(\"switches\", setSwitches);\n    } catch (error) {\n      console.error(`Error deleting ${type}:`, error);\n      showMessage(`Error deleting ${type}: ${error.message}`, 5000);\n    }\n  };\n\n  // Function to open the port status modal\n  const handleShowPortStatus = async (entityType, entityId) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/${entityType}/${entityId}/ports`);\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setPortStatusData(data);\n      setModalEntityType(entityType);\n      setModalEntityId(entityId);\n      setShowPortStatusModal(true);\n    } catch (error) {\n      console.error(`Failed to fetch ${entityType} port status:`, error);\n      showMessage(`Error fetching port status: ${error.message}`, 5000);\n    }\n  };\n  const handleClosePortStatusModal = () => {\n    setShowPortStatusModal(false);\n    setPortStatusData(null);\n    setModalEntityType(null);\n    setModalEntityId(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-gray-100 to-blue-200 font-inter p-4 sm:p-8\",\n    children: [isMessageVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed top-4 left-1/2 -translate-x-1/2 bg-blue-500 text-white px-6 py-3 rounded-lg shadow-lg z-50 animate-fade-in-down\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 9\n    }, this), showPortStatusModal && portStatusData && /*#__PURE__*/_jsxDEV(PortStatusModal, {\n      isOpen: showPortStatusModal,\n      onClose: handleClosePortStatusModal,\n      data: portStatusData,\n      entityType: modalEntityType,\n      entityId: modalEntityId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"mb-8 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-extrabold text-blue-800 tracking-tight sm:text-5xl\",\n        children: \"Network Device Documentation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-2 text-lg text-gray-600\",\n        children: \"Track your network connections from PC to Patch Panel to Switch with ease.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-6xl mx-auto bg-white rounded-xl shadow-lg p-6 sm:p-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex border-b border-gray-200 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `py-3 px-6 text-lg font-medium ${activeTab === \"connections\" ? \"border-b-4 border-blue-600 text-blue-800\" : \"text-gray-600 hover:text-blue-600\"}`,\n          onClick: () => setActiveTab(\"connections\"),\n          children: \"Connections\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `py-3 px-6 text-lg font-medium ${activeTab === \"pcs\" ? \"border-b-4 border-blue-600 text-blue-800\" : \"text-gray-600 hover:text-blue-600\"}`,\n          onClick: () => setActiveTab(\"pcs\"),\n          children: \"PCs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `py-3 px-6 text-lg font-medium ${activeTab === \"switches\" ? \"border-b-4 border-blue-600 text-blue-800\" : \"text-gray-600 hover:text-blue-600\"}`,\n          onClick: () => setActiveTab(\"switches\"),\n          children: \"Switches\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `py-3 px-6 text-lg font-medium ${activeTab === \"patch_panels\" ? \"border-b-4 border-blue-600 text-blue-800\" : \"text-gray-600 hover:text-blue-600\"}`,\n          onClick: () => setActiveTab(\"patch_panels\"),\n          children: \"Patch Panels\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `py-3 px-6 text-lg font-medium ${activeTab === \"locations\" ? \"border-b-4 border-blue-600 text-blue-800\" : \"text-gray-600 hover:text-blue-600\"}`,\n          onClick: () => setActiveTab(\"locations\"),\n          children: \"Locations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this), activeTab === \"connections\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"mb-10 p-6 bg-blue-50 rounded-lg border border-blue-200 shadow-inner\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-bold text-blue-700 mb-4\",\n            children: \"Add/Edit Connection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ConnectionForm, {\n            pcs: pcs,\n            patchPanels: patchPanels,\n            switches: switches,\n            onAddConnection: handleAddConnection,\n            onUpdateConnection: handleUpdateConnection,\n            editingConnection: editingConnection // Pass editingConnection state\n            ,\n            setEditingConnection: setEditingConnection // Pass setter for ConnectionForm to clear/manage\n            ,\n            onAddEntity: handleAddEntity,\n            onShowPortStatus: handleShowPortStatus,\n            locations: locations\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-bold text-blue-700 mb-6\",\n            children: \"All Connections\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ConnectionList, {\n            connections: connections,\n            onDelete: handleDeleteConnection,\n            onEdit: handleEditConnection // Pass handleEditConnection\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 15\n          }, this), connections.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-center text-gray-500 text-lg mt-8\",\n            children: \"No connections found. Start by adding one above.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), activeTab === \"pcs\" && /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold text-blue-700 mb-6\",\n          children: \"All PCs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PcList, {\n          pcs: pcs,\n          onAddEntity: handleAddEntity,\n          onUpdateEntity: handleUpdateEntity,\n          onDeleteEntity: handleDeleteEntity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 11\n      }, this), activeTab === \"switches\" && /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold text-blue-700 mb-6\",\n          children: \"All Switches\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SwitchList, {\n          switches: switches,\n          onAddEntity: handleAddEntity,\n          onUpdateEntity: handleUpdateEntity,\n          onDeleteEntity: handleDeleteEntity,\n          onShowPortStatus: handleShowPortStatus,\n          locations: locations\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 11\n      }, this), activeTab === \"patch_panels\" && /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold text-blue-700 mb-6\",\n          children: \"All Patch Panels\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PatchPanelList, {\n          patchPanels: patchPanels,\n          onAddEntity: handleAddEntity,\n          onUpdateEntity: handleUpdateEntity,\n          onDeleteEntity: handleDeleteEntity,\n          onShowPortStatus: handleShowPortStatus,\n          locations: locations\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 11\n      }, this), activeTab === \"locations\" && /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold text-blue-700 mb-6\",\n          children: \"Manage Locations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-6 rounded-lg shadow-md border border-blue-200 mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-bold text-blue-700 mb-4\",\n            children: \"Add New Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: async e => {\n              e.preventDefault();\n              const name = e.target.locationName.value;\n              if (name.trim()) {\n                await handleAddEntity(\"locations\", {\n                  name\n                });\n                e.target.locationName.value = \"\";\n              }\n            },\n            className: \"flex space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"locationName\",\n              placeholder: \"Location Name (e.g., Data Center)\",\n              className: \"flex-grow p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors duration-200\",\n              children: \"Add Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-3\",\n          children: locations.length > 0 ? locations.map(location => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white rounded-lg shadow-sm border border-gray-100 p-4 flex justify-between items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-lg font-medium text-gray-800\",\n              children: location.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteEntity(\"locations\", location.id),\n              className: \"px-3 py-1 text-sm bg-red-600 text-white rounded-md hover:bg-red-700 transition-colors duration-200\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 21\n            }, this)]\n          }, location.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 19\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-center text-gray-500 text-lg\",\n            children: \"No locations added yet. Add some to get started!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"mt-12 text-center text-gray-500 text-sm\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xA9 2025 Network Doc App. All rights reserved.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 319,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qgS5AjuxMN1qfsLustjdifminFM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","ConnectionList","ConnectionForm","PortStatusModal","PcList","SwitchList","PatchPanelList","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","process","env","NODE_ENV","App","_s","pcs","setPcs","patchPanels","setPatchPanels","switches","setSwitches","connections","setConnections","locations","setLocations","activeTab","setActiveTab","message","setMessage","isMessageVisible","setIsMessageVisible","showPortStatusModal","setShowPortStatusModal","portStatusData","setPortStatusData","modalEntityType","setModalEntityType","modalEntityId","setModalEntityId","editingConnection","setEditingConnection","showMessage","msg","duration","setTimeout","fetchData","endpoint","setter","response","fetch","ok","errorData","json","catch","Error","error","status","data","console","handleAddConnection","newConnectionData","method","headers","body","JSON","stringify","handleUpdateConnection","id","updatedConnectionData","handleDeleteConnection","confirmed","window","confirm","prev","filter","conn","handleEditConnection","connection","_connection$pc","_connection$switch","formattedConnection","pc_id","pc","switch_id","switch","switch_port","is_switch_port_up","hops","map","hop","_hop$patch_panel","patch_panel_id","patch_panel","patch_panel_port","is_port_up","handleAddEntity","type","newEntity","slice","toUpperCase","handleUpdateEntity","updatedEntity","item","handleDeleteEntity","handleShowPortStatus","entityType","entityId","handleClosePortStatusModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onClose","onClick","onAddConnection","onUpdateConnection","onAddEntity","onShowPortStatus","onDelete","onEdit","length","onUpdateEntity","onDeleteEntity","onSubmit","e","preventDefault","name","target","locationName","value","trim","placeholder","required","location","_c","$RefreshReg$"],"sources":["/app/src/App.js"],"sourcesContent":["// frontend/src/App.js\n// This is the main React component for the frontend application.\n// It orchestrates the display of various sections (Connections, PCs, Switches, Patch Panels).\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport ConnectionList from \"./components/ConnectionList\";\nimport ConnectionForm from \"./components/ConnectionForm\";\nimport PortStatusModal from \"./components/PortStatusModal\";\nimport PcList from \"./components/PcList\";\nimport SwitchList from \"./components/SwitchList\";\nimport PatchPanelList from \"./components/PatchPanelList\";\n\n// Base URL for the backend API. When running in Docker Compose,\n// 'backend' is the service name and resolves to the backend container's IP.\nconst API_BASE_URL =\n  process.env.NODE_ENV === \"production\"\n    ? \"/api\" // In production, proxy requests through Nginx or similar\n    : \"http://localhost:5004\"; // For local development with 'npm start'\n\nfunction App() {\n  // State variables to store fetched data\n  const [pcs, setPcs] = useState([]);\n  const [patchPanels, setPatchPanels] = useState([]);\n  const [switches, setSwitches] = useState([]);\n  const [connections, setConnections] = useState([]);\n  const [locations, setLocations] = useState([]);\n\n  // State for current active tab\n  const [activeTab, setActiveTab] = useState(\"connections\"); // 'connections', 'pcs', 'switches', 'patch_panels', 'locations'\n\n  const [message, setMessage] = useState(\"\"); // General message for success/error\n  const [isMessageVisible, setIsMessageVisible] = useState(false); // Controls message visibility\n\n  // State for Port Status Modal\n  const [showPortStatusModal, setShowPortStatusModal] = useState(false);\n  const [portStatusData, setPortStatusData] = useState(null);\n  const [modalEntityType, setModalEntityType] = useState(null);\n  const [modalEntityId, setModalEntityId] = useState(null);\n\n  // State for editing a connection in the ConnectionForm\n  const [editingConnection, setEditingConnection] = useState(null);\n\n  // Function to show a message temporarily\n  const showMessage = (msg, duration = 3000) => {\n    setMessage(msg);\n    setIsMessageVisible(true);\n    setTimeout(() => {\n      setIsMessageVisible(false);\n      setMessage(\"\");\n    }, duration);\n  };\n\n  // Memoized function to fetch data from the backend\n  const fetchData = useCallback(async (endpoint, setter) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/${endpoint}`);\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(\n          errorData.error || `HTTP error! status: ${response.status}`\n        );\n      }\n      const data = await response.json();\n      setter(data);\n    } catch (error) {\n      console.error(`Failed to fetch ${endpoint}:`, error);\n      showMessage(`Error fetching ${endpoint}: ${error.message}`, 5000);\n    }\n  }, []);\n\n  // Fetch all initial data when the component mounts\n  useEffect(() => {\n    fetchData(\"pcs\", setPcs);\n    fetchData(\"patch_panels\", setPatchPanels);\n    fetchData(\"switches\", setSwitches);\n    fetchData(\"connections\", setConnections);\n    fetchData(\"locations\", setLocations);\n  }, [fetchData]);\n\n  // Handle adding a new connection\n  const handleAddConnection = async (newConnectionData) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/connections`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(newConnectionData),\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(\n          errorData.error || `HTTP error! status: ${response.status}`\n        );\n      }\n      fetchData(\"connections\", setConnections);\n      showMessage(\"Connection added successfully!\");\n      setEditingConnection(null); // Clear editing state after add\n    } catch (error) {\n      console.error(\"Error adding connection:\", error);\n      showMessage(`Error adding connection: ${error.message}`, 8000);\n    }\n  };\n\n  // Handle updating an existing connection\n  const handleUpdateConnection = async (id, updatedConnectionData) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/connections/${id}`, {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(updatedConnectionData),\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(\n          errorData.error || `HTTP error! status: ${response.status}`\n        );\n      }\n      fetchData(\"connections\", setConnections);\n      showMessage(\"Connection updated successfully!\");\n      setEditingConnection(null); // Clear editing state after update\n    } catch (error) {\n      console.error(\"Error updating connection:\", error);\n      showMessage(`Error updating connection: ${error.message}`, 8000);\n    }\n  };\n\n  // Handle deleting a connection\n  const handleDeleteConnection = async (id) => {\n    const confirmed = window.confirm(\n      \"Are you sure you want to delete this connection?\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      const response = await fetch(`${API_BASE_URL}/connections/${id}`, {\n        method: \"DELETE\",\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(\n          errorData.error || `HTTP error! status: ${response.status}`\n        );\n      }\n      setConnections((prev) => prev.filter((conn) => conn.id !== id));\n      showMessage(\"Connection deleted successfully!\");\n    } catch (error) {\n      console.error(\"Error deleting connection:\", error);\n      showMessage(`Error deleting connection: ${error.message}`, 5000);\n    }\n  };\n\n  // Handle editing a connection (set the connection to be edited in state for form pre-fill)\n  const handleEditConnection = (connection) => {\n    // Format the connection object to match the expected structure of ConnectionForm's state\n    const formattedConnection = {\n      id: connection.id,\n      pc_id: connection.pc?.id,\n      switch_id: connection.switch?.id,\n      switch_port: connection.switch_port,\n      is_switch_port_up: connection.is_switch_port_up,\n      hops: connection.hops.map((hop) => ({\n        patch_panel_id: hop.patch_panel?.id,\n        patch_panel_port: hop.patch_panel_port,\n        is_port_up: hop.is_port_up,\n      })),\n      // Include full PC and Switch objects for display in the form if needed,\n      // though the form primarily uses their IDs for dropdowns.\n      // The `pcs`, `patchPanels`, `switches` props already provide the full objects.\n    };\n    setEditingConnection(formattedConnection);\n  };\n\n  // Function to add a new PC, Patch Panel, Switch, or Location\n  const handleAddEntity = async (type, data) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/${type}`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(data),\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(\n          errorData.error || `HTTP error! status: ${response.status}`\n        );\n      }\n      const newEntity = await response.json();\n      if (type === \"pcs\") setPcs((prev) => [...prev, newEntity]);\n      if (type === \"patch_panels\")\n        setPatchPanels((prev) => [...prev, newEntity]);\n      if (type === \"switches\") setSwitches((prev) => [...prev, newEntity]);\n      if (type === \"locations\") setLocations((prev) => [...prev, newEntity]);\n      showMessage(`${type.slice(0, -1).toUpperCase()} added successfully!`);\n      // Re-fetch data relevant to selection dropdowns\n      if (type === \"patch_panels\") fetchData(\"patch_panels\", setPatchPanels);\n      if (type === \"switches\") fetchData(\"switches\", setSwitches);\n      if (type === \"pcs\") fetchData(\"pcs\", setPcs);\n      if (type === \"locations\") fetchData(\"locations\", setLocations);\n    } catch (error) {\n      console.error(`Error adding ${type}:`, error);\n      showMessage(`Error adding ${type}: ${error.message}`, 5000);\n    }\n  };\n\n  // Function to update an existing PC, Patch Panel, Switch, or Location\n  const handleUpdateEntity = async (type, id, data) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/${type}/${id}`, {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(data),\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(\n          errorData.error || `HTTP error! status: ${response.status}`\n        );\n      }\n      const updatedEntity = await response.json();\n      if (type === \"pcs\")\n        setPcs((prev) =>\n          prev.map((item) => (item.id === id ? updatedEntity : item))\n        );\n      if (type === \"patch_panels\")\n        setPatchPanels((prev) =>\n          prev.map((item) => (item.id === id ? updatedEntity : item))\n        );\n      if (type === \"switches\")\n        setSwitches((prev) =>\n          prev.map((item) => (item.id === id ? updatedEntity : item))\n        );\n      if (type === \"locations\")\n        setLocations((prev) =>\n          prev.map((item) => (item.id === id ? updatedEntity : item))\n        );\n      showMessage(`${type.slice(0, -1).toUpperCase()} updated successfully!`);\n      // Re-fetch connections and other related data as their foreign key info might have changed\n      fetchData(\"connections\", setConnections);\n      fetchData(\"patch_panels\", setPatchPanels);\n      fetchData(\"switches\", setSwitches);\n    } catch (error) {\n      console.error(`Error updating ${type}:`, error);\n      showMessage(`Error updating ${type}: ${error.message}`, 5000);\n    }\n  };\n\n  // Function to delete a PC, Patch Panel, Switch, or Location\n  const handleDeleteEntity = async (type, id) => {\n    const confirmed = window.confirm(\n      `Are you sure you want to delete this ${type.slice(\n        0,\n        -1\n      )}? This will also delete associated connections.`\n    );\n    if (!confirmed) {\n      return;\n    }\n    try {\n      const response = await fetch(`${API_BASE_URL}/${type}/${id}`, {\n        method: \"DELETE\",\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(\n          errorData.error || `HTTP error! status: ${response.status}`\n        );\n      }\n      if (type === \"pcs\")\n        setPcs((prev) => prev.filter((item) => item.id !== id));\n      if (type === \"patch_panels\")\n        setPatchPanels((prev) => prev.filter((item) => item.id !== id));\n      if (type === \"switches\")\n        setSwitches((prev) => prev.filter((item) => item.id !== id));\n      if (type === \"locations\")\n        setLocations((prev) => prev.filter((item) => item.id !== id));\n      showMessage(`${type.slice(0, -1).toUpperCase()} deleted successfully!`);\n      // Re-fetch connections and other related data as cascade deletions might have occurred\n      fetchData(\"connections\", setConnections);\n      fetchData(\"patch_panels\", setPatchPanels);\n      fetchData(\"switches\", setSwitches);\n    } catch (error) {\n      console.error(`Error deleting ${type}:`, error);\n      showMessage(`Error deleting ${type}: ${error.message}`, 5000);\n    }\n  };\n\n  // Function to open the port status modal\n  const handleShowPortStatus = async (entityType, entityId) => {\n    try {\n      const response = await fetch(\n        `${API_BASE_URL}/${entityType}/${entityId}/ports`\n      );\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(\n          errorData.error || `HTTP error! status: ${response.status}`\n        );\n      }\n      const data = await response.json();\n      setPortStatusData(data);\n      setModalEntityType(entityType);\n      setModalEntityId(entityId);\n      setShowPortStatusModal(true);\n    } catch (error) {\n      console.error(`Failed to fetch ${entityType} port status:`, error);\n      showMessage(`Error fetching port status: ${error.message}`, 5000);\n    }\n  };\n\n  const handleClosePortStatusModal = () => {\n    setShowPortStatusModal(false);\n    setPortStatusData(null);\n    setModalEntityType(null);\n    setModalEntityId(null);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-100 to-blue-200 font-inter p-4 sm:p-8\">\n      {/* Global Message Box */}\n      {isMessageVisible && (\n        <div className=\"fixed top-4 left-1/2 -translate-x-1/2 bg-blue-500 text-white px-6 py-3 rounded-lg shadow-lg z-50 animate-fade-in-down\">\n          {message}\n        </div>\n      )}\n\n      {/* Port Status Modal */}\n      {showPortStatusModal && portStatusData && (\n        <PortStatusModal\n          isOpen={showPortStatusModal}\n          onClose={handleClosePortStatusModal}\n          data={portStatusData}\n          entityType={modalEntityType}\n          entityId={modalEntityId}\n        />\n      )}\n\n      {/* Header Section */}\n      <header className=\"mb-8 text-center\">\n        <h1 className=\"text-4xl font-extrabold text-blue-800 tracking-tight sm:text-5xl\">\n          Network Device Documentation\n        </h1>\n        <p className=\"mt-2 text-lg text-gray-600\">\n          Track your network connections from PC to Patch Panel to Switch with\n          ease.\n        </p>\n      </header>\n\n      {/* Main Content Area */}\n      <main className=\"max-w-6xl mx-auto bg-white rounded-xl shadow-lg p-6 sm:p-8\">\n        {/* Tab Navigation */}\n        <div className=\"flex border-b border-gray-200 mb-6\">\n          <button\n            className={`py-3 px-6 text-lg font-medium ${\n              activeTab === \"connections\"\n                ? \"border-b-4 border-blue-600 text-blue-800\"\n                : \"text-gray-600 hover:text-blue-600\"\n            }`}\n            onClick={() => setActiveTab(\"connections\")}\n          >\n            Connections\n          </button>\n          <button\n            className={`py-3 px-6 text-lg font-medium ${\n              activeTab === \"pcs\"\n                ? \"border-b-4 border-blue-600 text-blue-800\"\n                : \"text-gray-600 hover:text-blue-600\"\n            }`}\n            onClick={() => setActiveTab(\"pcs\")}\n          >\n            PCs\n          </button>\n          <button\n            className={`py-3 px-6 text-lg font-medium ${\n              activeTab === \"switches\"\n                ? \"border-b-4 border-blue-600 text-blue-800\"\n                : \"text-gray-600 hover:text-blue-600\"\n            }`}\n            onClick={() => setActiveTab(\"switches\")}\n          >\n            Switches\n          </button>\n          <button\n            className={`py-3 px-6 text-lg font-medium ${\n              activeTab === \"patch_panels\"\n                ? \"border-b-4 border-blue-600 text-blue-800\"\n                : \"text-gray-600 hover:text-blue-600\"\n            }`}\n            onClick={() => setActiveTab(\"patch_panels\")}\n          >\n            Patch Panels\n          </button>\n          <button\n            className={`py-3 px-6 text-lg font-medium ${\n              activeTab === \"locations\"\n                ? \"border-b-4 border-blue-600 text-blue-800\"\n                : \"text-gray-600 hover:text-blue-600\"\n            }`}\n            onClick={() => setActiveTab(\"locations\")}\n          >\n            Locations\n          </button>\n        </div>\n\n        {/* Conditional Tab Content Rendering */}\n        {activeTab === \"connections\" && (\n          <>\n            {/* Connection Form Section */}\n            <section className=\"mb-10 p-6 bg-blue-50 rounded-lg border border-blue-200 shadow-inner\">\n              <h2 className=\"text-2xl font-bold text-blue-700 mb-4\">\n                Add/Edit Connection\n              </h2>\n              <ConnectionForm\n                pcs={pcs}\n                patchPanels={patchPanels}\n                switches={switches}\n                onAddConnection={handleAddConnection}\n                onUpdateConnection={handleUpdateConnection}\n                editingConnection={editingConnection} // Pass editingConnection state\n                setEditingConnection={setEditingConnection} // Pass setter for ConnectionForm to clear/manage\n                onAddEntity={handleAddEntity}\n                onShowPortStatus={handleShowPortStatus}\n                locations={locations}\n              />\n            </section>\n\n            {/* Connection List Section */}\n            <section>\n              <h2 className=\"text-2xl font-bold text-blue-700 mb-6\">\n                All Connections\n              </h2>\n              <ConnectionList\n                connections={connections}\n                onDelete={handleDeleteConnection}\n                onEdit={handleEditConnection} // Pass handleEditConnection\n              />\n              {connections.length === 0 && (\n                <p className=\"text-center text-gray-500 text-lg mt-8\">\n                  No connections found. Start by adding one above.\n                </p>\n              )}\n            </section>\n          </>\n        )}\n\n        {activeTab === \"pcs\" && (\n          <section>\n            <h2 className=\"text-2xl font-bold text-blue-700 mb-6\">All PCs</h2>\n            <PcList\n              pcs={pcs}\n              onAddEntity={handleAddEntity}\n              onUpdateEntity={handleUpdateEntity}\n              onDeleteEntity={handleDeleteEntity}\n            />\n          </section>\n        )}\n\n        {activeTab === \"switches\" && (\n          <section>\n            <h2 className=\"text-2xl font-bold text-blue-700 mb-6\">\n              All Switches\n            </h2>\n            <SwitchList\n              switches={switches}\n              onAddEntity={handleAddEntity}\n              onUpdateEntity={handleUpdateEntity}\n              onDeleteEntity={handleDeleteEntity}\n              onShowPortStatus={handleShowPortStatus}\n              locations={locations}\n            />\n          </section>\n        )}\n\n        {activeTab === \"patch_panels\" && (\n          <section>\n            <h2 className=\"text-2xl font-bold text-blue-700 mb-6\">\n              All Patch Panels\n            </h2>\n            <PatchPanelList\n              patchPanels={patchPanels}\n              onAddEntity={handleAddEntity}\n              onUpdateEntity={handleUpdateEntity}\n              onDeleteEntity={handleDeleteEntity}\n              onShowPortStatus={handleShowPortStatus}\n              locations={locations}\n            />\n          </section>\n        )}\n\n        {activeTab === \"locations\" && (\n          <section>\n            <h2 className=\"text-2xl font-bold text-blue-700 mb-6\">\n              Manage Locations\n            </h2>\n            {/* Form for adding new locations */}\n            <div className=\"bg-white p-6 rounded-lg shadow-md border border-blue-200 mb-6\">\n              <h3 className=\"text-xl font-bold text-blue-700 mb-4\">\n                Add New Location\n              </h3>\n              <form\n                onSubmit={async (e) => {\n                  e.preventDefault();\n                  const name = e.target.locationName.value;\n                  if (name.trim()) {\n                    await handleAddEntity(\"locations\", { name });\n                    e.target.locationName.value = \"\";\n                  }\n                }}\n                className=\"flex space-x-2\"\n              >\n                <input\n                  type=\"text\"\n                  name=\"locationName\"\n                  placeholder=\"Location Name (e.g., Data Center)\"\n                  className=\"flex-grow p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                  required\n                />\n                <button\n                  type=\"submit\"\n                  className=\"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors duration-200\"\n                >\n                  Add Location\n                </button>\n              </form>\n            </div>\n\n            {/* List of existing locations */}\n            <div className=\"space-y-3\">\n              {locations.length > 0 ? (\n                locations.map((location) => (\n                  <div\n                    key={location.id}\n                    className=\"bg-white rounded-lg shadow-sm border border-gray-100 p-4 flex justify-between items-center\"\n                  >\n                    <span className=\"text-lg font-medium text-gray-800\">\n                      {location.name}\n                    </span>\n                    <button\n                      onClick={() =>\n                        handleDeleteEntity(\"locations\", location.id)\n                      }\n                      className=\"px-3 py-1 text-sm bg-red-600 text-white rounded-md hover:bg-red-700 transition-colors duration-200\"\n                    >\n                      Delete\n                    </button>\n                  </div>\n                ))\n              ) : (\n                <p className=\"text-center text-gray-500 text-lg\">\n                  No locations added yet. Add some to get started!\n                </p>\n              )}\n            </div>\n          </section>\n        )}\n      </main>\n\n      {/* Footer (Optional) */}\n      <footer className=\"mt-12 text-center text-gray-500 text-sm\">\n        <p>&copy; 2025 Network Doc App. All rights reserved.</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}