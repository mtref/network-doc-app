{"ast":null,"code":"var _jsxFileName = \"/app/src/components/SwitchDiagramModal.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/SwitchDiagramModal.js\n// This component displays a modal with a network diagram using React Flow,\n// showing the selected switch, connected PCs, and intermediate patch panel hops.\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport ReactFlow, { MiniMap, Controls, Background, addEdge, useNodesState,\n// Hook to manage nodes state\nuseEdgesState // Hook to manage edges state\n} from \"reactflow\"; // Import necessary React Flow components and hooks\nimport \"reactflow/dist/style.css\"; // Import React Flow styles\n\nimport { XCircle, Network, Server, Laptop, Split, Plug, Wifi, WifiOff } from \"lucide-react\"; // Icons\n\n// Define standard dimensions for nodes for consistent sizing\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NODE_WIDTH = 100;\nconst NODE_HEIGHT = 50;\nconst PP_NODE_WIDTH = 80;\nconst PP_NODE_HEIGHT = 40;\nfunction SwitchDiagramModal({\n  isOpen,\n  onClose,\n  selectedSwitch,\n  connections,\n  pcs,\n  patchPanels,\n  switches\n}) {\n  _s();\n  // React Flow states to hold the nodes and edges for the diagram\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n\n  // Use useCallback for onConnect, recommended by React Flow for performance\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), [setEdges]);\n\n  // State for managing the tooltip\n  const [hoveredNodeData, setHoveredNodeData] = useState(null); // Stores the full node data for tooltip\n  const [tooltipPosition, setTooltipPosition] = useState({\n    x: 0,\n    y: 0\n  }); // Stores screen position for tooltip\n\n  // Tooltip handlers for React Flow nodes\n  const onNodeMouseEnter = useCallback((event, node) => {\n    setHoveredNodeData({\n      type: node.data.type,\n      details: node.data.details\n    });\n    setTooltipPosition({\n      x: event.clientX,\n      y: event.clientY\n    });\n  }, []);\n  const onNodeMouseLeave = useCallback(() => {\n    setHoveredNodeData(null);\n  }, []);\n\n  // Effect to prepare data for React Flow whenever relevant props change\n  useEffect(() => {\n    // Ensure all necessary data is available before processing\n    if (!selectedSwitch || !connections || !pcs || !patchPanels) {\n      console.log(\"Missing essential data for diagram:\", {\n        selectedSwitch,\n        connections,\n        pcs,\n        patchPanels\n      });\n      setNodes([]); // Clear nodes if data is missing\n      setEdges([]); // Clear edges\n      return;\n    }\n    const rfNodes = [];\n    const rfEdges = [];\n    const center = {\n      x: 400,\n      y: 300\n    };\n    const pcRadius = 250; // Radius for PCs\n    const ppRadius = 150; // Radius for PPs\n\n    // 1. Add the central Switch node\n    // Initial position for the central switch. Layout algorithm will adjust this.\n    // For now, we center it relative to a conceptual origin (0,0) for the React Flow canvas.\n    rfNodes.push({\n      id: `switch-${selectedSwitch.id}`,\n      position: {\n        x: center.x - 50,\n        y: center.y - 50\n      },\n      // Adjusted for node size\n      data: {\n        label: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col items-center p-2 bg-red-500 text-white rounded-md shadow-md text-center\",\n          children: [/*#__PURE__*/_jsxDEV(Server, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-bold text-sm\",\n            children: selectedSwitch.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xs\",\n            children: selectedSwitch.ip_address || \"N/A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this),\n        type: \"Switch\",\n        details: selectedSwitch // Store full details for tooltip\n      },\n      // You can define default styles for node types in React Flow itself, or here directly\n      style: {\n        width: NODE_WIDTH,\n        height: NODE_HEIGHT,\n        borderRadius: \"8px\"\n      }\n    });\n\n    // Maps to track unique PCs and PPs to avoid duplicate nodes\n    const uniquePcMap = new Map(); // Map: pc.id -> pc_data\n    const uniquePpMap = new Map(); // Map: pp.id -> pp_data\n\n    // Filter connections that involve the selected switch as the final destination\n    const connectionsToSelectedSwitch = connections.filter(conn => {\n      const isConnected = Number(conn.switch_id) === Number(selectedSwitch.id); // Ensure numeric comparison\n      const pcExists = !!pcs.find(p => Number(p.id) === Number(conn.pc_id)); // Check if PC object for this ID actually exists\n      // console.log(`Filter conn ${conn.id}: switch_id=${conn.switch_id}, selectedSwitch.id=${selectedSwitch.id}, connected=${isConnected}, pc_id=${conn.pc_id}, pcExists=${pcExists}`);\n      return isConnected && pcExists;\n    });\n\n    // console.log(\"Connections passing preliminary filter:\", connectionsToSelectedSwitch);\n\n    // Iterate over filtered connections to build nodes and edges\n    connectionsToSelectedSwitch.forEach(conn => {\n      // Get full PC data\n      const pcData = pcs.find(p => Number(p.id) === Number(conn.pc_id));\n      if (!pcData) {\n        console.warn(`PC with ID ${conn.pc_id} not found in PCs list for connection ${conn.id}. Skipping this connection's PC node.`);\n        return; // Skip if PC data is genuinely missing\n      }\n\n      // Add PC node if not already added\n      if (!uniquePcMap.has(pcData.id)) {\n        rfNodes.push({\n          id: `pc-${pcData.id}`,\n          // Use pcData.id for React Flow node ID\n          position: {\n            x: -300,\n            y: 0\n          },\n          // Placeholder, layout algorithm will position\n          data: {\n            label: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col items-center p-2 bg-indigo-500 text-white rounded-md shadow-md text-center\",\n              children: [/*#__PURE__*/_jsxDEV(Laptop, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-bold text-sm\",\n                children: pcData.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xs\",\n                children: pcData.ip_address || \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this),\n            type: \"PC\",\n            details: pcData // Store full details for tooltip\n          },\n          style: {\n            width: NODE_WIDTH,\n            height: NODE_HEIGHT,\n            borderRadius: \"8px\"\n          }\n        });\n        uniquePcMap.set(pcData.id, pcData);\n      }\n      let currentSourceNodeId = `pc-${pcData.id}`; // Path starts from this PC's node ID\n\n      // Handle hops\n      conn.hops.forEach(hop => {\n        const ppData = patchPanels.find(p => Number(p.id) === Number(hop.patch_panel_id));\n        if (!ppData) {\n          console.warn(`Patch Panel with ID ${hop.patch_panel_id} not found in Patch Panels list for connection ${conn.id}. Skipping this hop.`);\n          return; // Skip if PP data is genuinely missing\n        }\n        const ppNodeId = `pp-${ppData.id}`; // Use ppData.id for React Flow node ID\n        // Add Patch Panel node if not already added\n        if (!uniquePpMap.has(ppData.id)) {\n          rfNodes.push({\n            id: ppNodeId,\n            position: {\n              x: -150,\n              y: 0\n            },\n            // Placeholder, layout algorithm will position\n            data: {\n              label: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-col items-center p-1 bg-blue-500 text-white rounded-md shadow-md text-center text-xs\",\n                children: [/*#__PURE__*/_jsxDEV(Split, {\n                  size: 15\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-bold\",\n                  children: ppData.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 17\n              }, this),\n              type: \"PatchPanel\",\n              details: ppData // Store full details for tooltip\n            },\n            style: {\n              width: PP_NODE_WIDTH,\n              height: PP_NODE_HEIGHT,\n              borderRadius: \"8px\"\n            }\n          });\n          uniquePpMap.set(ppData.id, ppData);\n        }\n\n        // Add edge from current source to this hop (Patch Panel)\n        rfEdges.push({\n          id: `edge-${conn.id}-hop-${hop.sequence}`,\n          // Use connection ID + hop sequence for unique edge ID\n          source: currentSourceNodeId,\n          target: ppNodeId,\n          type: \"default\",\n          // Can be 'straight', 'step', 'smoothstep', 'bezier'\n          animated: !hop.is_port_up,\n          // Animate if port is down\n          label: `Port: ${hop.patch_panel_port}`,\n          labelBgStyle: {\n            fill: \"transparent\"\n          },\n          // Transparent background for label\n          style: {\n            stroke: hop.is_port_up ? \"#888\" : \"red\",\n            // Gray for intermediate, red if port is down\n            strokeWidth: 2,\n            strokeDasharray: hop.is_port_up ? \"0\" : \"5 5\" // Dashed if down\n          },\n          data: {\n            status: hop.is_port_up ? \"Up\" : \"Down\",\n            port: hop.patch_panel_port,\n            type: \"PP-Segment\"\n          }\n        });\n        currentSourceNodeId = ppNodeId; // Next segment starts from this patch panel\n      });\n\n      // Add final edge from last hop (or PC directly if no hops) to the Switch\n      rfEdges.push({\n        id: `edge-${conn.id}-to-switch`,\n        // Unique ID for the final segment\n        source: currentSourceNodeId,\n        target: `switch-${selectedSwitch.id}`,\n        type: \"default\",\n        animated: !conn.is_switch_port_up,\n        // Animate if switch port is down\n        label: `Sw Port: ${conn.switch_port}`,\n        labelBgStyle: {\n          fill: \"transparent\"\n        },\n        style: {\n          stroke: conn.is_switch_port_up ? \"green\" : \"red\",\n          // Green for up, red for down (main connection)\n          strokeWidth: 3\n        },\n        data: {\n          status: conn.is_switch_port_up ? \"Up\" : \"Down\",\n          port: conn.switch_port,\n          type: \"Switch-Final\"\n        }\n      });\n    });\n\n    // Update React Flow states\n    setNodes(rfNodes);\n    setEdges(rfEdges);\n  }, [selectedSwitch, connections, pcs, patchPanels, switches, setNodes, setEdges]); // Dependencies\n\n  // Conditional rendering of the modal\n  if (!isOpen || !selectedSwitch) return null;\n\n  // Helper to get initial node position based on type and index for a circular-like layout\n  // This is a simplified layout and might need further refinement for complex graphs\n  // It's used in the useEffect, but defined here for scope\n  const getInitialNodePosition = (nodeType, index, numNodes, center, radius) => {\n    if (nodeType === \"Switch\") {\n      return {\n        x: center.x,\n        y: center.y\n      };\n    }\n    const angle = index * (2 * Math.PI) / numNodes + (nodeType === \"PC\" ? 0 : Math.PI / numNodes); // Offset for PPs\n    return {\n      x: center.x + radius * Math.cos(angle),\n      y: center.y + radius * Math.sin(angle)\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-gray-600 bg-opacity-50 flex justify-center items-center z-50 p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow-xl w-full max-w-6xl h-[90vh] overflow-hidden flex flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center p-4 border-b border-gray-200 bg-gray-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold text-gray-800 flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Network, {\n            size: 24,\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), \" Network Diagram:\", \" \", selectedSwitch.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"text-gray-500 hover:text-gray-700 p-1 rounded-full hover:bg-gray-100 transition-colors duration-200\",\n          title: \"Close Diagram\",\n          children: /*#__PURE__*/_jsxDEV(XCircle, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flexGrow: 1,\n          height: \"100%\",\n          position: \"relative\"\n        },\n        children: nodes.length > 0 ? /*#__PURE__*/_jsxDEV(ReactFlow, {\n          nodes: nodes,\n          edges: edges,\n          onNodesChange: onNodesChange,\n          onEdgesChange: onEdgesChange,\n          onConnect: onConnect,\n          onNodeMouseEnter: onNodeMouseEnter,\n          onNodeMouseLeave: onNodeMouseLeave,\n          fitView: true // Fit the view to the diagram content\n          ,\n          attributionPosition: \"bottom-left\",\n          children: [/*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Background, {\n            variant: \"dots\",\n            gap: 12,\n            size: 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-xl text-gray-600\",\n          children: \"No PCs found connected to this switch.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), hoveredNodeData && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"fixed\",\n          // Use 'fixed' to position relative to viewport\n          left: tooltipPosition.x + 15,\n          // Offset from mouse cursor\n          top: tooltipPosition.y + 15,\n          // Offset from mouse cursor\n          zIndex: 1000 // High z-index to ensure it's on top\n        },\n        className: \"bg-gray-800 text-white text-xs p-2 rounded-md shadow-lg pointer-events-none whitespace-nowrap opacity-90 animate-fade-in-down\",\n        children: [hoveredNodeData.type === \"Switch\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Switch:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 19\n            }, this), \" \", hoveredNodeData.details.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"IP: \", hoveredNodeData.details.ip_address || \"N/A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Location: \", hoveredNodeData.details.location_name || \"N/A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Model: \", hoveredNodeData.details.model || \"N/A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total Ports: \", hoveredNodeData.details.total_ports]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), hoveredNodeData.type === \"PC\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"PC:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 19\n            }, this), \" \", hoveredNodeData.details.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"IP: \", hoveredNodeData.details.ip_address || \"N/A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"OS: \", hoveredNodeData.details.operating_system || \"N/A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Office: \", hoveredNodeData.details.office || \"N/A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Username: \", hoveredNodeData.details.username || \"N/A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"In Domain: \", hoveredNodeData.details.in_domain ? \"Yes\" : \"No\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), hoveredNodeData.type === \"PatchPanel\" &&\n        /*#__PURE__*/\n        // Changed from 'PP' to 'PatchPanel'\n        _jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Patch Panel:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 19\n            }, this), \" \", hoveredNodeData.details.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Location: \", hoveredNodeData.details.location_name || \"N/A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Rack: \", hoveredNodeData.details.rack_name || \"N/A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total Ports: \", hoveredNodeData.details.total_ports]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 border-t border-gray-200 bg-gray-50 text-sm text-center flex justify-center gap-4 flex-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Plug, {\n            size: 16,\n            className: \"text-green-500 mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 13\n          }, this), \" Port Up\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(WifiOff, {\n            size: 16,\n            className: \"text-red-500 mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this), \" Port Down\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Server, {\n            size: 16,\n            className: \"text-red-500 mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this), \" Switch\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Laptop, {\n            size: 16,\n            className: \"text-indigo-500 mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this), \" PC\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Split, {\n            size: 16,\n            className: \"text-blue-500 mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this), \" Patch Panel\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center ml-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"w-4 h-2 bg-green-500 inline-block mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-1\",\n            children: \"Active Line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"w-4 h-2 bg-red-500 inline-block mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-1\",\n            children: \"Inactive Line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"w-4 h-2 bg-gray-500 inline-block mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-1\",\n            children: \"Intermediate Path\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 283,\n    columnNumber: 5\n  }, this);\n}\n\n// Wrap the component in React.memo for performance\n_s(SwitchDiagramModal, \"8QUqjcxWqCqq9cVbZ2s44TsdM74=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = SwitchDiagramModal;\nexport default _c2 = /*#__PURE__*/React.memo(SwitchDiagramModal);\nvar _c, _c2;\n$RefreshReg$(_c, \"SwitchDiagramModal\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","ReactFlow","MiniMap","Controls","Background","addEdge","useNodesState","useEdgesState","XCircle","Network","Server","Laptop","Split","Plug","Wifi","WifiOff","jsxDEV","_jsxDEV","Fragment","_Fragment","NODE_WIDTH","NODE_HEIGHT","PP_NODE_WIDTH","PP_NODE_HEIGHT","SwitchDiagramModal","isOpen","onClose","selectedSwitch","connections","pcs","patchPanels","switches","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","onConnect","params","eds","hoveredNodeData","setHoveredNodeData","tooltipPosition","setTooltipPosition","x","y","onNodeMouseEnter","event","node","type","data","details","clientX","clientY","onNodeMouseLeave","console","log","rfNodes","rfEdges","center","pcRadius","ppRadius","push","id","position","label","className","children","size","fileName","_jsxFileName","lineNumber","columnNumber","name","ip_address","style","width","height","borderRadius","uniquePcMap","Map","uniquePpMap","connectionsToSelectedSwitch","filter","conn","isConnected","Number","switch_id","pcExists","find","p","pc_id","forEach","pcData","warn","has","set","currentSourceNodeId","hops","hop","ppData","patch_panel_id","ppNodeId","sequence","source","target","animated","is_port_up","patch_panel_port","labelBgStyle","fill","stroke","strokeWidth","strokeDasharray","status","port","is_switch_port_up","switch_port","getInitialNodePosition","nodeType","index","numNodes","radius","angle","Math","PI","cos","sin","onClick","title","flexGrow","length","fitView","attributionPosition","variant","gap","left","top","zIndex","location_name","model","total_ports","operating_system","office","username","in_domain","rack_name","_c","_c2","memo","$RefreshReg$"],"sources":["/app/src/components/SwitchDiagramModal.js"],"sourcesContent":["// frontend/src/components/SwitchDiagramModal.js\n// This component displays a modal with a network diagram using React Flow,\n// showing the selected switch, connected PCs, and intermediate patch panel hops.\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport ReactFlow, {\n  MiniMap,\n  Controls,\n  Background,\n  addEdge,\n  useNodesState, // Hook to manage nodes state\n  useEdgesState, // Hook to manage edges state\n} from \"reactflow\"; // Import necessary React Flow components and hooks\nimport \"reactflow/dist/style.css\"; // Import React Flow styles\n\nimport {\n  XCircle,\n  Network,\n  Server,\n  Laptop,\n  Split,\n  Plug,\n  Wifi,\n  WifiOff,\n} from \"lucide-react\"; // Icons\n\n// Define standard dimensions for nodes for consistent sizing\nconst NODE_WIDTH = 100;\nconst NODE_HEIGHT = 50;\nconst PP_NODE_WIDTH = 80;\nconst PP_NODE_HEIGHT = 40;\n\nfunction SwitchDiagramModal({\n  isOpen,\n  onClose,\n  selectedSwitch,\n  connections,\n  pcs,\n  patchPanels,\n  switches,\n}) {\n  // React Flow states to hold the nodes and edges for the diagram\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n\n  // Use useCallback for onConnect, recommended by React Flow for performance\n  const onConnect = useCallback(\n    (params) => setEdges((eds) => addEdge(params, eds)),\n    [setEdges]\n  );\n\n  // State for managing the tooltip\n  const [hoveredNodeData, setHoveredNodeData] = useState(null); // Stores the full node data for tooltip\n  const [tooltipPosition, setTooltipPosition] = useState({ x: 0, y: 0 }); // Stores screen position for tooltip\n\n  // Tooltip handlers for React Flow nodes\n  const onNodeMouseEnter = useCallback((event, node) => {\n    setHoveredNodeData({ type: node.data.type, details: node.data.details });\n    setTooltipPosition({ x: event.clientX, y: event.clientY });\n  }, []);\n\n  const onNodeMouseLeave = useCallback(() => {\n    setHoveredNodeData(null);\n  }, []);\n\n  // Effect to prepare data for React Flow whenever relevant props change\n  useEffect(() => {\n    // Ensure all necessary data is available before processing\n    if (!selectedSwitch || !connections || !pcs || !patchPanels) {\n      console.log(\"Missing essential data for diagram:\", {\n        selectedSwitch,\n        connections,\n        pcs,\n        patchPanels,\n      });\n      setNodes([]); // Clear nodes if data is missing\n      setEdges([]); // Clear edges\n      return;\n    }\n\n    const rfNodes = [];\n    const rfEdges = [];\n\n    const center = { x: 400, y: 300 };\n    const pcRadius = 250; // Radius for PCs\n    const ppRadius = 150; // Radius for PPs\n\n    // 1. Add the central Switch node\n    // Initial position for the central switch. Layout algorithm will adjust this.\n    // For now, we center it relative to a conceptual origin (0,0) for the React Flow canvas.\n    rfNodes.push({\n      id: `switch-${selectedSwitch.id}`,\n      position: { x: center.x - 50, y: center.y - 50 }, // Adjusted for node size\n      data: {\n        label: (\n          <div className=\"flex flex-col items-center p-2 bg-red-500 text-white rounded-md shadow-md text-center\">\n            <Server size={24} />\n            <span className=\"font-bold text-sm\">{selectedSwitch.name}</span>\n            <span className=\"text-xs\">\n              {selectedSwitch.ip_address || \"N/A\"}\n            </span>\n          </div>\n        ),\n        type: \"Switch\",\n        details: selectedSwitch, // Store full details for tooltip\n      },\n      // You can define default styles for node types in React Flow itself, or here directly\n      style: { width: NODE_WIDTH, height: NODE_HEIGHT, borderRadius: \"8px\" },\n    });\n\n    // Maps to track unique PCs and PPs to avoid duplicate nodes\n    const uniquePcMap = new Map(); // Map: pc.id -> pc_data\n    const uniquePpMap = new Map(); // Map: pp.id -> pp_data\n\n    // Filter connections that involve the selected switch as the final destination\n    const connectionsToSelectedSwitch = connections.filter((conn) => {\n      const isConnected = Number(conn.switch_id) === Number(selectedSwitch.id); // Ensure numeric comparison\n      const pcExists = !!pcs.find((p) => Number(p.id) === Number(conn.pc_id)); // Check if PC object for this ID actually exists\n      // console.log(`Filter conn ${conn.id}: switch_id=${conn.switch_id}, selectedSwitch.id=${selectedSwitch.id}, connected=${isConnected}, pc_id=${conn.pc_id}, pcExists=${pcExists}`);\n      return isConnected && pcExists;\n    });\n\n    // console.log(\"Connections passing preliminary filter:\", connectionsToSelectedSwitch);\n\n    // Iterate over filtered connections to build nodes and edges\n    connectionsToSelectedSwitch.forEach((conn) => {\n      // Get full PC data\n      const pcData = pcs.find((p) => Number(p.id) === Number(conn.pc_id));\n      if (!pcData) {\n        console.warn(\n          `PC with ID ${conn.pc_id} not found in PCs list for connection ${conn.id}. Skipping this connection's PC node.`\n        );\n        return; // Skip if PC data is genuinely missing\n      }\n\n      // Add PC node if not already added\n      if (!uniquePcMap.has(pcData.id)) {\n        rfNodes.push({\n          id: `pc-${pcData.id}`, // Use pcData.id for React Flow node ID\n          position: { x: -300, y: 0 }, // Placeholder, layout algorithm will position\n          data: {\n            label: (\n              <div className=\"flex flex-col items-center p-2 bg-indigo-500 text-white rounded-md shadow-md text-center\">\n                <Laptop size={20} />\n                <span className=\"font-bold text-sm\">{pcData.name}</span>\n                <span className=\"text-xs\">{pcData.ip_address || \"N/A\"}</span>\n              </div>\n            ),\n            type: \"PC\",\n            details: pcData, // Store full details for tooltip\n          },\n          style: {\n            width: NODE_WIDTH,\n            height: NODE_HEIGHT,\n            borderRadius: \"8px\",\n          },\n        });\n        uniquePcMap.set(pcData.id, pcData);\n      }\n\n      let currentSourceNodeId = `pc-${pcData.id}`; // Path starts from this PC's node ID\n\n      // Handle hops\n      conn.hops.forEach((hop) => {\n        const ppData = patchPanels.find(\n          (p) => Number(p.id) === Number(hop.patch_panel_id)\n        );\n        if (!ppData) {\n          console.warn(\n            `Patch Panel with ID ${hop.patch_panel_id} not found in Patch Panels list for connection ${conn.id}. Skipping this hop.`\n          );\n          return; // Skip if PP data is genuinely missing\n        }\n\n        const ppNodeId = `pp-${ppData.id}`; // Use ppData.id for React Flow node ID\n        // Add Patch Panel node if not already added\n        if (!uniquePpMap.has(ppData.id)) {\n          rfNodes.push({\n            id: ppNodeId,\n            position: { x: -150, y: 0 }, // Placeholder, layout algorithm will position\n            data: {\n              label: (\n                <div className=\"flex flex-col items-center p-1 bg-blue-500 text-white rounded-md shadow-md text-center text-xs\">\n                  <Split size={15} />\n                  <span className=\"font-bold\">{ppData.name}</span>\n                </div>\n              ),\n              type: \"PatchPanel\",\n              details: ppData, // Store full details for tooltip\n            },\n            style: {\n              width: PP_NODE_WIDTH,\n              height: PP_NODE_HEIGHT,\n              borderRadius: \"8px\",\n            },\n          });\n          uniquePpMap.set(ppData.id, ppData);\n        }\n\n        // Add edge from current source to this hop (Patch Panel)\n        rfEdges.push({\n          id: `edge-${conn.id}-hop-${hop.sequence}`, // Use connection ID + hop sequence for unique edge ID\n          source: currentSourceNodeId,\n          target: ppNodeId,\n          type: \"default\", // Can be 'straight', 'step', 'smoothstep', 'bezier'\n          animated: !hop.is_port_up, // Animate if port is down\n          label: `Port: ${hop.patch_panel_port}`,\n          labelBgStyle: { fill: \"transparent\" }, // Transparent background for label\n          style: {\n            stroke: hop.is_port_up ? \"#888\" : \"red\", // Gray for intermediate, red if port is down\n            strokeWidth: 2,\n            strokeDasharray: hop.is_port_up ? \"0\" : \"5 5\", // Dashed if down\n          },\n          data: {\n            status: hop.is_port_up ? \"Up\" : \"Down\",\n            port: hop.patch_panel_port,\n            type: \"PP-Segment\",\n          },\n        });\n        currentSourceNodeId = ppNodeId; // Next segment starts from this patch panel\n      });\n\n      // Add final edge from last hop (or PC directly if no hops) to the Switch\n      rfEdges.push({\n        id: `edge-${conn.id}-to-switch`, // Unique ID for the final segment\n        source: currentSourceNodeId,\n        target: `switch-${selectedSwitch.id}`,\n        type: \"default\",\n        animated: !conn.is_switch_port_up, // Animate if switch port is down\n        label: `Sw Port: ${conn.switch_port}`,\n        labelBgStyle: { fill: \"transparent\" },\n        style: {\n          stroke: conn.is_switch_port_up ? \"green\" : \"red\", // Green for up, red for down (main connection)\n          strokeWidth: 3,\n        },\n        data: {\n          status: conn.is_switch_port_up ? \"Up\" : \"Down\",\n          port: conn.switch_port,\n          type: \"Switch-Final\",\n        },\n      });\n    });\n\n    // Update React Flow states\n    setNodes(rfNodes);\n    setEdges(rfEdges);\n  }, [\n    selectedSwitch,\n    connections,\n    pcs,\n    patchPanels,\n    switches,\n    setNodes,\n    setEdges,\n  ]); // Dependencies\n\n  // Conditional rendering of the modal\n  if (!isOpen || !selectedSwitch) return null;\n\n  // Helper to get initial node position based on type and index for a circular-like layout\n  // This is a simplified layout and might need further refinement for complex graphs\n  // It's used in the useEffect, but defined here for scope\n  const getInitialNodePosition = (\n    nodeType,\n    index,\n    numNodes,\n    center,\n    radius\n  ) => {\n    if (nodeType === \"Switch\") {\n      return { x: center.x, y: center.y };\n    }\n    const angle =\n      (index * (2 * Math.PI)) / numNodes +\n      (nodeType === \"PC\" ? 0 : Math.PI / numNodes); // Offset for PPs\n    return {\n      x: center.x + radius * Math.cos(angle),\n      y: center.y + radius * Math.sin(angle),\n    };\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex justify-center items-center z-50 p-4\">\n      <div className=\"bg-white rounded-lg shadow-xl w-full max-w-6xl h-[90vh] overflow-hidden flex flex-col\">\n        {/* Modal Header */}\n        <div className=\"flex justify-between items-center p-4 border-b border-gray-200 bg-gray-50\">\n          <h2 className=\"text-xl font-bold text-gray-800 flex items-center\">\n            <Network size={24} className=\"mr-2\" /> Network Diagram:{\" \"}\n            {selectedSwitch.name}\n          </h2>\n          <button\n            onClick={onClose}\n            className=\"text-gray-500 hover:text-gray-700 p-1 rounded-full hover:bg-gray-100 transition-colors duration-200\"\n            title=\"Close Diagram\"\n          >\n            <XCircle size={24} />\n          </button>\n        </div>\n\n        {/* React Flow Diagram Area */}\n        <div style={{ flexGrow: 1, height: \"100%\", position: \"relative\" }}>\n          {/* Ensure ReactFlow is only rendered if nodes exist to avoid initial errors */}\n          {nodes.length > 0 ? (\n            <ReactFlow\n              nodes={nodes}\n              edges={edges}\n              onNodesChange={onNodesChange}\n              onEdgesChange={onEdgesChange}\n              onConnect={onConnect}\n              onNodeMouseEnter={onNodeMouseEnter}\n              onNodeMouseLeave={onNodeMouseLeave}\n              fitView // Fit the view to the diagram content\n              attributionPosition=\"bottom-left\"\n            >\n              <MiniMap /> {/* Optional: Mini-map for navigation */}\n              <Controls /> {/* Optional: Zoom in/out, fit view controls */}\n              <Background variant=\"dots\" gap={12} size={1} />\n              {/* Future: Custom Node/Edge types would be registered here */}\n            </ReactFlow>\n          ) : (\n            <p className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-xl text-gray-600\">\n              No PCs found connected to this switch.\n            </p>\n          )}\n        </div>\n\n        {/* Floating Tooltip */}\n        {hoveredNodeData && (\n          <div\n            style={{\n              position: \"fixed\", // Use 'fixed' to position relative to viewport\n              left: tooltipPosition.x + 15, // Offset from mouse cursor\n              top: tooltipPosition.y + 15, // Offset from mouse cursor\n              zIndex: 1000, // High z-index to ensure it's on top\n            }}\n            className=\"bg-gray-800 text-white text-xs p-2 rounded-md shadow-lg pointer-events-none whitespace-nowrap opacity-90 animate-fade-in-down\"\n          >\n            {hoveredNodeData.type === \"Switch\" && (\n              <>\n                <p>\n                  <strong>Switch:</strong> {hoveredNodeData.details.name}\n                </p>\n                <p>IP: {hoveredNodeData.details.ip_address || \"N/A\"}</p>\n                <p>\n                  Location: {hoveredNodeData.details.location_name || \"N/A\"}\n                </p>\n                <p>Model: {hoveredNodeData.details.model || \"N/A\"}</p>\n                <p>Total Ports: {hoveredNodeData.details.total_ports}</p>\n              </>\n            )}\n            {hoveredNodeData.type === \"PC\" && (\n              <>\n                <p>\n                  <strong>PC:</strong> {hoveredNodeData.details.name}\n                </p>\n                <p>IP: {hoveredNodeData.details.ip_address || \"N/A\"}</p>\n                <p>OS: {hoveredNodeData.details.operating_system || \"N/A\"}</p>\n                <p>Office: {hoveredNodeData.details.office || \"N/A\"}</p>\n                <p>Username: {hoveredNodeData.details.username || \"N/A\"}</p>\n                <p>\n                  In Domain: {hoveredNodeData.details.in_domain ? \"Yes\" : \"No\"}\n                </p>\n              </>\n            )}\n            {hoveredNodeData.type === \"PatchPanel\" && ( // Changed from 'PP' to 'PatchPanel'\n              <>\n                <p>\n                  <strong>Patch Panel:</strong> {hoveredNodeData.details.name}\n                </p>\n                <p>\n                  Location: {hoveredNodeData.details.location_name || \"N/A\"}\n                </p>\n                <p>Rack: {hoveredNodeData.details.rack_name || \"N/A\"}</p>\n                <p>Total Ports: {hoveredNodeData.details.total_ports}</p>\n              </>\n            )}\n          </div>\n        )}\n\n        {/* Footer for status legend */}\n        <div className=\"p-4 border-t border-gray-200 bg-gray-50 text-sm text-center flex justify-center gap-4 flex-wrap\">\n          <div className=\"flex items-center\">\n            <Plug size={16} className=\"text-green-500 mr-1\" /> Port Up\n          </div>\n          <div className=\"flex items-center\">\n            <WifiOff size={16} className=\"text-red-500 mr-1\" /> Port Down\n          </div>\n          <div className=\"flex items-center\">\n            <Server size={16} className=\"text-red-500 mr-1\" /> Switch\n          </div>\n          <div className=\"flex items-center\">\n            <Laptop size={16} className=\"text-indigo-500 mr-1\" /> PC\n          </div>\n          <div className=\"flex items-center\">\n            <Split size={16} className=\"text-blue-500 mr-1\" /> Patch Panel\n          </div>\n          <div className=\"flex items-center ml-4\">\n            <span className=\"w-4 h-2 bg-green-500 inline-block mr-1\"></span>\n            <span className=\"ml-1\">Active Line</span>\n          </div>\n          <div className=\"flex items-center\">\n            <span className=\"w-4 h-2 bg-red-500 inline-block mr-1\"></span>\n            <span className=\"ml-1\">Inactive Line</span>\n          </div>\n          <div className=\"flex items-center\">\n            <span className=\"w-4 h-2 bg-gray-500 inline-block mr-1\"></span>\n            <span className=\"ml-1\">Intermediate Path</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Wrap the component in React.memo for performance\nexport default React.memo(SwitchDiagramModal);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}