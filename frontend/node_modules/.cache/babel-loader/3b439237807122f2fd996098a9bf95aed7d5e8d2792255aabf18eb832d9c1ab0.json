{"ast":null,"code":"var _jsxFileName = \"/app/src/components/SwitchDiagramModal.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/SwitchDiagramModal.js\n// This component displays a modal with a network diagram using React Flow,\n// showing the selected switch, connected PCs, and intermediate patch panel hops.\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport ReactFlow, { MiniMap, Controls, Background, addEdge, useNodesState, useEdgesState } from \"reactflow\";\nimport \"reactflow/dist/style.css\";\nimport { XCircle, Network, Server, Laptop, Split, Plug, Wifi, WifiOff } from \"lucide-react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NODE_WIDTH = 100;\nconst NODE_HEIGHT = 50;\nconst PP_NODE_WIDTH = 80;\nconst PP_NODE_HEIGHT = 40;\n\n// Directly define the component with the intended name and wrap it with React.memo\nfunction SwitchDiagramModal({\n  isOpen,\n  onClose,\n  selectedSwitch,\n  connections,\n  pcs,\n  patchPanels,\n  switches\n}) {\n  _s();\n  // Renamed from SwitchDiagramModalContent\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), [setEdges]);\n  const [hoveredNodeData, setHoveredNodeData] = useState(null);\n  const [tooltipPosition, setTooltipPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const onNodeMouseEnter = useCallback((event, node) => {\n    setHoveredNodeData({\n      type: node.data.type,\n      details: node.data.details\n    });\n    setTooltipPosition({\n      x: event.clientX,\n      y: event.clientY\n    });\n  }, []);\n  const onNodeMouseLeave = useCallback(() => {\n    setHoveredNodeData(null);\n  }, []);\n\n  // --- ADD THESE CONSOLE.LOGS ---\n  console.log(\"--- SwitchDiagramModal Debugging ---\");\n  console.log(\"isOpen:\", isOpen);\n  console.log(\"selectedSwitch:\", selectedSwitch);\n  console.log(\"Connections (full list from App):\", connections);\n  console.log(\"PCs (full list from App):\", pcs);\n  console.log(\"Patch Panels (full list from App):\", patchPanels);\n  useEffect(() => {\n    if (!selectedSwitch || !connections || !pcs || !patchPanels || !switches) return;\n    const rfNodes = [];\n    const rfEdges = [];\n    const center = {\n      x: 400,\n      y: 300\n    };\n    const pcRadius = 250;\n    const ppRadius = 150; // Radius for PPs\n\n    rfNodes.push({\n      id: `switch-${selectedSwitch.id}`,\n      position: {\n        x: center.x - 50,\n        y: center.y - 50\n      },\n      data: {\n        label: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col items-center p-2 bg-red-500 text-white rounded-md shadow-md text-center\",\n          children: [/*#__PURE__*/_jsxDEV(Server, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-bold text-sm\",\n            children: selectedSwitch.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xs\",\n            children: selectedSwitch.ip_address || \"N/A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this),\n        type: \"Switch\",\n        details: selectedSwitch\n      },\n      style: {\n        width: NODE_WIDTH,\n        height: NODE_HEIGHT,\n        borderRadius: \"8px\"\n      }\n    });\n    const uniquePcMap = new Map();\n    const uniquePpMap = new Map();\n    const connectionsToSelectedSwitch = connections.filter(conn => conn.switch_id === selectedSwitch.id && conn.pc);\n    connectionsToSelectedSwitch.forEach(conn => {\n      const pcData = pcs.find(p => p.id === conn.pc_id);\n      if (pcData && !uniquePcMap.has(pcData.id)) {\n        uniquePcMap.set(pcData.id, pcData);\n      }\n      conn.hops.forEach(hop => {\n        if (hop.patch_panel && !uniquePpMap.has(hop.patch_panel.id)) {\n          uniquePpMap.set(hop.patch_panel.id, hop.patch_panel);\n        }\n      });\n    });\n\n    // Add unique PC nodes\n    Array.from(uniquePcMap.values()).forEach((pc, index) => {\n      const pos = getInitialNodePosition(\"PC\", index, uniquePcMap.size, center, pcRadius);\n      rfNodes.push({\n        id: `pc-${pc.id}`,\n        position: {\n          x: pos.x - 50,\n          y: pos.y - 50\n        },\n        data: {\n          label: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col items-center p-2 bg-indigo-500 text-white rounded-md shadow-md text-center\",\n            children: [/*#__PURE__*/_jsxDEV(Laptop, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold text-sm\",\n              children: pc.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs\",\n              children: pc.ip_address || \"N/A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this),\n          type: \"PC\",\n          details: pc\n        },\n        style: {\n          width: NODE_WIDTH,\n          height: NODE_HEIGHT,\n          borderRadius: \"8px\"\n        }\n      });\n    });\n\n    // Add unique Patch Panel nodes\n    Array.from(uniquePpMap.values()).forEach((pp, index) => {\n      const pos = getInitialNodePosition(\"PP\", index, uniquePpMap.size, center, ppRadius);\n      rfNodes.push({\n        id: `pp-${pp.id}`,\n        position: {\n          x: pos.x - 40,\n          y: pos.y - 25\n        },\n        data: {\n          label: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col items-center p-1 bg-blue-500 text-white rounded-md shadow-md text-center text-xs\",\n            children: [/*#__PURE__*/_jsxDEV(Split, {\n              size: 15\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold\",\n              children: pp.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this),\n          type: \"PatchPanel\",\n          details: pp\n        },\n        style: {\n          width: PP_NODE_WIDTH,\n          height: PP_NODE_HEIGHT,\n          borderRadius: \"8px\"\n        }\n      });\n    });\n    connectionsToSelectedSwitch.forEach(conn => {\n      const pcNodeId = `pc-${conn.pc.id}`;\n      const switchNodeId = `switch-${selectedSwitch.id}`;\n      let currentSourceNodeId = pcNodeId;\n      conn.hops.forEach((hop, index) => {\n        const ppNodeId = `pp-${hop.patch_panel.id}`;\n        rfEdges.push({\n          id: `edge-${conn.id}-hop-${index}`,\n          source: currentSourceNodeId,\n          target: ppNodeId,\n          type: \"default\",\n          animated: !hop.is_port_up,\n          label: `Port: ${hop.patch_panel_port}`,\n          labelBgStyle: {\n            fill: \"transparent\"\n          },\n          style: {\n            stroke: hop.is_port_up ? \"#888\" : \"red\",\n            strokeWidth: 2,\n            strokeDasharray: hop.is_port_up ? \"0\" : \"5 5\"\n          },\n          data: {\n            status: hop.is_port_up ? \"Up\" : \"Down\"\n          }\n        });\n        currentSourceNodeId = ppNodeId;\n      });\n      rfEdges.push({\n        id: `edge-${conn.id}-to-switch`,\n        source: currentSourceNodeId,\n        target: switchNodeId,\n        type: \"default\",\n        animated: !conn.is_switch_port_up,\n        label: `Sw Port: ${conn.switch_port}`,\n        labelBgStyle: {\n          fill: \"transparent\"\n        },\n        style: {\n          stroke: conn.is_switch_port_up ? \"green\" : \"red\",\n          strokeWidth: 3\n        },\n        data: {\n          status: conn.is_switch_port_up ? \"Up\" : \"Down\"\n        }\n      });\n    });\n    setNodes(rfNodes);\n    setEdges(rfEdges);\n  }, [selectedSwitch, connections, pcs, patchPanels, switches, setNodes, setEdges]);\n  if (!isOpen || !selectedSwitch) return null;\n\n  // Filter connections to identify those relevant to the selected switch\n  const relevantConnections = connections.filter(conn => {\n    // Log each connection's switch_id and pc_id for detailed inspection\n    console.log(`Checking conn.id: ${conn.id}, conn.switch_id: ${conn.switch_id}, conn.pc_id: ${conn.pc_id}`);\n    const isConnectedToSelectedSwitch = conn.switch_id === selectedSwitch.id;\n    const hasPcReference = !!conn.pc_id; // Check for pc_id\n    const hasPcObject = !!conn.pc; // Check for nested pc object\n\n    if (!isConnectedToSelectedSwitch) {\n      console.log(`- Not connected to selected switch (ID: ${selectedSwitch.id})`);\n    }\n    if (!hasPcReference) {\n      console.log(\"- Missing pc_id reference\");\n    }\n    if (!hasPcObject) {\n      console.log(\"- Missing nested PC object\");\n    }\n    return isConnectedToSelectedSwitch && hasPcReference && hasPcObject;\n  });\n  console.log(\"Relevant Connections found:\", relevantConnections);\n  console.log(\"--- End SwitchDiagramModal Debugging ---\");\n\n  // Helper to get initial node position based on type and index for a circular-like layout\n  // This is a simplified layout and might need further refinement for complex graphs\n  const getInitialNodePosition = (nodeType, index, numNodes, center, radius) => {\n    if (nodeType === \"Switch\") {\n      return {\n        x: center.x,\n        y: center.y\n      };\n    }\n    const angle = index * (2 * Math.PI) / numNodes + (nodeType === \"PC\" ? 0 : Math.PI / numNodes); // Offset for PPs\n    return {\n      x: center.x + radius * Math.cos(angle),\n      y: center.y + radius * Math.sin(angle)\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-gray-600 bg-opacity-50 flex justify-center items-center z-50 p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow-xl w-full max-w-6xl h-[90vh] overflow-hidden flex flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center p-4 border-b border-gray-200 bg-gray-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold text-gray-800 flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Network, {\n            size: 24,\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), \" Network Diagram:\", \" \", selectedSwitch.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"text-gray-500 hover:text-gray-700 p-1 rounded-full hover:bg-gray-100 transition-colors duration-200\",\n          title: \"Close Diagram\",\n          children: /*#__PURE__*/_jsxDEV(XCircle, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flexGrow: 1,\n          height: \"100%\",\n          position: \"relative\"\n        },\n        children: nodes.length > 0 ? /*#__PURE__*/_jsxDEV(ReactFlow, {\n          nodes: nodes,\n          edges: edges,\n          onNodesChange: onNodesChange,\n          onEdgesChange: onEdgesChange,\n          onConnect: onConnect,\n          onNodeMouseEnter: onNodeMouseEnter,\n          onNodeMouseLeave: onNodeMouseLeave,\n          fitView: true,\n          attributionPosition: \"bottom-left\",\n          children: [/*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Background, {\n            variant: \"dots\",\n            gap: 12,\n            size: 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-xl text-gray-600\",\n          children: \"No PCs found connected to this switch.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), hoveredNodeData && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"fixed\",\n          left: tooltipPosition.x + 15,\n          top: tooltipPosition.y + 15,\n          zIndex: 1000\n        },\n        className: \"bg-gray-800 text-white text-xs p-2 rounded-md shadow-lg pointer-events-none whitespace-nowrap opacity-90 animate-fade-in-down\",\n        children: [hoveredNodeData.type === \"Switch\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Switch:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 19\n            }, this), \" \", hoveredNodeData.details.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"IP: \", hoveredNodeData.details.ip_address || \"N/A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Location: \", hoveredNodeData.details.location_name || \"N/A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Model: \", hoveredNodeData.details.model || \"N/A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total Ports: \", hoveredNodeData.details.total_ports]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), hoveredNodeData.type === \"PC\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"PC:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 19\n            }, this), \" \", hoveredNodeData.details.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"IP: \", hoveredNodeData.details.ip_address || \"N/A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"OS: \", hoveredNodeData.details.operating_system || \"N/A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Office: \", hoveredNodeData.details.office || \"N/A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Username: \", hoveredNodeData.details.username || \"N/A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"In Domain: \", hoveredNodeData.details.in_domain ? \"Yes\" : \"No\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), hoveredNodeData.type === \"PatchPanel\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Patch Panel:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 19\n            }, this), \" \", hoveredNodeData.details.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Location: \", hoveredNodeData.details.location_name || \"N/A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Rack: \", hoveredNodeData.details.rack_name || \"N/A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total Ports: \", hoveredNodeData.details.total_ports]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 border-t border-gray-200 bg-gray-50 text-sm text-center flex justify-center gap-4 flex-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Plug, {\n            size: 16,\n            className: \"text-green-500 mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this), \" Port Up\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(WifiOff, {\n            size: 16,\n            className: \"text-red-500 mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 13\n          }, this), \" Port Down\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Server, {\n            size: 16,\n            className: \"text-red-500 mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this), \" Switch\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Laptop, {\n            size: 16,\n            className: \"text-indigo-500 mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this), \" PC\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Split, {\n            size: 16,\n            className: \"text-blue-500 mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this), \" Patch Panel\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center ml-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"w-4 h-2 bg-green-500 inline-block mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-1\",\n            children: \"Active Line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"w-4 h-2 bg-red-500 inline-block mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-1\",\n            children: \"Inactive Line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"w-4 h-2 bg-gray-500 inline-block mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-1\",\n            children: \"Intermediate Path\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 281,\n    columnNumber: 5\n  }, this);\n}\n\n// Wrap the component in React.memo for performance\n_s(SwitchDiagramModal, \"8QUqjcxWqCqq9cVbZ2s44TsdM74=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = SwitchDiagramModal;\nexport default _c2 = /*#__PURE__*/React.memo(SwitchDiagramModal);\nvar _c, _c2;\n$RefreshReg$(_c, \"SwitchDiagramModal\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","ReactFlow","MiniMap","Controls","Background","addEdge","useNodesState","useEdgesState","XCircle","Network","Server","Laptop","Split","Plug","Wifi","WifiOff","jsxDEV","_jsxDEV","Fragment","_Fragment","NODE_WIDTH","NODE_HEIGHT","PP_NODE_WIDTH","PP_NODE_HEIGHT","SwitchDiagramModal","isOpen","onClose","selectedSwitch","connections","pcs","patchPanels","switches","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","onConnect","params","eds","hoveredNodeData","setHoveredNodeData","tooltipPosition","setTooltipPosition","x","y","onNodeMouseEnter","event","node","type","data","details","clientX","clientY","onNodeMouseLeave","console","log","rfNodes","rfEdges","center","pcRadius","ppRadius","push","id","position","label","className","children","size","fileName","_jsxFileName","lineNumber","columnNumber","name","ip_address","style","width","height","borderRadius","uniquePcMap","Map","uniquePpMap","connectionsToSelectedSwitch","filter","conn","switch_id","pc","forEach","pcData","find","p","pc_id","has","set","hops","hop","patch_panel","Array","from","values","index","pos","getInitialNodePosition","pp","pcNodeId","switchNodeId","currentSourceNodeId","ppNodeId","source","target","animated","is_port_up","patch_panel_port","labelBgStyle","fill","stroke","strokeWidth","strokeDasharray","status","is_switch_port_up","switch_port","relevantConnections","isConnectedToSelectedSwitch","hasPcReference","hasPcObject","nodeType","numNodes","radius","angle","Math","PI","cos","sin","onClick","title","flexGrow","length","fitView","attributionPosition","variant","gap","left","top","zIndex","location_name","model","total_ports","operating_system","office","username","in_domain","rack_name","_c","_c2","memo","$RefreshReg$"],"sources":["/app/src/components/SwitchDiagramModal.js"],"sourcesContent":["// frontend/src/components/SwitchDiagramModal.js\n// This component displays a modal with a network diagram using React Flow,\n// showing the selected switch, connected PCs, and intermediate patch panel hops.\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport ReactFlow, {\n  MiniMap,\n  Controls,\n  Background,\n  addEdge,\n  useNodesState,\n  useEdgesState,\n} from \"reactflow\";\nimport \"reactflow/dist/style.css\";\n\nimport {\n  XCircle,\n  Network,\n  Server,\n  Laptop,\n  Split,\n  Plug,\n  Wifi,\n  WifiOff,\n} from \"lucide-react\";\n\nconst NODE_WIDTH = 100;\nconst NODE_HEIGHT = 50;\nconst PP_NODE_WIDTH = 80;\nconst PP_NODE_HEIGHT = 40;\n\n// Directly define the component with the intended name and wrap it with React.memo\nfunction SwitchDiagramModal({\n  isOpen,\n  onClose,\n  selectedSwitch,\n  connections,\n  pcs,\n  patchPanels,\n  switches,\n}) {\n  // Renamed from SwitchDiagramModalContent\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n\n  const onConnect = useCallback(\n    (params) => setEdges((eds) => addEdge(params, eds)),\n    [setEdges]\n  );\n\n  const [hoveredNodeData, setHoveredNodeData] = useState(null);\n  const [tooltipPosition, setTooltipPosition] = useState({ x: 0, y: 0 });\n\n  const onNodeMouseEnter = useCallback((event, node) => {\n    setHoveredNodeData({ type: node.data.type, details: node.data.details });\n    setTooltipPosition({ x: event.clientX, y: event.clientY });\n  }, []);\n\n  const onNodeMouseLeave = useCallback(() => {\n    setHoveredNodeData(null);\n  }, []);\n\n  // --- ADD THESE CONSOLE.LOGS ---\n  console.log(\"--- SwitchDiagramModal Debugging ---\");\n  console.log(\"isOpen:\", isOpen);\n  console.log(\"selectedSwitch:\", selectedSwitch);\n  console.log(\"Connections (full list from App):\", connections);\n  console.log(\"PCs (full list from App):\", pcs);\n  console.log(\"Patch Panels (full list from App):\", patchPanels);\n\n  useEffect(() => {\n    if (!selectedSwitch || !connections || !pcs || !patchPanels || !switches)\n      return;\n\n    const rfNodes = [];\n    const rfEdges = [];\n\n    const center = { x: 400, y: 300 };\n    const pcRadius = 250;\n    const ppRadius = 150; // Radius for PPs\n\n    rfNodes.push({\n      id: `switch-${selectedSwitch.id}`,\n      position: { x: center.x - 50, y: center.y - 50 },\n      data: {\n        label: (\n          <div className=\"flex flex-col items-center p-2 bg-red-500 text-white rounded-md shadow-md text-center\">\n            <Server size={24} />\n            <span className=\"font-bold text-sm\">{selectedSwitch.name}</span>\n            <span className=\"text-xs\">\n              {selectedSwitch.ip_address || \"N/A\"}\n            </span>\n          </div>\n        ),\n        type: \"Switch\",\n        details: selectedSwitch,\n      },\n      style: { width: NODE_WIDTH, height: NODE_HEIGHT, borderRadius: \"8px\" },\n    });\n\n    const uniquePcMap = new Map();\n    const uniquePpMap = new Map();\n\n    const connectionsToSelectedSwitch = connections.filter(\n      (conn) => conn.switch_id === selectedSwitch.id && conn.pc\n    );\n\n    connectionsToSelectedSwitch.forEach((conn) => {\n      const pcData = pcs.find((p) => p.id === conn.pc_id);\n      if (pcData && !uniquePcMap.has(pcData.id)) {\n        uniquePcMap.set(pcData.id, pcData);\n      }\n      conn.hops.forEach((hop) => {\n        if (hop.patch_panel && !uniquePpMap.has(hop.patch_panel.id)) {\n          uniquePpMap.set(hop.patch_panel.id, hop.patch_panel);\n        }\n      });\n    });\n\n    // Add unique PC nodes\n    Array.from(uniquePcMap.values()).forEach((pc, index) => {\n      const pos = getInitialNodePosition(\n        \"PC\",\n        index,\n        uniquePcMap.size,\n        center,\n        pcRadius\n      );\n      rfNodes.push({\n        id: `pc-${pc.id}`,\n        position: { x: pos.x - 50, y: pos.y - 50 },\n        data: {\n          label: (\n            <div className=\"flex flex-col items-center p-2 bg-indigo-500 text-white rounded-md shadow-md text-center\">\n              <Laptop size={20} />\n              <span className=\"font-bold text-sm\">{pc.name}</span>\n              <span className=\"text-xs\">{pc.ip_address || \"N/A\"}</span>\n            </div>\n          ),\n          type: \"PC\",\n          details: pc,\n        },\n        style: { width: NODE_WIDTH, height: NODE_HEIGHT, borderRadius: \"8px\" },\n      });\n    });\n\n    // Add unique Patch Panel nodes\n    Array.from(uniquePpMap.values()).forEach((pp, index) => {\n      const pos = getInitialNodePosition(\n        \"PP\",\n        index,\n        uniquePpMap.size,\n        center,\n        ppRadius\n      );\n      rfNodes.push({\n        id: `pp-${pp.id}`,\n        position: { x: pos.x - 40, y: pos.y - 25 },\n        data: {\n          label: (\n            <div className=\"flex flex-col items-center p-1 bg-blue-500 text-white rounded-md shadow-md text-center text-xs\">\n              <Split size={15} />\n              <span className=\"font-bold\">{pp.name}</span>\n            </div>\n          ),\n          type: \"PatchPanel\",\n          details: pp,\n        },\n        style: {\n          width: PP_NODE_WIDTH,\n          height: PP_NODE_HEIGHT,\n          borderRadius: \"8px\",\n        },\n      });\n    });\n\n    connectionsToSelectedSwitch.forEach((conn) => {\n      const pcNodeId = `pc-${conn.pc.id}`;\n      const switchNodeId = `switch-${selectedSwitch.id}`;\n\n      let currentSourceNodeId = pcNodeId;\n\n      conn.hops.forEach((hop, index) => {\n        const ppNodeId = `pp-${hop.patch_panel.id}`;\n        rfEdges.push({\n          id: `edge-${conn.id}-hop-${index}`,\n          source: currentSourceNodeId,\n          target: ppNodeId,\n          type: \"default\",\n          animated: !hop.is_port_up,\n          label: `Port: ${hop.patch_panel_port}`,\n          labelBgStyle: { fill: \"transparent\" },\n          style: {\n            stroke: hop.is_port_up ? \"#888\" : \"red\",\n            strokeWidth: 2,\n            strokeDasharray: hop.is_port_up ? \"0\" : \"5 5\",\n          },\n          data: { status: hop.is_port_up ? \"Up\" : \"Down\" },\n        });\n        currentSourceNodeId = ppNodeId;\n      });\n\n      rfEdges.push({\n        id: `edge-${conn.id}-to-switch`,\n        source: currentSourceNodeId,\n        target: switchNodeId,\n        type: \"default\",\n        animated: !conn.is_switch_port_up,\n        label: `Sw Port: ${conn.switch_port}`,\n        labelBgStyle: { fill: \"transparent\" },\n        style: {\n          stroke: conn.is_switch_port_up ? \"green\" : \"red\",\n          strokeWidth: 3,\n        },\n        data: { status: conn.is_switch_port_up ? \"Up\" : \"Down\" },\n      });\n    });\n\n    setNodes(rfNodes);\n    setEdges(rfEdges);\n  }, [\n    selectedSwitch,\n    connections,\n    pcs,\n    patchPanels,\n    switches,\n    setNodes,\n    setEdges,\n  ]);\n\n  if (!isOpen || !selectedSwitch) return null;\n\n  // Filter connections to identify those relevant to the selected switch\n  const relevantConnections = connections.filter((conn) => {\n    // Log each connection's switch_id and pc_id for detailed inspection\n    console.log(\n      `Checking conn.id: ${conn.id}, conn.switch_id: ${conn.switch_id}, conn.pc_id: ${conn.pc_id}`\n    );\n    const isConnectedToSelectedSwitch = conn.switch_id === selectedSwitch.id;\n    const hasPcReference = !!conn.pc_id; // Check for pc_id\n    const hasPcObject = !!conn.pc; // Check for nested pc object\n\n    if (!isConnectedToSelectedSwitch) {\n      console.log(\n        `- Not connected to selected switch (ID: ${selectedSwitch.id})`\n      );\n    }\n    if (!hasPcReference) {\n      console.log(\"- Missing pc_id reference\");\n    }\n    if (!hasPcObject) {\n      console.log(\"- Missing nested PC object\");\n    }\n    return isConnectedToSelectedSwitch && hasPcReference && hasPcObject;\n  });\n  console.log(\"Relevant Connections found:\", relevantConnections);\n  console.log(\"--- End SwitchDiagramModal Debugging ---\");\n\n  // Helper to get initial node position based on type and index for a circular-like layout\n  // This is a simplified layout and might need further refinement for complex graphs\n  const getInitialNodePosition = (\n    nodeType,\n    index,\n    numNodes,\n    center,\n    radius\n  ) => {\n    if (nodeType === \"Switch\") {\n      return { x: center.x, y: center.y };\n    }\n    const angle =\n      (index * (2 * Math.PI)) / numNodes +\n      (nodeType === \"PC\" ? 0 : Math.PI / numNodes); // Offset for PPs\n    return {\n      x: center.x + radius * Math.cos(angle),\n      y: center.y + radius * Math.sin(angle),\n    };\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex justify-center items-center z-50 p-4\">\n      <div className=\"bg-white rounded-lg shadow-xl w-full max-w-6xl h-[90vh] overflow-hidden flex flex-col\">\n        {/* Modal Header */}\n        <div className=\"flex justify-between items-center p-4 border-b border-gray-200 bg-gray-50\">\n          <h2 className=\"text-xl font-bold text-gray-800 flex items-center\">\n            <Network size={24} className=\"mr-2\" /> Network Diagram:{\" \"}\n            {selectedSwitch.name}\n          </h2>\n          <button\n            onClick={onClose}\n            className=\"text-gray-500 hover:text-gray-700 p-1 rounded-full hover:bg-gray-100 transition-colors duration-200\"\n            title=\"Close Diagram\"\n          >\n            <XCircle size={24} />\n          </button>\n        </div>\n\n        {/* React Flow Diagram Area */}\n        <div style={{ flexGrow: 1, height: \"100%\", position: \"relative\" }}>\n          {nodes.length > 0 ? (\n            <ReactFlow\n              nodes={nodes}\n              edges={edges}\n              onNodesChange={onNodesChange}\n              onEdgesChange={onEdgesChange}\n              onConnect={onConnect}\n              onNodeMouseEnter={onNodeMouseEnter}\n              onNodeMouseLeave={onNodeMouseLeave}\n              fitView\n              attributionPosition=\"bottom-left\"\n            >\n              <MiniMap />\n              <Controls />\n              <Background variant=\"dots\" gap={12} size={1} />\n            </ReactFlow>\n          ) : (\n            <p className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-xl text-gray-600\">\n              No PCs found connected to this switch.\n            </p>\n          )}\n        </div>\n\n        {/* Floating Tooltip */}\n        {hoveredNodeData && (\n          <div\n            style={{\n              position: \"fixed\",\n              left: tooltipPosition.x + 15,\n              top: tooltipPosition.y + 15,\n              zIndex: 1000,\n            }}\n            className=\"bg-gray-800 text-white text-xs p-2 rounded-md shadow-lg pointer-events-none whitespace-nowrap opacity-90 animate-fade-in-down\"\n          >\n            {hoveredNodeData.type === \"Switch\" && (\n              <>\n                <p>\n                  <strong>Switch:</strong> {hoveredNodeData.details.name}\n                </p>\n                <p>IP: {hoveredNodeData.details.ip_address || \"N/A\"}</p>\n                <p>\n                  Location: {hoveredNodeData.details.location_name || \"N/A\"}\n                </p>\n                <p>Model: {hoveredNodeData.details.model || \"N/A\"}</p>\n                <p>Total Ports: {hoveredNodeData.details.total_ports}</p>\n              </>\n            )}\n            {hoveredNodeData.type === \"PC\" && (\n              <>\n                <p>\n                  <strong>PC:</strong> {hoveredNodeData.details.name}\n                </p>\n                <p>IP: {hoveredNodeData.details.ip_address || \"N/A\"}</p>\n                <p>OS: {hoveredNodeData.details.operating_system || \"N/A\"}</p>\n                <p>Office: {hoveredNodeData.details.office || \"N/A\"}</p>\n                <p>Username: {hoveredNodeData.details.username || \"N/A\"}</p>\n                <p>\n                  In Domain: {hoveredNodeData.details.in_domain ? \"Yes\" : \"No\"}\n                </p>\n              </>\n            )}\n            {hoveredNodeData.type === \"PatchPanel\" && (\n              <>\n                <p>\n                  <strong>Patch Panel:</strong> {hoveredNodeData.details.name}\n                </p>\n                <p>\n                  Location: {hoveredNodeData.details.location_name || \"N/A\"}\n                </p>\n                <p>Rack: {hoveredNodeData.details.rack_name || \"N/A\"}</p>\n                <p>Total Ports: {hoveredNodeData.details.total_ports}</p>\n              </>\n            )}\n          </div>\n        )}\n\n        {/* Footer for status legend */}\n        <div className=\"p-4 border-t border-gray-200 bg-gray-50 text-sm text-center flex justify-center gap-4 flex-wrap\">\n          <div className=\"flex items-center\">\n            <Plug size={16} className=\"text-green-500 mr-1\" /> Port Up\n          </div>\n          <div className=\"flex items-center\">\n            <WifiOff size={16} className=\"text-red-500 mr-1\" /> Port Down\n          </div>\n          <div className=\"flex items-center\">\n            <Server size={16} className=\"text-red-500 mr-1\" /> Switch\n          </div>\n          <div className=\"flex items-center\">\n            <Laptop size={16} className=\"text-indigo-500 mr-1\" /> PC\n          </div>\n          <div className=\"flex items-center\">\n            <Split size={16} className=\"text-blue-500 mr-1\" /> Patch Panel\n          </div>\n          <div className=\"flex items-center ml-4\">\n            <span className=\"w-4 h-2 bg-green-500 inline-block mr-1\"></span>\n            <span className=\"ml-1\">Active Line</span>\n          </div>\n          <div className=\"flex items-center\">\n            <span className=\"w-4 h-2 bg-red-500 inline-block mr-1\"></span>\n            <span className=\"ml-1\">Inactive Line</span>\n          </div>\n          <div className=\"flex items-center\">\n            <span className=\"w-4 h-2 bg-gray-500 inline-block mr-1\"></span>\n            <span className=\"ml-1\">Intermediate Path</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Wrap the component in React.memo for performance\nexport default React.memo(SwitchDiagramModal);\n"],"mappings":";;AAAA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAOC,SAAS,IACdC,OAAO,EACPC,QAAQ,EACRC,UAAU,EACVC,OAAO,EACPC,aAAa,EACbC,aAAa,QACR,WAAW;AAClB,OAAO,0BAA0B;AAEjC,SACEC,OAAO,EACPC,OAAO,EACPC,MAAM,EACNC,MAAM,EACNC,KAAK,EACLC,IAAI,EACJC,IAAI,EACJC,OAAO,QACF,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtB,MAAMC,UAAU,GAAG,GAAG;AACtB,MAAMC,WAAW,GAAG,EAAE;AACtB,MAAMC,aAAa,GAAG,EAAE;AACxB,MAAMC,cAAc,GAAG,EAAE;;AAEzB;AACA,SAASC,kBAAkBA,CAAC;EAC1BC,MAAM;EACNC,OAAO;EACPC,cAAc;EACdC,WAAW;EACXC,GAAG;EACHC,WAAW;EACXC;AACF,CAAC,EAAE;EAAAC,EAAA;EACD;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,EAAEC,aAAa,CAAC,GAAG7B,aAAa,CAAC,EAAE,CAAC;EAC1D,MAAM,CAAC8B,KAAK,EAAEC,QAAQ,EAAEC,aAAa,CAAC,GAAG/B,aAAa,CAAC,EAAE,CAAC;EAE1D,MAAMgC,SAAS,GAAGvC,WAAW,CAC1BwC,MAAM,IAAKH,QAAQ,CAAEI,GAAG,IAAKpC,OAAO,CAACmC,MAAM,EAAEC,GAAG,CAAC,CAAC,EACnD,CAACJ,QAAQ,CACX,CAAC;EAED,MAAM,CAACK,eAAe,EAAEC,kBAAkB,CAAC,GAAG7C,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAAC8C,eAAe,EAAEC,kBAAkB,CAAC,GAAG/C,QAAQ,CAAC;IAAEgD,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EAEtE,MAAMC,gBAAgB,GAAGhD,WAAW,CAAC,CAACiD,KAAK,EAAEC,IAAI,KAAK;IACpDP,kBAAkB,CAAC;MAAEQ,IAAI,EAAED,IAAI,CAACE,IAAI,CAACD,IAAI;MAAEE,OAAO,EAAEH,IAAI,CAACE,IAAI,CAACC;IAAQ,CAAC,CAAC;IACxER,kBAAkB,CAAC;MAAEC,CAAC,EAAEG,KAAK,CAACK,OAAO;MAAEP,CAAC,EAAEE,KAAK,CAACM;IAAQ,CAAC,CAAC;EAC5D,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,gBAAgB,GAAGxD,WAAW,CAAC,MAAM;IACzC2C,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAc,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;EACnDD,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEjC,MAAM,CAAC;EAC9BgC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE/B,cAAc,CAAC;EAC9C8B,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAE9B,WAAW,CAAC;EAC7D6B,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAE7B,GAAG,CAAC;EAC7C4B,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAE5B,WAAW,CAAC;EAE9D/B,SAAS,CAAC,MAAM;IACd,IAAI,CAAC4B,cAAc,IAAI,CAACC,WAAW,IAAI,CAACC,GAAG,IAAI,CAACC,WAAW,IAAI,CAACC,QAAQ,EACtE;IAEF,MAAM4B,OAAO,GAAG,EAAE;IAClB,MAAMC,OAAO,GAAG,EAAE;IAElB,MAAMC,MAAM,GAAG;MAAEf,CAAC,EAAE,GAAG;MAAEC,CAAC,EAAE;IAAI,CAAC;IACjC,MAAMe,QAAQ,GAAG,GAAG;IACpB,MAAMC,QAAQ,GAAG,GAAG,CAAC,CAAC;;IAEtBJ,OAAO,CAACK,IAAI,CAAC;MACXC,EAAE,EAAE,UAAUtC,cAAc,CAACsC,EAAE,EAAE;MACjCC,QAAQ,EAAE;QAAEpB,CAAC,EAAEe,MAAM,CAACf,CAAC,GAAG,EAAE;QAAEC,CAAC,EAAEc,MAAM,CAACd,CAAC,GAAG;MAAG,CAAC;MAChDK,IAAI,EAAE;QACJe,KAAK,eACHlD,OAAA;UAAKmD,SAAS,EAAC,uFAAuF;UAAAC,QAAA,gBACpGpD,OAAA,CAACP,MAAM;YAAC4D,IAAI,EAAE;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACpBzD,OAAA;YAAMmD,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAAE1C,cAAc,CAACgD;UAAI;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAChEzD,OAAA;YAAMmD,SAAS,EAAC,SAAS;YAAAC,QAAA,EACtB1C,cAAc,CAACiD,UAAU,IAAI;UAAK;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CACN;QACDvB,IAAI,EAAE,QAAQ;QACdE,OAAO,EAAE1B;MACX,CAAC;MACDkD,KAAK,EAAE;QAAEC,KAAK,EAAE1D,UAAU;QAAE2D,MAAM,EAAE1D,WAAW;QAAE2D,YAAY,EAAE;MAAM;IACvE,CAAC,CAAC;IAEF,MAAMC,WAAW,GAAG,IAAIC,GAAG,CAAC,CAAC;IAC7B,MAAMC,WAAW,GAAG,IAAID,GAAG,CAAC,CAAC;IAE7B,MAAME,2BAA2B,GAAGxD,WAAW,CAACyD,MAAM,CACnDC,IAAI,IAAKA,IAAI,CAACC,SAAS,KAAK5D,cAAc,CAACsC,EAAE,IAAIqB,IAAI,CAACE,EACzD,CAAC;IAEDJ,2BAA2B,CAACK,OAAO,CAAEH,IAAI,IAAK;MAC5C,MAAMI,MAAM,GAAG7D,GAAG,CAAC8D,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAAC3B,EAAE,KAAKqB,IAAI,CAACO,KAAK,CAAC;MACnD,IAAIH,MAAM,IAAI,CAACT,WAAW,CAACa,GAAG,CAACJ,MAAM,CAACzB,EAAE,CAAC,EAAE;QACzCgB,WAAW,CAACc,GAAG,CAACL,MAAM,CAACzB,EAAE,EAAEyB,MAAM,CAAC;MACpC;MACAJ,IAAI,CAACU,IAAI,CAACP,OAAO,CAAEQ,GAAG,IAAK;QACzB,IAAIA,GAAG,CAACC,WAAW,IAAI,CAACf,WAAW,CAACW,GAAG,CAACG,GAAG,CAACC,WAAW,CAACjC,EAAE,CAAC,EAAE;UAC3DkB,WAAW,CAACY,GAAG,CAACE,GAAG,CAACC,WAAW,CAACjC,EAAE,EAAEgC,GAAG,CAACC,WAAW,CAAC;QACtD;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;;IAEF;IACAC,KAAK,CAACC,IAAI,CAACnB,WAAW,CAACoB,MAAM,CAAC,CAAC,CAAC,CAACZ,OAAO,CAAC,CAACD,EAAE,EAAEc,KAAK,KAAK;MACtD,MAAMC,GAAG,GAAGC,sBAAsB,CAChC,IAAI,EACJF,KAAK,EACLrB,WAAW,CAACX,IAAI,EAChBT,MAAM,EACNC,QACF,CAAC;MACDH,OAAO,CAACK,IAAI,CAAC;QACXC,EAAE,EAAE,MAAMuB,EAAE,CAACvB,EAAE,EAAE;QACjBC,QAAQ,EAAE;UAAEpB,CAAC,EAAEyD,GAAG,CAACzD,CAAC,GAAG,EAAE;UAAEC,CAAC,EAAEwD,GAAG,CAACxD,CAAC,GAAG;QAAG,CAAC;QAC1CK,IAAI,EAAE;UACJe,KAAK,eACHlD,OAAA;YAAKmD,SAAS,EAAC,0FAA0F;YAAAC,QAAA,gBACvGpD,OAAA,CAACN,MAAM;cAAC2D,IAAI,EAAE;YAAG;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACpBzD,OAAA;cAAMmD,SAAS,EAAC,mBAAmB;cAAAC,QAAA,EAAEmB,EAAE,CAACb;YAAI;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACpDzD,OAAA;cAAMmD,SAAS,EAAC,SAAS;cAAAC,QAAA,EAAEmB,EAAE,CAACZ,UAAU,IAAI;YAAK;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtD,CACN;UACDvB,IAAI,EAAE,IAAI;UACVE,OAAO,EAAEmC;QACX,CAAC;QACDX,KAAK,EAAE;UAAEC,KAAK,EAAE1D,UAAU;UAAE2D,MAAM,EAAE1D,WAAW;UAAE2D,YAAY,EAAE;QAAM;MACvE,CAAC,CAAC;IACJ,CAAC,CAAC;;IAEF;IACAmB,KAAK,CAACC,IAAI,CAACjB,WAAW,CAACkB,MAAM,CAAC,CAAC,CAAC,CAACZ,OAAO,CAAC,CAACgB,EAAE,EAAEH,KAAK,KAAK;MACtD,MAAMC,GAAG,GAAGC,sBAAsB,CAChC,IAAI,EACJF,KAAK,EACLnB,WAAW,CAACb,IAAI,EAChBT,MAAM,EACNE,QACF,CAAC;MACDJ,OAAO,CAACK,IAAI,CAAC;QACXC,EAAE,EAAE,MAAMwC,EAAE,CAACxC,EAAE,EAAE;QACjBC,QAAQ,EAAE;UAAEpB,CAAC,EAAEyD,GAAG,CAACzD,CAAC,GAAG,EAAE;UAAEC,CAAC,EAAEwD,GAAG,CAACxD,CAAC,GAAG;QAAG,CAAC;QAC1CK,IAAI,EAAE;UACJe,KAAK,eACHlD,OAAA;YAAKmD,SAAS,EAAC,gGAAgG;YAAAC,QAAA,gBAC7GpD,OAAA,CAACL,KAAK;cAAC0D,IAAI,EAAE;YAAG;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACnBzD,OAAA;cAAMmD,SAAS,EAAC,WAAW;cAAAC,QAAA,EAAEoC,EAAE,CAAC9B;YAAI;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzC,CACN;UACDvB,IAAI,EAAE,YAAY;UAClBE,OAAO,EAAEoD;QACX,CAAC;QACD5B,KAAK,EAAE;UACLC,KAAK,EAAExD,aAAa;UACpByD,MAAM,EAAExD,cAAc;UACtByD,YAAY,EAAE;QAChB;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFI,2BAA2B,CAACK,OAAO,CAAEH,IAAI,IAAK;MAC5C,MAAMoB,QAAQ,GAAG,MAAMpB,IAAI,CAACE,EAAE,CAACvB,EAAE,EAAE;MACnC,MAAM0C,YAAY,GAAG,UAAUhF,cAAc,CAACsC,EAAE,EAAE;MAElD,IAAI2C,mBAAmB,GAAGF,QAAQ;MAElCpB,IAAI,CAACU,IAAI,CAACP,OAAO,CAAC,CAACQ,GAAG,EAAEK,KAAK,KAAK;QAChC,MAAMO,QAAQ,GAAG,MAAMZ,GAAG,CAACC,WAAW,CAACjC,EAAE,EAAE;QAC3CL,OAAO,CAACI,IAAI,CAAC;UACXC,EAAE,EAAE,QAAQqB,IAAI,CAACrB,EAAE,QAAQqC,KAAK,EAAE;UAClCQ,MAAM,EAAEF,mBAAmB;UAC3BG,MAAM,EAAEF,QAAQ;UAChB1D,IAAI,EAAE,SAAS;UACf6D,QAAQ,EAAE,CAACf,GAAG,CAACgB,UAAU;UACzB9C,KAAK,EAAE,SAAS8B,GAAG,CAACiB,gBAAgB,EAAE;UACtCC,YAAY,EAAE;YAAEC,IAAI,EAAE;UAAc,CAAC;UACrCvC,KAAK,EAAE;YACLwC,MAAM,EAAEpB,GAAG,CAACgB,UAAU,GAAG,MAAM,GAAG,KAAK;YACvCK,WAAW,EAAE,CAAC;YACdC,eAAe,EAAEtB,GAAG,CAACgB,UAAU,GAAG,GAAG,GAAG;UAC1C,CAAC;UACD7D,IAAI,EAAE;YAAEoE,MAAM,EAAEvB,GAAG,CAACgB,UAAU,GAAG,IAAI,GAAG;UAAO;QACjD,CAAC,CAAC;QACFL,mBAAmB,GAAGC,QAAQ;MAChC,CAAC,CAAC;MAEFjD,OAAO,CAACI,IAAI,CAAC;QACXC,EAAE,EAAE,QAAQqB,IAAI,CAACrB,EAAE,YAAY;QAC/B6C,MAAM,EAAEF,mBAAmB;QAC3BG,MAAM,EAAEJ,YAAY;QACpBxD,IAAI,EAAE,SAAS;QACf6D,QAAQ,EAAE,CAAC1B,IAAI,CAACmC,iBAAiB;QACjCtD,KAAK,EAAE,YAAYmB,IAAI,CAACoC,WAAW,EAAE;QACrCP,YAAY,EAAE;UAAEC,IAAI,EAAE;QAAc,CAAC;QACrCvC,KAAK,EAAE;UACLwC,MAAM,EAAE/B,IAAI,CAACmC,iBAAiB,GAAG,OAAO,GAAG,KAAK;UAChDH,WAAW,EAAE;QACf,CAAC;QACDlE,IAAI,EAAE;UAAEoE,MAAM,EAAElC,IAAI,CAACmC,iBAAiB,GAAG,IAAI,GAAG;QAAO;MACzD,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFvF,QAAQ,CAACyB,OAAO,CAAC;IACjBtB,QAAQ,CAACuB,OAAO,CAAC;EACnB,CAAC,EAAE,CACDjC,cAAc,EACdC,WAAW,EACXC,GAAG,EACHC,WAAW,EACXC,QAAQ,EACRG,QAAQ,EACRG,QAAQ,CACT,CAAC;EAEF,IAAI,CAACZ,MAAM,IAAI,CAACE,cAAc,EAAE,OAAO,IAAI;;EAE3C;EACA,MAAMgG,mBAAmB,GAAG/F,WAAW,CAACyD,MAAM,CAAEC,IAAI,IAAK;IACvD;IACA7B,OAAO,CAACC,GAAG,CACT,qBAAqB4B,IAAI,CAACrB,EAAE,qBAAqBqB,IAAI,CAACC,SAAS,iBAAiBD,IAAI,CAACO,KAAK,EAC5F,CAAC;IACD,MAAM+B,2BAA2B,GAAGtC,IAAI,CAACC,SAAS,KAAK5D,cAAc,CAACsC,EAAE;IACxE,MAAM4D,cAAc,GAAG,CAAC,CAACvC,IAAI,CAACO,KAAK,CAAC,CAAC;IACrC,MAAMiC,WAAW,GAAG,CAAC,CAACxC,IAAI,CAACE,EAAE,CAAC,CAAC;;IAE/B,IAAI,CAACoC,2BAA2B,EAAE;MAChCnE,OAAO,CAACC,GAAG,CACT,2CAA2C/B,cAAc,CAACsC,EAAE,GAC9D,CAAC;IACH;IACA,IAAI,CAAC4D,cAAc,EAAE;MACnBpE,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;IAC1C;IACA,IAAI,CAACoE,WAAW,EAAE;MAChBrE,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IAC3C;IACA,OAAOkE,2BAA2B,IAAIC,cAAc,IAAIC,WAAW;EACrE,CAAC,CAAC;EACFrE,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEiE,mBAAmB,CAAC;EAC/DlE,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;;EAEvD;EACA;EACA,MAAM8C,sBAAsB,GAAGA,CAC7BuB,QAAQ,EACRzB,KAAK,EACL0B,QAAQ,EACRnE,MAAM,EACNoE,MAAM,KACH;IACH,IAAIF,QAAQ,KAAK,QAAQ,EAAE;MACzB,OAAO;QAAEjF,CAAC,EAAEe,MAAM,CAACf,CAAC;QAAEC,CAAC,EAAEc,MAAM,CAACd;MAAE,CAAC;IACrC;IACA,MAAMmF,KAAK,GACR5B,KAAK,IAAI,CAAC,GAAG6B,IAAI,CAACC,EAAE,CAAC,GAAIJ,QAAQ,IACjCD,QAAQ,KAAK,IAAI,GAAG,CAAC,GAAGI,IAAI,CAACC,EAAE,GAAGJ,QAAQ,CAAC,CAAC,CAAC;IAChD,OAAO;MACLlF,CAAC,EAAEe,MAAM,CAACf,CAAC,GAAGmF,MAAM,GAAGE,IAAI,CAACE,GAAG,CAACH,KAAK,CAAC;MACtCnF,CAAC,EAAEc,MAAM,CAACd,CAAC,GAAGkF,MAAM,GAAGE,IAAI,CAACG,GAAG,CAACJ,KAAK;IACvC,CAAC;EACH,CAAC;EAED,oBACEjH,OAAA;IAAKmD,SAAS,EAAC,mFAAmF;IAAAC,QAAA,eAChGpD,OAAA;MAAKmD,SAAS,EAAC,uFAAuF;MAAAC,QAAA,gBAEpGpD,OAAA;QAAKmD,SAAS,EAAC,2EAA2E;QAAAC,QAAA,gBACxFpD,OAAA;UAAImD,SAAS,EAAC,mDAAmD;UAAAC,QAAA,gBAC/DpD,OAAA,CAACR,OAAO;YAAC6D,IAAI,EAAE,EAAG;YAACF,SAAS,EAAC;UAAM;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,qBAAiB,EAAC,GAAG,EAC1D/C,cAAc,CAACgD,IAAI;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC,eACLzD,OAAA;UACEsH,OAAO,EAAE7G,OAAQ;UACjB0C,SAAS,EAAC,qGAAqG;UAC/GoE,KAAK,EAAC,eAAe;UAAAnE,QAAA,eAErBpD,OAAA,CAACT,OAAO;YAAC8D,IAAI,EAAE;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAGNzD,OAAA;QAAK4D,KAAK,EAAE;UAAE4D,QAAQ,EAAE,CAAC;UAAE1D,MAAM,EAAE,MAAM;UAAEb,QAAQ,EAAE;QAAW,CAAE;QAAAG,QAAA,EAC/DpC,KAAK,CAACyG,MAAM,GAAG,CAAC,gBACfzH,OAAA,CAAChB,SAAS;UACRgC,KAAK,EAAEA,KAAM;UACbG,KAAK,EAAEA,KAAM;UACbD,aAAa,EAAEA,aAAc;UAC7BG,aAAa,EAAEA,aAAc;UAC7BC,SAAS,EAAEA,SAAU;UACrBS,gBAAgB,EAAEA,gBAAiB;UACnCQ,gBAAgB,EAAEA,gBAAiB;UACnCmF,OAAO;UACPC,mBAAmB,EAAC,aAAa;UAAAvE,QAAA,gBAEjCpD,OAAA,CAACf,OAAO;YAAAqE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACXzD,OAAA,CAACd,QAAQ;YAAAoE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACZzD,OAAA,CAACb,UAAU;YAACyI,OAAO,EAAC,MAAM;YAACC,GAAG,EAAE,EAAG;YAACxE,IAAI,EAAE;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC,gBAEZzD,OAAA;UAAGmD,SAAS,EAAC,mFAAmF;UAAAC,QAAA,EAAC;QAEjG;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MACJ;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,EAGLhC,eAAe,iBACdzB,OAAA;QACE4D,KAAK,EAAE;UACLX,QAAQ,EAAE,OAAO;UACjB6E,IAAI,EAAEnG,eAAe,CAACE,CAAC,GAAG,EAAE;UAC5BkG,GAAG,EAAEpG,eAAe,CAACG,CAAC,GAAG,EAAE;UAC3BkG,MAAM,EAAE;QACV,CAAE;QACF7E,SAAS,EAAC,+HAA+H;QAAAC,QAAA,GAExI3B,eAAe,CAACS,IAAI,KAAK,QAAQ,iBAChClC,OAAA,CAAAE,SAAA;UAAAkD,QAAA,gBACEpD,OAAA;YAAAoD,QAAA,gBACEpD,OAAA;cAAAoD,QAAA,EAAQ;YAAO;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAAChC,eAAe,CAACW,OAAO,CAACsB,IAAI;UAAA;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrD,CAAC,eACJzD,OAAA;YAAAoD,QAAA,GAAG,MAAI,EAAC3B,eAAe,CAACW,OAAO,CAACuB,UAAU,IAAI,KAAK;UAAA;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxDzD,OAAA;YAAAoD,QAAA,GAAG,YACS,EAAC3B,eAAe,CAACW,OAAO,CAAC6F,aAAa,IAAI,KAAK;UAAA;YAAA3E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxD,CAAC,eACJzD,OAAA;YAAAoD,QAAA,GAAG,SAAO,EAAC3B,eAAe,CAACW,OAAO,CAAC8F,KAAK,IAAI,KAAK;UAAA;YAAA5E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtDzD,OAAA;YAAAoD,QAAA,GAAG,eAAa,EAAC3B,eAAe,CAACW,OAAO,CAAC+F,WAAW;UAAA;YAAA7E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,eACzD,CACH,EACAhC,eAAe,CAACS,IAAI,KAAK,IAAI,iBAC5BlC,OAAA,CAAAE,SAAA;UAAAkD,QAAA,gBACEpD,OAAA;YAAAoD,QAAA,gBACEpD,OAAA;cAAAoD,QAAA,EAAQ;YAAG;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAAChC,eAAe,CAACW,OAAO,CAACsB,IAAI;UAAA;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjD,CAAC,eACJzD,OAAA;YAAAoD,QAAA,GAAG,MAAI,EAAC3B,eAAe,CAACW,OAAO,CAACuB,UAAU,IAAI,KAAK;UAAA;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxDzD,OAAA;YAAAoD,QAAA,GAAG,MAAI,EAAC3B,eAAe,CAACW,OAAO,CAACgG,gBAAgB,IAAI,KAAK;UAAA;YAAA9E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC9DzD,OAAA;YAAAoD,QAAA,GAAG,UAAQ,EAAC3B,eAAe,CAACW,OAAO,CAACiG,MAAM,IAAI,KAAK;UAAA;YAAA/E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxDzD,OAAA;YAAAoD,QAAA,GAAG,YAAU,EAAC3B,eAAe,CAACW,OAAO,CAACkG,QAAQ,IAAI,KAAK;UAAA;YAAAhF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC5DzD,OAAA;YAAAoD,QAAA,GAAG,aACU,EAAC3B,eAAe,CAACW,OAAO,CAACmG,SAAS,GAAG,KAAK,GAAG,IAAI;UAAA;YAAAjF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3D,CAAC;QAAA,eACJ,CACH,EACAhC,eAAe,CAACS,IAAI,KAAK,YAAY,iBACpClC,OAAA,CAAAE,SAAA;UAAAkD,QAAA,gBACEpD,OAAA;YAAAoD,QAAA,gBACEpD,OAAA;cAAAoD,QAAA,EAAQ;YAAY;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAAChC,eAAe,CAACW,OAAO,CAACsB,IAAI;UAAA;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1D,CAAC,eACJzD,OAAA;YAAAoD,QAAA,GAAG,YACS,EAAC3B,eAAe,CAACW,OAAO,CAAC6F,aAAa,IAAI,KAAK;UAAA;YAAA3E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxD,CAAC,eACJzD,OAAA;YAAAoD,QAAA,GAAG,QAAM,EAAC3B,eAAe,CAACW,OAAO,CAACoG,SAAS,IAAI,KAAK;UAAA;YAAAlF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzDzD,OAAA;YAAAoD,QAAA,GAAG,eAAa,EAAC3B,eAAe,CAACW,OAAO,CAAC+F,WAAW;UAAA;YAAA7E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,eACzD,CACH;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CACN,eAGDzD,OAAA;QAAKmD,SAAS,EAAC,iGAAiG;QAAAC,QAAA,gBAC9GpD,OAAA;UAAKmD,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAChCpD,OAAA,CAACJ,IAAI;YAACyD,IAAI,EAAE,EAAG;YAACF,SAAS,EAAC;UAAqB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,YACpD;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNzD,OAAA;UAAKmD,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAChCpD,OAAA,CAACF,OAAO;YAACuD,IAAI,EAAE,EAAG;YAACF,SAAS,EAAC;UAAmB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,cACrD;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNzD,OAAA;UAAKmD,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAChCpD,OAAA,CAACP,MAAM;YAAC4D,IAAI,EAAE,EAAG;YAACF,SAAS,EAAC;UAAmB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,WACpD;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNzD,OAAA;UAAKmD,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAChCpD,OAAA,CAACN,MAAM;YAAC2D,IAAI,EAAE,EAAG;YAACF,SAAS,EAAC;UAAsB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,OACvD;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNzD,OAAA;UAAKmD,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAChCpD,OAAA,CAACL,KAAK;YAAC0D,IAAI,EAAE,EAAG;YAACF,SAAS,EAAC;UAAoB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBACpD;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNzD,OAAA;UAAKmD,SAAS,EAAC,wBAAwB;UAAAC,QAAA,gBACrCpD,OAAA;YAAMmD,SAAS,EAAC;UAAwC;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAChEzD,OAAA;YAAMmD,SAAS,EAAC,MAAM;YAAAC,QAAA,EAAC;UAAW;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC,eACNzD,OAAA;UAAKmD,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAChCpD,OAAA;YAAMmD,SAAS,EAAC;UAAsC;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC9DzD,OAAA;YAAMmD,SAAS,EAAC,MAAM;YAAAC,QAAA,EAAC;UAAa;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC,eACNzD,OAAA;UAAKmD,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAChCpD,OAAA;YAAMmD,SAAS,EAAC;UAAuC;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC/DzD,OAAA;YAAMmD,SAAS,EAAC,MAAM;YAAAC,QAAA,EAAC;UAAiB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;;AAEA;AAAA1C,EAAA,CA1XSR,kBAAkB;EAAA,QAUgBlB,aAAa,EACbC,aAAa;AAAA;AAAAmJ,EAAA,GAX/ClI,kBAAkB;AA2X3B,eAAAmI,GAAA,gBAAe9J,KAAK,CAAC+J,IAAI,CAACpI,kBAAkB,CAAC;AAAC,IAAAkI,EAAA,EAAAC,GAAA;AAAAE,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAF,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}