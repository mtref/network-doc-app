{"ast":null,"code":"var _jsxFileName = \"/app/src/components/ConnectionForm.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/ConnectionForm.js\n// This component provides forms to add new PCs, Patch Panels, Switches,\n// and to create or edit network connections between them.\n// Now, the \"Add New\" entity forms are collapsible for a cleaner UI, and\n// Patch Panel and Switch creation/editing use a location dropdown.\n\nimport React, { useState, useEffect } from \"react\";\nimport { ChevronDown, ChevronUp, PlusCircle } from \"lucide-react\"; // Import icons for expand/collapse and add buttons\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ConnectionForm({\n  pcs,\n  patchPanels,\n  switches,\n  onAddConnection,\n  onUpdateConnection,\n  editingConnection,\n  setEditingConnection,\n  onAddEntity,\n  onShowPortStatus,\n  locations\n}) {\n  _s();\n  var _switches$find;\n  const [pcId, setPcId] = useState(\"\");\n  const [switchPort, setSwitchPort] = useState(\"\");\n  const [isSwitchPortUp, setIsSwitchPortUp] = useState(true);\n  const [switchId, setSwitchId] = useState(\"\");\n  const [hops, setHops] = useState([]);\n\n  // States for managing the expanded/collapsed state of each \"Add New\" section\n  const [isNewPcExpanded, setIsNewPcExpanded] = useState(false);\n  const [isNewPpExpanded, setIsNewPpExpanded] = useState(false);\n  const [isNewSwitchExpanded, setIsNewSwitchExpanded] = useState(false);\n\n  // State for new entity forms\n  const [newPcName, setNewPcName] = useState(\"\");\n  const [newPcIp, setNewPcIp] = useState(\"\");\n  const [newPcUsername, setNewPcUsername] = useState(\"\");\n  const [newPcInDomain, setNewPcInDomain] = useState(false);\n  const [newPcOs, setNewPcOs] = useState(\"\");\n  const [newPcPortsName, setNewPcPortsName] = useState(\"\");\n  const [newPcDesc, setNewPcDesc] = useState(\"\");\n  const [newPpName, setNewPpName] = useState(\"\");\n  const [newPpLocationId, setNewPpLocationId] = useState(\"\");\n  const [newPpRowInRack, setNewPpRowInRack] = useState(\"\");\n  const [newPpRackName, setNewPpRackName] = useState(\"\");\n  const [newPpTotalPorts, setNewPpTotalPorts] = useState(1);\n  const [newPpDesc, setNewPpDesc] = useState(\"\");\n  const [newSwitchName, setNewSwitchName] = useState(\"\");\n  const [newSwitchIp, setNewSwitchIp] = useState(\"\");\n  const [newSwitchLocationId, setNewSwitchLocationId] = useState(\"\");\n  const [newSwitchRowInRack, setNewSwitchRowInRack] = useState(\"\");\n  const [newSwitchRackName, setNewSwitchRackName] = useState(\"\");\n  const [newSwitchTotalPorts, setNewSwitchTotalPorts] = useState(1);\n  const [newSwitchSourcePort, setNewSwitchSourcePort] = useState(\"\");\n  const [newSwitchModel, setNewSwitchModel] = useState(\"\");\n  const [newSwitchDesc, setNewSwitchDesc] = useState(\"\");\n\n  // Populate form fields if editing an existing connection\n  useEffect(() => {\n    if (editingConnection) {\n      setPcId(editingConnection.pc_id || \"\");\n      setSwitchId(editingConnection.switch_id || \"\");\n      setSwitchPort(editingConnection.switch_port || \"\");\n      setIsSwitchPortUp(editingConnection.is_switch_port_up !== undefined ? editingConnection.is_switch_port_up : true);\n      setHops(editingConnection.hops || []);\n\n      // Populate PC fields if PC object is available\n      if (editingConnection.pc) {\n        setNewPcName(editingConnection.pc.name || \"\");\n        setNewPcIp(editingConnection.pc.ip_address || \"\");\n        setNewPcUsername(editingConnection.pc.username || \"\");\n        setNewPcInDomain(editingConnection.pc.in_domain || false);\n        setNewPcOs(editingConnection.pc.operating_system || \"\");\n        setNewPcPortsName(editingConnection.pc.ports_name || \"\");\n        setNewPcDesc(editingConnection.pc.description || \"\");\n      } else {\n        // Clear PC form fields if no PC data\n        setNewPcName(\"\");\n        setNewPcIp(\"\");\n        setNewPcUsername(\"\");\n        setNewPcInDomain(false);\n        setNewPcOs(\"\");\n        setNewPcPortsName(\"\");\n        setNewPcDesc(\"\");\n      }\n\n      // Populate Switch fields if Switch object is available\n      if (editingConnection.switch) {\n        setNewSwitchName(editingConnection.switch.name || \"\");\n        setNewSwitchIp(editingConnection.switch.ip_address || \"\");\n        setNewSwitchLocationId(editingConnection.switch.location_id || \"\");\n        setNewSwitchRowInRack(editingConnection.switch.row_in_rack || \"\");\n        setNewSwitchRackName(editingConnection.switch.rack_name || \"\");\n        setNewSwitchTotalPorts(editingConnection.switch.total_ports || 1);\n        setNewSwitchSourcePort(editingConnection.switch.source_port || \"\");\n        setNewSwitchModel(editingConnection.switch.model || \"\");\n        setNewSwitchDesc(editingConnection.switch.description || \"\");\n      } else {\n        // Clear Switch form fields if no Switch data\n        setNewSwitchName(\"\");\n        setNewSwitchIp(\"\");\n        setNewSwitchLocationId(\"\");\n        setNewSwitchRowInRack(\"\");\n        setNewSwitchRackName(\"\");\n        setNewSwitchTotalPorts(1);\n        setNewSwitchSourcePort(\"\");\n        setNewSwitchModel(\"\");\n        setNewSwitchDesc(\"\");\n      }\n\n      // Patch Panel details are within hops, which are handled by setHops\n    } else {\n      // Clear all form fields if not editing\n      setPcId(\"\");\n      setSwitchId(\"\");\n      setSwitchPort(\"\");\n      setIsSwitchPortUp(true);\n      setHops([]);\n      setNewPcName(\"\");\n      setNewPcIp(\"\");\n      setNewPcUsername(\"\");\n      setNewPcInDomain(false);\n      setNewPcOs(\"\");\n      setNewPcPortsName(\"\");\n      setNewPcDesc(\"\");\n      setNewPpName(\"\");\n      setNewPpLocationId(\"\");\n      setNewPpRowInRack(\"\");\n      setNewPpRackName(\"\");\n      setNewPpTotalPorts(1);\n      setNewPpDesc(\"\");\n      setNewSwitchName(\"\");\n      setNewSwitchIp(\"\");\n      setNewSwitchLocationId(\"\");\n      setNewSwitchRowInRack(\"\");\n      setNewSwitchRackName(\"\");\n      setNewSwitchTotalPorts(1);\n      setNewSwitchSourcePort(\"\");\n      setNewSwitchModel(\"\");\n      setNewSwitchDesc(\"\");\n    }\n  }, [editingConnection]);\n\n  // Handle changes for a specific hop's patch panel ID\n  const handleHopPatchPanelChange = (index, value) => {\n    const updatedHops = [...hops];\n    updatedHops[index].patch_panel_id = parseInt(value);\n    setHops(updatedHops);\n  };\n\n  // Handle changes for a specific hop's patch panel port\n  const handleHopPortChange = (index, value) => {\n    const updatedHops = [...hops];\n    updatedHops[index].patch_panel_port = value;\n    setHops(updatedHops);\n  };\n\n  // Handle changes for a specific hop's port status\n  const handleHopPortStatusChange = (index, value) => {\n    const updatedHops = [...hops];\n    updatedHops[index].is_port_up = value;\n    setHops(updatedHops);\n  };\n\n  // Add a new empty hop to the list\n  const addHop = () => {\n    setHops([...hops, {\n      patch_panel_id: \"\",\n      patch_panel_port: \"\",\n      is_port_up: true\n    }]);\n  };\n\n  // Remove a hop by index\n  const removeHop = index => {\n    setHops(hops.filter((_, i) => i !== index));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const allHopsValid = hops.every(hop => hop.patch_panel_id && hop.patch_panel_port.trim());\n    if (!allHopsValid) {\n      alert(\"Please fill out all patch panel details for each hop.\");\n      return;\n    }\n    const connectionData = {\n      pc_id: parseInt(pcId),\n      switch_id: parseInt(switchId),\n      switch_port: switchPort,\n      is_switch_port_up: isSwitchPortUp,\n      hops: hops.map(hop => ({\n        patch_panel_id: hop.patch_panel_id,\n        patch_panel_port: hop.patch_panel_port,\n        is_port_up: hop.is_port_up\n      }))\n    };\n    if (editingConnection) {\n      await onUpdateConnection(editingConnection.id, connectionData);\n    } else {\n      await onAddConnection(connectionData);\n    }\n    setPcId(\"\");\n    setSwitchId(\"\");\n    setSwitchPort(\"\");\n    setIsSwitchPortUp(true);\n    setHops([]);\n    setEditingConnection(null);\n  };\n  const handleCancelEdit = () => {\n    setEditingConnection(null);\n    setPcId(\"\");\n    setSwitchId(\"\");\n    setSwitchPort(\"\");\n    setIsSwitchPortUp(true);\n    setHops([]);\n  };\n  const handleAddPc = async e => {\n    e.preventDefault();\n    // Basic IP validation\n    const ipRegex = /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    if (newPcIp && !ipRegex.test(newPcIp)) {\n      alert(\"Please enter a valid IP address for PC (e.g., 192.168.1.1).\");\n      return;\n    }\n    if (newPcName.trim()) {\n      await onAddEntity(\"pcs\", {\n        name: newPcName,\n        ip_address: newPcIp,\n        username: newPcUsername,\n        in_domain: newPcInDomain,\n        operating_system: newPcOs,\n        ports_name: newPcPortsName,\n        description: newPcDesc\n      });\n      setNewPcName(\"\");\n      setNewPcIp(\"\");\n      setNewPcUsername(\"\");\n      setNewPcInDomain(false);\n      setNewPcOs(\"\");\n      setNewPcPortsName(\"\");\n      setNewPcDesc(\"\");\n      setIsNewPcExpanded(false); // Collapse after adding\n    }\n  };\n  const handleAddPp = async e => {\n    e.preventDefault();\n    if (newPpName.trim() && newPpLocationId) {\n      await onAddEntity(\"patch_panels\", {\n        name: newPpName,\n        location_id: parseInt(newPpLocationId),\n        row_in_rack: newPpRowInRack,\n        rack_name: newPpRackName,\n        total_ports: parseInt(newPpTotalPorts),\n        description: newPpDesc\n      });\n      setNewPpName(\"\");\n      setNewPpLocationId(\"\");\n      setNewPpRowInRack(\"\");\n      setNewPpRackName(\"\");\n      setNewPpTotalPorts(1);\n      setNewPpDesc(\"\");\n      setIsNewPpExpanded(false); // Collapse after adding\n    } else {\n      alert(\"Patch Panel Name and Location are required.\");\n    }\n  };\n  const handleAddSwitch = async e => {\n    e.preventDefault();\n    // Basic IP validation\n    const ipRegex = /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    if (newSwitchIp && !ipRegex.test(newSwitchIp)) {\n      alert(\"Please enter a valid IP address for Switch (e.g., 192.168.1.1).\");\n      return;\n    }\n    if (newSwitchName.trim() && newSwitchLocationId) {\n      await onAddEntity(\"switches\", {\n        name: newSwitchName,\n        ip_address: newSwitchIp,\n        location_id: parseInt(newSwitchLocationId),\n        row_in_rack: newSwitchRowInRack,\n        rack_name: newSwitchRackName,\n        total_ports: parseInt(newSwitchTotalPorts),\n        source_port: newSwitchSourcePort,\n        model: newSwitchModel,\n        description: newSwitchDesc\n      });\n      setNewSwitchName(\"\");\n      setNewSwitchIp(\"\");\n      setNewSwitchLocationId(\"\");\n      setNewSwitchRowInRack(\"\");\n      setNewSwitchRackName(\"\");\n      setNewSwitchTotalPorts(1);\n      setNewSwitchSourcePort(\"\");\n      setNewSwitchModel(\"\");\n      setNewSwitchDesc(\"\");\n      setIsNewSwitchExpanded(false); // Collapse after adding\n    } else {\n      alert(\"Switch Name and Location are required.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-3 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-sm border border-gray-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center p-5 cursor-pointer bg-indigo-50 hover:bg-indigo-100 transition-colors duration-200 rounded-t-lg\",\n          onClick: () => setIsNewPcExpanded(!isNewPcExpanded),\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-indigo-700 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(PlusCircle, {\n              size: 20,\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this), \" Add New PC\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), isNewPcExpanded ? /*#__PURE__*/_jsxDEV(ChevronUp, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(ChevronDown, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `collapsible-content ${isNewPcExpanded ? \"expanded\" : \"\"}`,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleAddPc,\n            className: \"p-5 space-y-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"PC Name\",\n              value: newPcName,\n              onChange: e => setNewPcName(e.target.value),\n              className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"IP Address (Optional)\",\n              value: newPcIp,\n              onChange: e => setNewPcIp(e.target.value),\n              className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Username (Optional)\",\n              value: newPcUsername,\n              onChange: e => setNewPcUsername(e.target.value),\n              className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"pc-in-domain\",\n                type: \"checkbox\",\n                checked: newPcInDomain,\n                onChange: e => setNewPcInDomain(e.target.checked),\n                className: \"h-4 w-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"pc-in-domain\",\n                className: \"ml-2 block text-sm text-gray-900\",\n                children: \"In Domain\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Operating System (Optional)\",\n              value: newPcOs,\n              onChange: e => setNewPcOs(e.target.value),\n              className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Ports Name (e.g., HDMI, USB, Eth)\",\n              value: newPcPortsName,\n              onChange: e => setNewPcPortsName(e.target.value),\n              className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              placeholder: \"Description (Optional)\",\n              value: newPcDesc,\n              onChange: e => setNewPcDesc(e.target.value),\n              className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500 resize-y\",\n              rows: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"w-full bg-indigo-500 text-white p-2 rounded-md hover:bg-indigo-600 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\",\n              children: \"Add PC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-sm border border-gray-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center p-5 cursor-pointer bg-green-50 hover:bg-green-100 transition-colors duration-200 rounded-t-lg\",\n          onClick: () => setIsNewPpExpanded(!isNewPpExpanded),\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-green-700 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(PlusCircle, {\n              size: 20,\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 15\n            }, this), \" Add New Patch Panel\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 13\n          }, this), isNewPpExpanded ? /*#__PURE__*/_jsxDEV(ChevronUp, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(ChevronDown, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `collapsible-content ${isNewPpExpanded ? \"expanded\" : \"\"}`,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleAddPp,\n            className: \"p-5 space-y-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Patch Panel Name\",\n              value: newPpName,\n              onChange: e => setNewPpName(e.target.value),\n              className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: newPpLocationId,\n              onChange: e => setNewPpLocationId(e.target.value),\n              className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\",\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Select Location --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 17\n              }, this), locations.map(loc => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: loc.id,\n                children: loc.name\n              }, loc.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 15\n            }, this), locations.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-red-500 mt-1\",\n              children: \"Please add a location first (Go to Locations tab).\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Row in Rack (Optional)\",\n              value: newPpRowInRack,\n              onChange: e => setNewPpRowInRack(e.target.value),\n              className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Rack Name (Optional)\",\n              value: newPpRackName,\n              onChange: e => setNewPpRackName(e.target.value),\n              className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Total Ports (e.g., 24)\",\n              value: newPpTotalPorts,\n              onChange: e => setNewPpTotalPorts(e.target.value),\n              className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\",\n              min: \"1\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              placeholder: \"Description (Optional)\",\n              value: newPpDesc,\n              onChange: e => setNewPpDesc(e.target.value),\n              className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500 resize-y\",\n              rows: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"w-full bg-green-500 text-white p-2 rounded-md hover:bg-green-600 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500\",\n              children: \"Add Patch Panel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-sm border border-gray-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center p-5 cursor-pointer bg-red-50 hover:bg-red-100 transition-colors duration-200 rounded-t-lg\",\n          onClick: () => setIsNewSwitchExpanded(!isNewSwitchExpanded),\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-red-700 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(PlusCircle, {\n              size: 20,\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 15\n            }, this), \" Add New Switch\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 13\n          }, this), isNewSwitchExpanded ? /*#__PURE__*/_jsxDEV(ChevronUp, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(ChevronDown, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `collapsible-content ${isNewSwitchExpanded ? \"expanded\" : \"\"}`,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleAddSwitch,\n            className: \"p-5 space-y-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Switch Name\",\n              value: newSwitchName,\n              onChange: e => setNewSwitchName(e.target.value),\n              className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"IP Address (Optional)\",\n              value: newSwitchIp,\n              onChange: e => setNewSwitchIp(e.target.value),\n              className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: newSwitchLocationId,\n              onChange: e => setNewSwitchLocationId(e.target.value),\n              className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\",\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Select Location --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 538,\n                columnNumber: 17\n              }, this), locations.map(loc => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: loc.id,\n                children: loc.name\n              }, loc.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 15\n            }, this), locations.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-red-500 mt-1\",\n              children: \"Please add a location first (Go to Locations tab).\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Row in Rack (Optional)\",\n              value: newSwitchRowInRack,\n              onChange: e => setNewSwitchRowInRack(e.target.value),\n              className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Rack Name (Optional)\",\n              value: newSwitchRackName,\n              onChange: e => setNewSwitchRackName(e.target.value),\n              className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Total Ports (e.g., 4)\",\n              value: newSwitchTotalPorts,\n              onChange: e => setNewSwitchTotalPorts(e.target.value),\n              className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\",\n              min: \"1\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Source Port (Optional)\",\n              value: newSwitchSourcePort,\n              onChange: e => setNewSwitchSourcePort(e.target.value),\n              className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Model (Optional)\",\n              value: newSwitchModel,\n              onChange: e => setNewSwitchModel(e.target.value),\n              className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              placeholder: \"Description (Optional)\",\n              value: newSwitchDesc,\n              onChange: e => setNewSwitchDesc(e.target.value),\n              className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500 resize-y\",\n              rows: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"w-full bg-red-500 text-white p-2 rounded-md hover:bg-red-600 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\",\n              children: \"Add Switch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"space-y-6 p-6 bg-white rounded-lg shadow-md border border-blue-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-bold text-blue-700 text-center\",\n        children: editingConnection ? \"Edit Existing Connection\" : \"Create New Connection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"pc-select\",\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Select PC:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 618,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"pc-select\",\n            value: pcId,\n            onChange: e => setPcId(e.target.value),\n            className: \"w-full p-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"-- Select a PC --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 15\n            }, this), pcs.map(pc => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: pc.id,\n              children: [pc.name, \" (\", pc.ip_address || \"No IP\", \")\"]\n            }, pc.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 633,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 13\n          }, this), pcs.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-red-500 mt-1\",\n            children: \"Please add a PC first.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 639,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"switch-select\",\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Select Switch:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 647,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"switch-select\",\n            value: switchId,\n            onChange: e => setSwitchId(e.target.value),\n            className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"-- Select a Switch --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 660,\n              columnNumber: 15\n            }, this), switches.map(_switch => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: _switch.id,\n              children: [_switch.name, \" (\", _switch.ip_address, \")\"]\n            }, _switch.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 662,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 13\n          }, this), switches.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-red-500 mt-1\",\n            children: \"Please add a Switch first.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 668,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"md:col-span-2 grid grid-cols-2 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"switch-port\",\n              className: \"block text-sm font-medium text-gray-700 mb-1\",\n              children: \"Switch Port:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 677,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"switch-port\",\n              type: \"text\",\n              placeholder: \"e.g., Eth0/1, GigaPort-03\",\n              value: switchPort,\n              onChange: e => setSwitchPort(e.target.value),\n              className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 683,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 676,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center pt-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"is-switch-port-up\",\n              type: \"checkbox\",\n              checked: isSwitchPortUp,\n              onChange: e => setIsSwitchPortUp(e.target.checked),\n              className: \"h-4 w-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 694,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"is-switch-port-up\",\n              className: \"ml-2 block text-sm text-gray-900\",\n              children: \"Port Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 701,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 693,\n            columnNumber: 13\n          }, this), switchId && switches.find(s => s.id === parseInt(switchId)) && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => onShowPortStatus(\"switches\", switchId),\n            className: \"mt-2 px-4 py-2 bg-blue-500 text-white text-sm font-medium rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 col-span-2\",\n            children: [\"View Switch Port Status (\", (_switches$find = switches.find(s => s.id === parseInt(switchId))) === null || _switches$find === void 0 ? void 0 : _switches$find.name, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 709,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 border border-gray-200 rounded-md bg-gray-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-lg font-semibold text-gray-700 mb-3\",\n          children: \"Patch Panel Hops (in sequence)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 723,\n          columnNumber: 11\n        }, this), hops.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-500 mt-2 text-center mb-4\",\n          children: \"Click \\\"Add Patch Panel Hop\\\" to start building the path.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 727,\n          columnNumber: 13\n        }, this), hops.map((hop, index) => {\n          var _patchPanels$find;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col md:flex-row items-end md:items-center space-y-3 md:space-y-0 md:space-x-3 mb-4 p-3 border border-gray-100 rounded-md bg-white shadow-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-grow w-full md:w-auto\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `pp-select-${index}`,\n                className: \"block text-xs font-medium text-gray-600 mb-1\",\n                children: [\"Patch Panel \", index + 1, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 737,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: `pp-select-${index}`,\n                value: hop.patch_panel_id,\n                onChange: e => handleHopPatchPanelChange(index, e.target.value),\n                className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500 text-sm\",\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"-- Select Patch Panel --\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 752,\n                  columnNumber: 19\n                }, this), patchPanels.map(pp => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: pp.id,\n                  children: [pp.name, \" (\", pp.location_name, \")\"]\n                }, pp.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 754,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 743,\n                columnNumber: 17\n              }, this), patchPanels.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-xs text-red-500 mt-1\",\n                children: \"Please add a Patch Panel first.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 760,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 736,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-grow w-full md:w-auto\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `pp-port-${index}`,\n                className: \"block text-xs font-medium text-gray-600 mb-1\",\n                children: \"Port:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 766,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: `pp-port-${index}`,\n                type: \"text\",\n                placeholder: \"Port\",\n                value: hop.patch_panel_port,\n                onChange: e => handleHopPortChange(index, e.target.value),\n                className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500 text-sm\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 772,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 765,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center w-full md:w-auto md:pt-5\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                id: `is-pp-port-up-${index}`,\n                type: \"checkbox\",\n                checked: hop.is_port_up,\n                onChange: e => handleHopPortStatusChange(index, e.target.checked),\n                className: \"h-4 w-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 783,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `is-pp-port-up-${index}`,\n                className: \"ml-2 block text-sm text-gray-900\",\n                children: \"Port Up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 792,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 782,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => removeHop(index),\n              className: \"p-2 bg-red-500 text-white rounded-md hover:bg-red-600 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 text-sm flex-shrink-0\",\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 799,\n              columnNumber: 15\n            }, this), hop.patch_panel_id && patchPanels.find(pp => pp.id === parseInt(hop.patch_panel_id)) && /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => onShowPortStatus(\"patch_panels\", hop.patch_panel_id),\n              className: \"w-full md:w-auto mt-2 md:mt-0 px-3 py-2 bg-blue-500 text-white text-xs font-medium rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 flex-shrink-0\",\n              children: [\"View Ports (\", (_patchPanels$find = patchPanels.find(pp => pp.id === parseInt(hop.patch_panel_id))) === null || _patchPanels$find === void 0 ? void 0 : _patchPanels$find.name, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 810,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 732,\n            columnNumber: 13\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addHop,\n          className: \"w-full mt-2 py-2 px-4 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\",\n          children: \"Add Patch Panel Hop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 828,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 722,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end space-x-3 mt-6\",\n        children: [editingConnection && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleCancelEdit,\n          className: \"px-5 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-300 transition-colors duration-200\",\n          children: \"Cancel Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 840,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"px-5 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200\",\n          children: editingConnection ? \"Update Connection\" : \"Add Connection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 848,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 838,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 317,\n    columnNumber: 5\n  }, this);\n}\n_s(ConnectionForm, \"ChS18mwbG1mkplIEA5JcBOoytcY=\");\n_c = ConnectionForm;\nexport default ConnectionForm;\nvar _c;\n$RefreshReg$(_c, \"ConnectionForm\");","map":{"version":3,"names":["React","useState","useEffect","ChevronDown","ChevronUp","PlusCircle","jsxDEV","_jsxDEV","ConnectionForm","pcs","patchPanels","switches","onAddConnection","onUpdateConnection","editingConnection","setEditingConnection","onAddEntity","onShowPortStatus","locations","_s","_switches$find","pcId","setPcId","switchPort","setSwitchPort","isSwitchPortUp","setIsSwitchPortUp","switchId","setSwitchId","hops","setHops","isNewPcExpanded","setIsNewPcExpanded","isNewPpExpanded","setIsNewPpExpanded","isNewSwitchExpanded","setIsNewSwitchExpanded","newPcName","setNewPcName","newPcIp","setNewPcIp","newPcUsername","setNewPcUsername","newPcInDomain","setNewPcInDomain","newPcOs","setNewPcOs","newPcPortsName","setNewPcPortsName","newPcDesc","setNewPcDesc","newPpName","setNewPpName","newPpLocationId","setNewPpLocationId","newPpRowInRack","setNewPpRowInRack","newPpRackName","setNewPpRackName","newPpTotalPorts","setNewPpTotalPorts","newPpDesc","setNewPpDesc","newSwitchName","setNewSwitchName","newSwitchIp","setNewSwitchIp","newSwitchLocationId","setNewSwitchLocationId","newSwitchRowInRack","setNewSwitchRowInRack","newSwitchRackName","setNewSwitchRackName","newSwitchTotalPorts","setNewSwitchTotalPorts","newSwitchSourcePort","setNewSwitchSourcePort","newSwitchModel","setNewSwitchModel","newSwitchDesc","setNewSwitchDesc","pc_id","switch_id","switch_port","is_switch_port_up","undefined","pc","name","ip_address","username","in_domain","operating_system","ports_name","description","switch","location_id","row_in_rack","rack_name","total_ports","source_port","model","handleHopPatchPanelChange","index","value","updatedHops","patch_panel_id","parseInt","handleHopPortChange","patch_panel_port","handleHopPortStatusChange","is_port_up","addHop","removeHop","filter","_","i","handleSubmit","e","preventDefault","allHopsValid","every","hop","trim","alert","connectionData","map","id","handleCancelEdit","handleAddPc","ipRegex","test","handleAddPp","handleAddSwitch","className","children","onClick","size","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","target","required","checked","htmlFor","rows","loc","length","min","_switch","find","s","_patchPanels$find","pp","location_name","_c","$RefreshReg$"],"sources":["/app/src/components/ConnectionForm.js"],"sourcesContent":["// frontend/src/components/ConnectionForm.js\n// This component provides forms to add new PCs, Patch Panels, Switches,\n// and to create or edit network connections between them.\n// Now, the \"Add New\" entity forms are collapsible for a cleaner UI, and\n// Patch Panel and Switch creation/editing use a location dropdown.\n\nimport React, { useState, useEffect } from \"react\";\nimport { ChevronDown, ChevronUp, PlusCircle } from \"lucide-react\"; // Import icons for expand/collapse and add buttons\n\nfunction ConnectionForm({\n  pcs,\n  patchPanels,\n  switches,\n  onAddConnection,\n  onUpdateConnection,\n  editingConnection,\n  setEditingConnection,\n  onAddEntity,\n  onShowPortStatus,\n  locations,\n}) {\n  const [pcId, setPcId] = useState(\"\");\n  const [switchPort, setSwitchPort] = useState(\"\");\n  const [isSwitchPortUp, setIsSwitchPortUp] = useState(true);\n  const [switchId, setSwitchId] = useState(\"\");\n  const [hops, setHops] = useState([]);\n\n  // States for managing the expanded/collapsed state of each \"Add New\" section\n  const [isNewPcExpanded, setIsNewPcExpanded] = useState(false);\n  const [isNewPpExpanded, setIsNewPpExpanded] = useState(false);\n  const [isNewSwitchExpanded, setIsNewSwitchExpanded] = useState(false);\n\n  // State for new entity forms\n  const [newPcName, setNewPcName] = useState(\"\");\n  const [newPcIp, setNewPcIp] = useState(\"\");\n  const [newPcUsername, setNewPcUsername] = useState(\"\");\n  const [newPcInDomain, setNewPcInDomain] = useState(false);\n  const [newPcOs, setNewPcOs] = useState(\"\");\n  const [newPcPortsName, setNewPcPortsName] = useState(\"\");\n  const [newPcDesc, setNewPcDesc] = useState(\"\");\n\n  const [newPpName, setNewPpName] = useState(\"\");\n  const [newPpLocationId, setNewPpLocationId] = useState(\"\");\n  const [newPpRowInRack, setNewPpRowInRack] = useState(\"\");\n  const [newPpRackName, setNewPpRackName] = useState(\"\");\n  const [newPpTotalPorts, setNewPpTotalPorts] = useState(1);\n  const [newPpDesc, setNewPpDesc] = useState(\"\");\n\n  const [newSwitchName, setNewSwitchName] = useState(\"\");\n  const [newSwitchIp, setNewSwitchIp] = useState(\"\");\n  const [newSwitchLocationId, setNewSwitchLocationId] = useState(\"\");\n  const [newSwitchRowInRack, setNewSwitchRowInRack] = useState(\"\");\n  const [newSwitchRackName, setNewSwitchRackName] = useState(\"\");\n  const [newSwitchTotalPorts, setNewSwitchTotalPorts] = useState(1);\n  const [newSwitchSourcePort, setNewSwitchSourcePort] = useState(\"\");\n  const [newSwitchModel, setNewSwitchModel] = useState(\"\");\n  const [newSwitchDesc, setNewSwitchDesc] = useState(\"\");\n\n  // Populate form fields if editing an existing connection\n  useEffect(() => {\n    if (editingConnection) {\n      setPcId(editingConnection.pc_id || \"\");\n      setSwitchId(editingConnection.switch_id || \"\");\n      setSwitchPort(editingConnection.switch_port || \"\");\n      setIsSwitchPortUp(\n        editingConnection.is_switch_port_up !== undefined\n          ? editingConnection.is_switch_port_up\n          : true\n      );\n      setHops(editingConnection.hops || []);\n\n      // Populate PC fields if PC object is available\n      if (editingConnection.pc) {\n        setNewPcName(editingConnection.pc.name || \"\");\n        setNewPcIp(editingConnection.pc.ip_address || \"\");\n        setNewPcUsername(editingConnection.pc.username || \"\");\n        setNewPcInDomain(editingConnection.pc.in_domain || false);\n        setNewPcOs(editingConnection.pc.operating_system || \"\");\n        setNewPcPortsName(editingConnection.pc.ports_name || \"\");\n        setNewPcDesc(editingConnection.pc.description || \"\");\n      } else {\n        // Clear PC form fields if no PC data\n        setNewPcName(\"\");\n        setNewPcIp(\"\");\n        setNewPcUsername(\"\");\n        setNewPcInDomain(false);\n        setNewPcOs(\"\");\n        setNewPcPortsName(\"\");\n        setNewPcDesc(\"\");\n      }\n\n      // Populate Switch fields if Switch object is available\n      if (editingConnection.switch) {\n        setNewSwitchName(editingConnection.switch.name || \"\");\n        setNewSwitchIp(editingConnection.switch.ip_address || \"\");\n        setNewSwitchLocationId(editingConnection.switch.location_id || \"\");\n        setNewSwitchRowInRack(editingConnection.switch.row_in_rack || \"\");\n        setNewSwitchRackName(editingConnection.switch.rack_name || \"\");\n        setNewSwitchTotalPorts(editingConnection.switch.total_ports || 1);\n        setNewSwitchSourcePort(editingConnection.switch.source_port || \"\");\n        setNewSwitchModel(editingConnection.switch.model || \"\");\n        setNewSwitchDesc(editingConnection.switch.description || \"\");\n      } else {\n        // Clear Switch form fields if no Switch data\n        setNewSwitchName(\"\");\n        setNewSwitchIp(\"\");\n        setNewSwitchLocationId(\"\");\n        setNewSwitchRowInRack(\"\");\n        setNewSwitchRackName(\"\");\n        setNewSwitchTotalPorts(1);\n        setNewSwitchSourcePort(\"\");\n        setNewSwitchModel(\"\");\n        setNewSwitchDesc(\"\");\n      }\n\n      // Patch Panel details are within hops, which are handled by setHops\n    } else {\n      // Clear all form fields if not editing\n      setPcId(\"\");\n      setSwitchId(\"\");\n      setSwitchPort(\"\");\n      setIsSwitchPortUp(true);\n      setHops([]);\n      setNewPcName(\"\");\n      setNewPcIp(\"\");\n      setNewPcUsername(\"\");\n      setNewPcInDomain(false);\n      setNewPcOs(\"\");\n      setNewPcPortsName(\"\");\n      setNewPcDesc(\"\");\n      setNewPpName(\"\");\n      setNewPpLocationId(\"\");\n      setNewPpRowInRack(\"\");\n      setNewPpRackName(\"\");\n      setNewPpTotalPorts(1);\n      setNewPpDesc(\"\");\n      setNewSwitchName(\"\");\n      setNewSwitchIp(\"\");\n      setNewSwitchLocationId(\"\");\n      setNewSwitchRowInRack(\"\");\n      setNewSwitchRackName(\"\");\n      setNewSwitchTotalPorts(1);\n      setNewSwitchSourcePort(\"\");\n      setNewSwitchModel(\"\");\n      setNewSwitchDesc(\"\");\n    }\n  }, [editingConnection]);\n\n  // Handle changes for a specific hop's patch panel ID\n  const handleHopPatchPanelChange = (index, value) => {\n    const updatedHops = [...hops];\n    updatedHops[index].patch_panel_id = parseInt(value);\n    setHops(updatedHops);\n  };\n\n  // Handle changes for a specific hop's patch panel port\n  const handleHopPortChange = (index, value) => {\n    const updatedHops = [...hops];\n    updatedHops[index].patch_panel_port = value;\n    setHops(updatedHops);\n  };\n\n  // Handle changes for a specific hop's port status\n  const handleHopPortStatusChange = (index, value) => {\n    const updatedHops = [...hops];\n    updatedHops[index].is_port_up = value;\n    setHops(updatedHops);\n  };\n\n  // Add a new empty hop to the list\n  const addHop = () => {\n    setHops([\n      ...hops,\n      { patch_panel_id: \"\", patch_panel_port: \"\", is_port_up: true },\n    ]);\n  };\n\n  // Remove a hop by index\n  const removeHop = (index) => {\n    setHops(hops.filter((_, i) => i !== index));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const allHopsValid = hops.every(\n      (hop) => hop.patch_panel_id && hop.patch_panel_port.trim()\n    );\n    if (!allHopsValid) {\n      alert(\"Please fill out all patch panel details for each hop.\");\n      return;\n    }\n\n    const connectionData = {\n      pc_id: parseInt(pcId),\n      switch_id: parseInt(switchId),\n      switch_port: switchPort,\n      is_switch_port_up: isSwitchPortUp,\n      hops: hops.map((hop) => ({\n        patch_panel_id: hop.patch_panel_id,\n        patch_panel_port: hop.patch_panel_port,\n        is_port_up: hop.is_port_up,\n      })),\n    };\n\n    if (editingConnection) {\n      await onUpdateConnection(editingConnection.id, connectionData);\n    } else {\n      await onAddConnection(connectionData);\n    }\n    setPcId(\"\");\n    setSwitchId(\"\");\n    setSwitchPort(\"\");\n    setIsSwitchPortUp(true);\n    setHops([]);\n    setEditingConnection(null);\n  };\n\n  const handleCancelEdit = () => {\n    setEditingConnection(null);\n    setPcId(\"\");\n    setSwitchId(\"\");\n    setSwitchPort(\"\");\n    setIsSwitchPortUp(true);\n    setHops([]);\n  };\n\n  const handleAddPc = async (e) => {\n    e.preventDefault();\n    // Basic IP validation\n    const ipRegex =\n      /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    if (newPcIp && !ipRegex.test(newPcIp)) {\n      alert(\"Please enter a valid IP address for PC (e.g., 192.168.1.1).\");\n      return;\n    }\n    if (newPcName.trim()) {\n      await onAddEntity(\"pcs\", {\n        name: newPcName,\n        ip_address: newPcIp,\n        username: newPcUsername,\n        in_domain: newPcInDomain,\n        operating_system: newPcOs,\n        ports_name: newPcPortsName,\n        description: newPcDesc,\n      });\n      setNewPcName(\"\");\n      setNewPcIp(\"\");\n      setNewPcUsername(\"\");\n      setNewPcInDomain(false);\n      setNewPcOs(\"\");\n      setNewPcPortsName(\"\");\n      setNewPcDesc(\"\");\n      setIsNewPcExpanded(false); // Collapse after adding\n    }\n  };\n\n  const handleAddPp = async (e) => {\n    e.preventDefault();\n    if (newPpName.trim() && newPpLocationId) {\n      await onAddEntity(\"patch_panels\", {\n        name: newPpName,\n        location_id: parseInt(newPpLocationId),\n        row_in_rack: newPpRowInRack,\n        rack_name: newPpRackName,\n        total_ports: parseInt(newPpTotalPorts),\n        description: newPpDesc,\n      });\n      setNewPpName(\"\");\n      setNewPpLocationId(\"\");\n      setNewPpRowInRack(\"\");\n      setNewPpRackName(\"\");\n      setNewPpTotalPorts(1);\n      setNewPpDesc(\"\");\n      setIsNewPpExpanded(false); // Collapse after adding\n    } else {\n      alert(\"Patch Panel Name and Location are required.\");\n    }\n  };\n\n  const handleAddSwitch = async (e) => {\n    e.preventDefault();\n    // Basic IP validation\n    const ipRegex =\n      /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    if (newSwitchIp && !ipRegex.test(newSwitchIp)) {\n      alert(\"Please enter a valid IP address for Switch (e.g., 192.168.1.1).\");\n      return;\n    }\n    if (newSwitchName.trim() && newSwitchLocationId) {\n      await onAddEntity(\"switches\", {\n        name: newSwitchName,\n        ip_address: newSwitchIp,\n        location_id: parseInt(newSwitchLocationId),\n        row_in_rack: newSwitchRowInRack,\n        rack_name: newSwitchRackName,\n        total_ports: parseInt(newSwitchTotalPorts),\n        source_port: newSwitchSourcePort,\n        model: newSwitchModel,\n        description: newSwitchDesc,\n      });\n      setNewSwitchName(\"\");\n      setNewSwitchIp(\"\");\n      setNewSwitchLocationId(\"\");\n      setNewSwitchRowInRack(\"\");\n      setNewSwitchRackName(\"\");\n      setNewSwitchTotalPorts(1);\n      setNewSwitchSourcePort(\"\");\n      setNewSwitchModel(\"\");\n      setNewSwitchDesc(\"\");\n      setIsNewSwitchExpanded(false); // Collapse after adding\n    } else {\n      alert(\"Switch Name and Location are required.\");\n    }\n  };\n\n  return (\n    <div className=\"space-y-8\">\n      {/* Collapsible Forms to Add New Entities */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        {/* Add New PC Section */}\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-100\">\n          <div\n            className=\"flex justify-between items-center p-5 cursor-pointer bg-indigo-50 hover:bg-indigo-100 transition-colors duration-200 rounded-t-lg\"\n            onClick={() => setIsNewPcExpanded(!isNewPcExpanded)}\n          >\n            <h3 className=\"text-lg font-semibold text-indigo-700 flex items-center\">\n              <PlusCircle size={20} className=\"mr-2\" /> Add New PC\n            </h3>\n            {isNewPcExpanded ? (\n              <ChevronUp size={20} />\n            ) : (\n              <ChevronDown size={20} />\n            )}\n          </div>\n          <div\n            className={`collapsible-content ${\n              isNewPcExpanded ? \"expanded\" : \"\"\n            }`}\n          >\n            <form onSubmit={handleAddPc} className=\"p-5 space-y-3\">\n              <input\n                type=\"text\"\n                placeholder=\"PC Name\"\n                value={newPcName}\n                onChange={(e) => setNewPcName(e.target.value)}\n                className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                required\n              />\n              <input\n                type=\"text\"\n                placeholder=\"IP Address (Optional)\"\n                value={newPcIp}\n                onChange={(e) => setNewPcIp(e.target.value)}\n                className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n              />\n              <input\n                type=\"text\"\n                placeholder=\"Username (Optional)\"\n                value={newPcUsername}\n                onChange={(e) => setNewPcUsername(e.target.value)}\n                className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n              />\n              <div className=\"flex items-center\">\n                <input\n                  id=\"pc-in-domain\"\n                  type=\"checkbox\"\n                  checked={newPcInDomain}\n                  onChange={(e) => setNewPcInDomain(e.target.checked)}\n                  className=\"h-4 w-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\n                />\n                <label\n                  htmlFor=\"pc-in-domain\"\n                  className=\"ml-2 block text-sm text-gray-900\"\n                >\n                  In Domain\n                </label>\n              </div>\n              <input\n                type=\"text\"\n                placeholder=\"Operating System (Optional)\"\n                value={newPcOs}\n                onChange={(e) => setNewPcOs(e.target.value)}\n                className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n              />\n              <input\n                type=\"text\"\n                placeholder=\"Ports Name (e.g., HDMI, USB, Eth)\"\n                value={newPcPortsName}\n                onChange={(e) => setNewPcPortsName(e.target.value)}\n                className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n              />\n              <textarea\n                placeholder=\"Description (Optional)\"\n                value={newPcDesc}\n                onChange={(e) => setNewPcDesc(e.target.value)}\n                className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500 resize-y\"\n                rows=\"3\"\n              ></textarea>\n              <button\n                type=\"submit\"\n                className=\"w-full bg-indigo-500 text-white p-2 rounded-md hover:bg-indigo-600 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n              >\n                Add PC\n              </button>\n            </form>\n          </div>\n        </div>\n\n        {/* Add New Patch Panel Section */}\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-100\">\n          <div\n            className=\"flex justify-between items-center p-5 cursor-pointer bg-green-50 hover:bg-green-100 transition-colors duration-200 rounded-t-lg\"\n            onClick={() => setIsNewPpExpanded(!isNewPpExpanded)}\n          >\n            <h3 className=\"text-lg font-semibold text-green-700 flex items-center\">\n              <PlusCircle size={20} className=\"mr-2\" /> Add New Patch Panel\n            </h3>\n            {isNewPpExpanded ? (\n              <ChevronUp size={20} />\n            ) : (\n              <ChevronDown size={20} />\n            )}\n          </div>\n          <div\n            className={`collapsible-content ${\n              isNewPpExpanded ? \"expanded\" : \"\"\n            }`}\n          >\n            <form onSubmit={handleAddPp} className=\"p-5 space-y-3\">\n              <input\n                type=\"text\"\n                placeholder=\"Patch Panel Name\"\n                value={newPpName}\n                onChange={(e) => setNewPpName(e.target.value)}\n                className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                required\n              />\n              <select\n                value={newPpLocationId}\n                onChange={(e) => setNewPpLocationId(e.target.value)}\n                className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                required\n              >\n                <option value=\"\">-- Select Location --</option>\n                {locations.map((loc) => (\n                  <option key={loc.id} value={loc.id}>\n                    {loc.name}\n                  </option>\n                ))}\n              </select>\n              {locations.length === 0 && (\n                <p className=\"text-sm text-red-500 mt-1\">\n                  Please add a location first (Go to Locations tab).\n                </p>\n              )}\n              <input\n                type=\"text\"\n                placeholder=\"Row in Rack (Optional)\"\n                value={newPpRowInRack}\n                onChange={(e) => setNewPpRowInRack(e.target.value)}\n                className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n              />\n              <input\n                type=\"text\"\n                placeholder=\"Rack Name (Optional)\"\n                value={newPpRackName}\n                onChange={(e) => setNewPpRackName(e.target.value)}\n                className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n              />\n              <input\n                type=\"number\"\n                placeholder=\"Total Ports (e.g., 24)\"\n                value={newPpTotalPorts}\n                onChange={(e) => setNewPpTotalPorts(e.target.value)}\n                className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                min=\"1\"\n                required\n              />\n              <textarea\n                placeholder=\"Description (Optional)\"\n                value={newPpDesc}\n                onChange={(e) => setNewPpDesc(e.target.value)}\n                className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500 resize-y\"\n                rows=\"3\"\n              ></textarea>\n              <button\n                type=\"submit\"\n                className=\"w-full bg-green-500 text-white p-2 rounded-md hover:bg-green-600 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500\"\n              >\n                Add Patch Panel\n              </button>\n            </form>\n          </div>\n        </div>\n\n        {/* Add New Switch Section */}\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-100\">\n          <div\n            className=\"flex justify-between items-center p-5 cursor-pointer bg-red-50 hover:bg-red-100 transition-colors duration-200 rounded-t-lg\"\n            onClick={() => setIsNewSwitchExpanded(!isNewSwitchExpanded)}\n          >\n            <h3 className=\"text-lg font-semibold text-red-700 flex items-center\">\n              <PlusCircle size={20} className=\"mr-2\" /> Add New Switch\n            </h3>\n            {isNewSwitchExpanded ? (\n              <ChevronUp size={20} />\n            ) : (\n              <ChevronDown size={20} />\n            )}\n          </div>\n          <div\n            className={`collapsible-content ${\n              isNewSwitchExpanded ? \"expanded\" : \"\"\n            }`}\n          >\n            <form onSubmit={handleAddSwitch} className=\"p-5 space-y-3\">\n              <input\n                type=\"text\"\n                placeholder=\"Switch Name\"\n                value={newSwitchName}\n                onChange={(e) => setNewSwitchName(e.target.value)}\n                className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                required\n              />\n              <input\n                type=\"text\"\n                placeholder=\"IP Address (Optional)\"\n                value={newSwitchIp}\n                onChange={(e) => setNewSwitchIp(e.target.value)}\n                className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n              />\n              <select\n                value={newSwitchLocationId}\n                onChange={(e) => setNewSwitchLocationId(e.target.value)}\n                className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                required\n              >\n                <option value=\"\">-- Select Location --</option>\n                {locations.map((loc) => (\n                  <option key={loc.id} value={loc.id}>\n                    {loc.name}\n                  </option>\n                ))}\n              </select>\n              {locations.length === 0 && (\n                <p className=\"text-sm text-red-500 mt-1\">\n                  Please add a location first (Go to Locations tab).\n                </p>\n              )}\n              <input\n                type=\"text\"\n                placeholder=\"Row in Rack (Optional)\"\n                value={newSwitchRowInRack}\n                onChange={(e) => setNewSwitchRowInRack(e.target.value)}\n                className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n              />\n              <input\n                type=\"text\"\n                placeholder=\"Rack Name (Optional)\"\n                value={newSwitchRackName}\n                onChange={(e) => setNewSwitchRackName(e.target.value)}\n                className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n              />\n              <input\n                type=\"number\"\n                placeholder=\"Total Ports (e.g., 4)\"\n                value={newSwitchTotalPorts}\n                onChange={(e) => setNewSwitchTotalPorts(e.target.value)}\n                className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                min=\"1\"\n                required\n              />\n              <input\n                type=\"text\"\n                placeholder=\"Source Port (Optional)\"\n                value={newSwitchSourcePort}\n                onChange={(e) => setNewSwitchSourcePort(e.target.value)}\n                className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n              />\n              <input\n                type=\"text\"\n                placeholder=\"Model (Optional)\"\n                value={newSwitchModel}\n                onChange={(e) => setNewSwitchModel(e.target.value)}\n                className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n              />\n              <textarea\n                placeholder=\"Description (Optional)\"\n                value={newSwitchDesc}\n                onChange={(e) => setNewSwitchDesc(e.target.value)}\n                className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500 resize-y\"\n                rows=\"3\"\n              ></textarea>\n              <button\n                type=\"submit\"\n                className=\"w-full bg-red-500 text-white p-2 rounded-md hover:bg-red-600 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\n              >\n                Add Switch\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Connection Form */}\n      <form\n        onSubmit={handleSubmit}\n        className=\"space-y-6 p-6 bg-white rounded-lg shadow-md border border-blue-200\"\n      >\n        <h3 className=\"text-xl font-bold text-blue-700 text-center\">\n          {editingConnection\n            ? \"Edit Existing Connection\"\n            : \"Create New Connection\"}\n        </h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          {/* PC Selection */}\n          <div>\n            <label\n              htmlFor=\"pc-select\"\n              className=\"block text-sm font-medium text-gray-700 mb-1\"\n            >\n              Select PC:\n            </label>\n            <select\n              id=\"pc-select\"\n              value={pcId}\n              onChange={(e) => setPcId(e.target.value)}\n              className=\"w-full p-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500\"\n              required\n            >\n              <option value=\"\">-- Select a PC --</option>\n              {pcs.map((pc) => (\n                <option key={pc.id} value={pc.id}>\n                  {pc.name} ({pc.ip_address || \"No IP\"})\n                </option>\n              ))}\n            </select>\n            {pcs.length === 0 && (\n              <p className=\"text-sm text-red-500 mt-1\">\n                Please add a PC first.\n              </p>\n            )}\n          </div>\n\n          {/* Switch Selection */}\n          <div>\n            <label\n              htmlFor=\"switch-select\"\n              className=\"block text-sm font-medium text-gray-700 mb-1\"\n            >\n              Select Switch:\n            </label>\n            <select\n              id=\"switch-select\"\n              value={switchId}\n              onChange={(e) => setSwitchId(e.target.value)}\n              className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n              required\n            >\n              <option value=\"\">-- Select a Switch --</option>\n              {switches.map((_switch) => (\n                <option key={_switch.id} value={_switch.id}>\n                  {_switch.name} ({_switch.ip_address})\n                </option>\n              ))}\n            </select>\n            {switches.length === 0 && (\n              <p className=\"text-sm text-red-500 mt-1\">\n                Please add a Switch first.\n              </p>\n            )}\n          </div>\n\n          {/* Switch Port Input and Status */}\n          <div className=\"md:col-span-2 grid grid-cols-2 gap-4\">\n            <div>\n              <label\n                htmlFor=\"switch-port\"\n                className=\"block text-sm font-medium text-gray-700 mb-1\"\n              >\n                Switch Port:\n              </label>\n              <input\n                id=\"switch-port\"\n                type=\"text\"\n                placeholder=\"e.g., Eth0/1, GigaPort-03\"\n                value={switchPort}\n                onChange={(e) => setSwitchPort(e.target.value)}\n                className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                required\n              />\n            </div>\n            <div className=\"flex items-center pt-5\">\n              <input\n                id=\"is-switch-port-up\"\n                type=\"checkbox\"\n                checked={isSwitchPortUp}\n                onChange={(e) => setIsSwitchPortUp(e.target.checked)}\n                className=\"h-4 w-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\n              />\n              <label\n                htmlFor=\"is-switch-port-up\"\n                className=\"ml-2 block text-sm text-gray-900\"\n              >\n                Port Up\n              </label>\n            </div>\n            {switchId && switches.find((s) => s.id === parseInt(switchId)) && (\n              <button\n                type=\"button\"\n                onClick={() => onShowPortStatus(\"switches\", switchId)}\n                className=\"mt-2 px-4 py-2 bg-blue-500 text-white text-sm font-medium rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 col-span-2\"\n              >\n                View Switch Port Status (\n                {switches.find((s) => s.id === parseInt(switchId))?.name})\n              </button>\n            )}\n          </div>\n        </div>\n\n        {/* Dynamic Patch Panel Hops Section */}\n        <div className=\"p-4 border border-gray-200 rounded-md bg-gray-50\">\n          <h4 className=\"text-lg font-semibold text-gray-700 mb-3\">\n            Patch Panel Hops (in sequence)\n          </h4>\n          {hops.length === 0 && (\n            <p className=\"text-sm text-gray-500 mt-2 text-center mb-4\">\n              Click \"Add Patch Panel Hop\" to start building the path.\n            </p>\n          )}\n          {hops.map((hop, index) => (\n            <div\n              key={index}\n              className=\"flex flex-col md:flex-row items-end md:items-center space-y-3 md:space-y-0 md:space-x-3 mb-4 p-3 border border-gray-100 rounded-md bg-white shadow-sm\"\n            >\n              <div className=\"flex-grow w-full md:w-auto\">\n                <label\n                  htmlFor={`pp-select-${index}`}\n                  className=\"block text-xs font-medium text-gray-600 mb-1\"\n                >\n                  Patch Panel {index + 1}:\n                </label>\n                <select\n                  id={`pp-select-${index}`}\n                  value={hop.patch_panel_id}\n                  onChange={(e) =>\n                    handleHopPatchPanelChange(index, e.target.value)\n                  }\n                  className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500 text-sm\"\n                  required\n                >\n                  <option value=\"\">-- Select Patch Panel --</option>\n                  {patchPanels.map((pp) => (\n                    <option key={pp.id} value={pp.id}>\n                      {pp.name} ({pp.location_name})\n                    </option>\n                  ))}\n                </select>\n                {patchPanels.length === 0 && (\n                  <p className=\"text-xs text-red-500 mt-1\">\n                    Please add a Patch Panel first.\n                  </p>\n                )}\n              </div>\n              <div className=\"flex-grow w-full md:w-auto\">\n                <label\n                  htmlFor={`pp-port-${index}`}\n                  className=\"block text-xs font-medium text-gray-600 mb-1\"\n                >\n                  Port:\n                </label>\n                <input\n                  id={`pp-port-${index}`}\n                  type=\"text\"\n                  placeholder=\"Port\"\n                  value={hop.patch_panel_port}\n                  onChange={(e) => handleHopPortChange(index, e.target.value)}\n                  className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500 text-sm\"\n                  required\n                />\n              </div>\n              <div className=\"flex items-center w-full md:w-auto md:pt-5\">\n                <input\n                  id={`is-pp-port-up-${index}`}\n                  type=\"checkbox\"\n                  checked={hop.is_port_up}\n                  onChange={(e) =>\n                    handleHopPortStatusChange(index, e.target.checked)\n                  }\n                  className=\"h-4 w-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\n                />\n                <label\n                  htmlFor={`is-pp-port-up-${index}`}\n                  className=\"ml-2 block text-sm text-gray-900\"\n                >\n                  Port Up\n                </label>\n              </div>\n              <button\n                type=\"button\"\n                onClick={() => removeHop(index)}\n                className=\"p-2 bg-red-500 text-white rounded-md hover:bg-red-600 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 text-sm flex-shrink-0\"\n              >\n                Remove\n              </button>\n              {hop.patch_panel_id &&\n                patchPanels.find(\n                  (pp) => pp.id === parseInt(hop.patch_panel_id)\n                ) && (\n                  <button\n                    type=\"button\"\n                    onClick={() =>\n                      onShowPortStatus(\"patch_panels\", hop.patch_panel_id)\n                    }\n                    className=\"w-full md:w-auto mt-2 md:mt-0 px-3 py-2 bg-blue-500 text-white text-xs font-medium rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 flex-shrink-0\"\n                  >\n                    View Ports (\n                    {\n                      patchPanels.find(\n                        (pp) => pp.id === parseInt(hop.patch_panel_id)\n                      )?.name\n                    }\n                    )\n                  </button>\n                )}\n            </div>\n          ))}\n          <button\n            type=\"button\"\n            onClick={addHop}\n            className=\"w-full mt-2 py-2 px-4 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n          >\n            Add Patch Panel Hop\n          </button>\n        </div>\n\n        {/* Action Buttons for Connection Form */}\n        <div className=\"flex justify-end space-x-3 mt-6\">\n          {editingConnection && (\n            <button\n              type=\"button\"\n              onClick={handleCancelEdit}\n              className=\"px-5 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-300 transition-colors duration-200\"\n            >\n              Cancel Edit\n            </button>\n          )}\n          <button\n            type=\"submit\"\n            className=\"px-5 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200\"\n          >\n            {editingConnection ? \"Update Connection\" : \"Add Connection\"}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default ConnectionForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}