{"ast":null,"code":"var _jsxFileName = \"/app/src/App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js\n// This is the main React component for the frontend application.\n// It orchestrates the display of various sections (Connections, PCs, Switches, Patch Panels).\n\nimport React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport ConnectionList from \"./components/ConnectionList\";\nimport ConnectionForm from \"./components/ConnectionForm\";\nimport PortStatusModal from \"./components/PortStatusModal\";\nimport PcList from \"./components/PcList\";\nimport SwitchList from \"./components/SwitchList\";\nimport PatchPanelList from \"./components/PatchPanelList\";\nimport PrintableConnectionForm from \"./components/PrintableConnectionForm\";\nimport { Printer } from \"lucide-react\";\nimport ReactDOMServer from \"react-dom/server\";\n\n// Base URL for the backend API. When running in Docker Compose,\n// 'backend' is the service name and resolves to the backend container's IP.\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.NODE_ENV === \"production\" ? \"/api\" // In production, proxy requests through Nginx or similar\n: \"http://localhost:5004\"; // For local development with 'npm start'\n\nfunction App() {\n  _s();\n  // State variables to store fetched data\n  const [pcs, setPcs] = useState([]);\n  const [patchPanels, setPatchPanels] = useState([]);\n  const [switches, setSwitches] = useState([]);\n  const [connections, setConnections] = useState([]);\n  const [locations, setLocations] = useState([]);\n\n  // State for current active tab\n  const [activeTab, setActiveTab] = useState(\"connections\"); // 'connections', 'pcs', 'switches', 'patch_panels', 'locations'\n\n  const [message, setMessage] = useState(\"\"); // General message for success/error\n  const [isMessageVisible, setIsMessageVisible] = useState(false); // Controls message visibility\n\n  // State for Port Status Modal\n  const [showPortStatusModal, setShowPortStatusModal] = useState(false);\n  const [portStatusData, setPortStatusData] = useState(null);\n  const [modalEntityType, setModalEntityType] = useState(null);\n  const [modalEntityId, setModalEntityId] = useState(null);\n\n  // State for editing a connection in the ConnectionForm\n  const [editingConnection, setEditingConnection] = useState(null);\n\n  // State for showing the printable form (used for conditional rendering in main app)\n  const [showPrintableForm, setShowPrintableForm] = useState(false);\n  // State to store CSS content for injecting into print window\n  const [cssContent, setCssContent] = useState(\"\");\n\n  // Function to show a message temporarily\n  const showMessage = (msg, duration = 3000) => {\n    setMessage(msg);\n    setIsMessageVisible(true);\n    setTimeout(() => {\n      setIsMessageVisible(false);\n      setMessage(\"\");\n    }, duration);\n  };\n\n  // Memoized function to fetch data from the backend\n  const fetchData = useCallback(async (endpoint, setter) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/${endpoint}`);\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setter(data);\n    } catch (error) {\n      console.error(`Failed to fetch ${endpoint}:`, error);\n      showMessage(`Error fetching ${endpoint}: ${error.message}`, 5000);\n    }\n  }, []);\n\n  // Fetch all initial data when the component mounts\n  useEffect(() => {\n    fetchData(\"pcs\", setPcs);\n    fetchData(\"patch_panels\", setPatchPanels);\n    fetchData(\"switches\", setSwitches);\n    fetchData(\"connections\", setConnections);\n    fetchData(\"locations\", setLocations);\n\n    // Fetch CSS content once when component mounts\n    fetch(\"/static/css/main.css\") // Path to your compiled CSS file (relative to public folder)\n    .then(res => res.text()).then(css => setCssContent(css)).catch(err => console.error(\"Failed to load CSS for printing:\", err));\n  }, [fetchData]);\n\n  // Handle adding a new connection\n  const handleAddConnection = async newConnectionData => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/connections`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newConnectionData)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      fetchData(\"connections\", setConnections);\n      showMessage(\"Connection added successfully!\");\n      setEditingConnection(null);\n    } catch (error) {\n      console.error(\"Error adding connection:\", error);\n      showMessage(`Error adding connection: ${error.message}`, 8000);\n    }\n  };\n\n  // Handle updating an existing connection\n  const handleUpdateConnection = async (id, updatedConnectionData) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/connections/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(updatedConnectionData)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      fetchData(\"connections\", setConnections);\n      showMessage(\"Connection updated successfully!\");\n      setEditingConnection(null);\n    } catch (error) {\n      console.error(\"Error updating connection:\", error);\n      showMessage(`Error updating connection: ${error.message}`, 8000);\n    }\n  };\n\n  // Handle deleting a connection\n  const handleDeleteConnection = async id => {\n    const confirmed = window.confirm(\"Are you sure you want to delete this connection?\");\n    if (!confirmed) {\n      return;\n    }\n    try {\n      const response = await fetch(`${API_BASE_URL}/connections/${id}`, {\n        method: \"DELETE\"\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      setConnections(prev => prev.filter(conn => conn.id !== id));\n      showMessage(\"Connection deleted successfully!\");\n    } catch (error) {\n      console.error(\"Error deleting connection:\", error);\n      showMessage(`Error deleting connection: ${error.message}`, 5000);\n    }\n  };\n\n  // Handle editing a connection (set the connection to be edited in state for form pre-fill)\n  const handleEditConnection = connection => {\n    var _connection$pc, _connection$switch;\n    const formattedConnection = {\n      id: connection.id,\n      pc_id: (_connection$pc = connection.pc) === null || _connection$pc === void 0 ? void 0 : _connection$pc.id,\n      switch_id: (_connection$switch = connection.switch) === null || _connection$switch === void 0 ? void 0 : _connection$switch.id,\n      switch_port: connection.switch_port,\n      is_switch_port_up: connection.is_switch_port_up,\n      hops: connection.hops.map(hop => {\n        var _hop$patch_panel;\n        return {\n          patch_panel_id: (_hop$patch_panel = hop.patch_panel) === null || _hop$patch_panel === void 0 ? void 0 : _hop$patch_panel.id,\n          patch_panel_port: hop.patch_panel_port,\n          is_port_up: hop.is_port_up\n        };\n      }),\n      pc: connection.pc,\n      switch: connection.switch\n    };\n    setEditingConnection(formattedConnection);\n  };\n\n  // Function to add a new PC, Patch Panel, Switch, or Location\n  const handleAddEntity = async (type, data) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/${type}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const newEntity = await response.json();\n      if (type === \"pcs\") setPcs(prev => [...prev, newEntity]);\n      if (type === \"patch_panels\") setPatchPanels(prev => [...prev, newEntity]);\n      if (type === \"switches\") setSwitches(prev => [...prev, newEntity]);\n      if (type === \"locations\") setLocations(prev => [...prev, newEntity]);\n      showMessage(`${type.slice(0, -1).toUpperCase()} added successfully!`);\n      // Re-fetch data relevant to selection dropdowns\n      if (type === \"patch_panels\") fetchData(\"patch_panels\", setPatchPanels);\n      if (type === \"switches\") fetchData(\"switches\", setSwitches);\n      if (type === \"pcs\") fetchData(\"pcs\", setPcs);\n      if (type === \"locations\") fetchData(\"locations\", setLocations);\n    } catch (error) {\n      console.error(`Error adding ${type}:`, error);\n      showMessage(`Error adding ${type}: ${error.message}`, 5000);\n    }\n  };\n\n  // Function to update an existing PC, Patch Panel, Switch, or Location\n  const handleUpdateEntity = async (type, id, data) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/${type}/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const updatedEntity = await response.json();\n      if (type === \"pcs\") setPcs(prev => prev.map(item => item.id === id ? updatedEntity : item));\n      if (type === \"patch_panels\") setPatchPanels(prev => prev.map(item => item.id === id ? updatedEntity : item));\n      if (type === \"switches\") setSwitches(prev => prev.map(item => item.id === id ? updatedEntity : item));\n      if (type === \"locations\") setLocations(prev => prev.map(item => item.id === id ? updatedEntity : item));\n      showMessage(`${type.slice(0, -1).toUpperCase()} updated successfully!`);\n      // Re-fetch connections and other related data as their foreign key info might have changed\n      fetchData(\"connections\", setConnections);\n      fetchData(\"patch_panels\", setPatchPanels);\n      fetchData(\"switches\", setSwitches);\n    } catch (error) {\n      console.error(`Error updating ${type}:`, error);\n      showMessage(`Error updating ${type}: ${error.message}`, 5000);\n    }\n  };\n\n  // Function to delete a PC, Patch Panel, Switch, or Location\n  const handleDeleteEntity = async (type, id) => {\n    const confirmed = window.confirm(`Are you sure you want to delete this ${type.slice(0, -1)}? This will also delete associated connections.`);\n    if (!confirmed) {\n      return;\n    }\n    try {\n      const response = await fetch(`${API_BASE_URL}/${type}/${id}`, {\n        method: \"DELETE\"\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      if (type === \"pcs\") setPcs(prev => prev.filter(item => item.id !== id));\n      if (type === \"patch_panels\") setPatchPanels(prev => prev.filter(item => item.id !== id));\n      if (type === \"switches\") setSwitches(prev => prev.filter(item => item.id !== id));\n      if (type === \"locations\") setLocations(prev => prev.filter(item => item.id !== id));\n      showMessage(`${type.slice(0, -1).toUpperCase()} deleted successfully!`);\n      // Re-fetch connections and other related data as cascade deletions might have occurred\n      fetchData(\"connections\", setConnections);\n      fetchData(\"patch_panels\", setPatchPanels);\n      fetchData(\"switches\", setSwitches);\n    } catch (error) {\n      console.error(`Error deleting ${type}:`, error);\n      showMessage(`Error deleting ${type}: ${error.message}`, 5000);\n    }\n  };\n\n  // Function to open the port status modal\n  const handleShowPortStatus = async (entityType, entityId) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/${entityType}/${entityId}/ports`);\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setPortStatusData(data);\n      setModalEntityType(entityType);\n      setModalEntityId(entityId);\n      setShowPortStatusModal(true);\n    } catch (error) {\n      console.error(`Failed to fetch ${entityType} port status:`, error);\n      showMessage(`Error fetching port status: ${error.message}`, 5000);\n    }\n  };\n  const handleClosePortStatusModal = () => {\n    setShowPortStatusModal(false);\n    setPortStatusData(null);\n    setModalEntityType(null);\n    setModalEntityId(null);\n  };\n\n  // Handle printing the form using an iframe\n  const handlePrintForm = () => {\n    const printWindow = window.open(\"\", \"_blank\");\n    if (!printWindow) {\n      alert(\"Please allow pop-ups for printing.\");\n      return;\n    }\n\n    // Render the PrintableConnectionForm component to a static HTML string\n    const printableHtml = ReactDOMServer.renderToString(/*#__PURE__*/_jsxDEV(PrintableConnectionForm\n    // No longer passing dynamic data to this static form\n    , {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this));\n\n    // Inject the fetched CSS content directly\n    const styleTag = `<style>${cssContent}</style>`;\n    printWindow.document.write(`\n      <!DOCTYPE html>\n      <html lang=\"en\">\n      <head>\n          <meta charset=\"UTF-8\">\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n          <title>Network Connection Form Print</title>\n          ${styleTag}\n      </head>\n      <body>\n          <div class=\"print-only-container\">\n              ${printableHtml}\n          </div>\n      </body>\n      </html>\n    `);\n    printWindow.document.close(); // Close the document to ensure content is loaded\n\n    // Wait for content to load, then print\n    printWindow.onload = () => {\n      printWindow.focus(); // Focus the new window\n      printWindow.print(); // Trigger print\n      // printWindow.close(); // Close the window after printing (optional, can be annoying)\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-gray-100 to-blue-200 font-inter p-4 sm:p-8\",\n    children: [isMessageVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed top-4 left-1/2 -translate-x-1/2 bg-blue-500 text-white px-6 py-3 rounded-lg shadow-lg z-50 animate-fade-in-down\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 9\n    }, this), showPortStatusModal && portStatusData && /*#__PURE__*/_jsxDEV(PortStatusModal, {\n      isOpen: showPortStatusModal,\n      onClose: handleClosePortStatusModal,\n      data: portStatusData,\n      entityType: modalEntityType,\n      entityId: modalEntityId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"mb-8 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-4xl font-extrabold text-blue-800 tracking-tight sm:text-5xl\",\n          children: \"Network Device Documentation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2 text-lg text-gray-600\",\n          children: \"Track your network connections from PC to Patch Panel to Switch with ease.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"max-w-6xl mx-auto bg-white rounded-xl shadow-lg p-6 sm:p-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex border-b border-gray-200 mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `py-3 px-6 text-lg font-medium ${activeTab === \"connections\" ? \"border-b-4 border-blue-600 text-blue-800\" : \"text-gray-600 hover:text-blue-600\"}`,\n            onClick: () => setActiveTab(\"connections\"),\n            children: \"Connections\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `py-3 px-6 text-lg font-medium ${activeTab === \"pcs\" ? \"border-b-4 border-blue-600 text-blue-800\" : \"text-gray-600 hover:text-blue-600\"}`,\n            onClick: () => setActiveTab(\"pcs\"),\n            children: \"PCs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `py-3 px-6 text-lg font-medium ${activeTab === \"switches\" ? \"border-b-4 border-blue-600 text-blue-800\" : \"text-gray-600 hover:text-blue-600\"}`,\n            onClick: () => setActiveTab(\"switches\"),\n            children: \"Switches\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `py-3 px-6 text-lg font-medium ${activeTab === \"patch_panels\" ? \"border-b-4 border-blue-600 text-blue-800\" : \"text-gray-600 hover:text-blue-600\"}`,\n            onClick: () => setActiveTab(\"patch_panels\"),\n            children: \"Patch Panels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `py-3 px-6 text-lg font-medium ${activeTab === \"locations\" ? \"border-b-4 border-blue-600 text-blue-800\" : \"text-gray-600 hover:text-blue-600\"}`,\n            onClick: () => setActiveTab(\"locations\"),\n            children: \"Locations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this), activeTab === \"connections\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"mb-10 p-6 bg-blue-50 rounded-lg border border-blue-200 shadow-inner\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-2xl font-bold text-blue-700 mb-4\",\n              children: \"Add/Edit Connection\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ConnectionForm, {\n              pcs: pcs,\n              patchPanels: patchPanels,\n              switches: switches,\n              onAddConnection: handleAddConnection,\n              onUpdateConnection: handleUpdateConnection,\n              editingConnection: editingConnection,\n              setEditingConnection: setEditingConnection,\n              onAddEntity: handleAddEntity,\n              onShowPortStatus: handleShowPortStatus,\n              locations: locations\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mb-6\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handlePrintForm,\n              className: \"px-6 py-3 bg-indigo-600 text-white rounded-md shadow-md hover:bg-indigo-700 transition-colors duration-200 flex items-center justify-center mx-auto\",\n              children: [/*#__PURE__*/_jsxDEV(Printer, {\n                size: 20,\n                className: \"mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 496,\n                columnNumber: 19\n              }, this), \" Print Empty Form\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-2xl font-bold text-blue-700 mb-6\",\n              children: \"All Connections\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ConnectionList, {\n              connections: connections,\n              onDelete: handleDeleteConnection,\n              onEdit: handleEditConnection\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 17\n            }, this), connections.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-center text-gray-500 text-lg mt-8\",\n              children: \"No connections found. Start by adding one above.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), activeTab === \"pcs\" && /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-bold text-blue-700 mb-6\",\n            children: \"All PCs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(PcList, {\n            pcs: pcs,\n            onAddEntity: handleAddEntity,\n            onUpdateEntity: handleUpdateEntity,\n            onDeleteEntity: handleDeleteEntity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 13\n        }, this), activeTab === \"switches\" && /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-bold text-blue-700 mb-6\",\n            children: \"All Switches\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(SwitchList, {\n            switches: switches,\n            onAddEntity: handleAddEntity,\n            onUpdateEntity: handleUpdateEntity,\n            onDeleteEntity: handleDeleteEntity,\n            onShowPortStatus: handleShowPortStatus,\n            locations: locations\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 13\n        }, this), activeTab === \"patch_panels\" && /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-bold text-blue-700 mb-6\",\n            children: \"All Patch Panels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(PatchPanelList, {\n            patchPanels: patchPanels,\n            onAddEntity: handleAddEntity,\n            onUpdateEntity: handleUpdateEntity,\n            onDeleteEntity: handleDeleteEntity,\n            onShowPortStatus: handleShowPortStatus,\n            locations: locations\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 13\n        }, this), activeTab === \"locations\" && /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-bold text-blue-700 mb-6\",\n            children: \"Manage Locations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white p-6 rounded-lg shadow-md border border-blue-200 mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-xl font-bold text-blue-700 mb-4\",\n              children: \"Add New Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: async e => {\n                e.preventDefault();\n                const name = e.target.locationName.value;\n                if (name.trim()) {\n                  await handleAddEntity(\"locations\", {\n                    name\n                  });\n                  e.target.locationName.value = \"\";\n                }\n              },\n              className: \"flex space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"locationName\",\n                placeholder: \"Location Name (e.g., Data Center)\",\n                className: \"flex-grow p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 584,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors duration-200\",\n                children: \"Add Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 591,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-3\",\n            children: locations.length > 0 ? locations.map(location => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-white rounded-lg shadow-sm border border-gray-100 p-4 flex justify-between items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-lg font-medium text-gray-800\",\n                children: location.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 608,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteEntity(\"locations\", location.id),\n                className: \"px-3 py-1 text-sm bg-red-600 text-white rounded-md hover:bg-red-700 transition-colors duration-200\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 611,\n                columnNumber: 23\n              }, this)]\n            }, location.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 21\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-center text-gray-500 text-lg\",\n              children: \"No locations added yet. Add some to get started!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 622,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"mt-12 text-center text-gray-500 text-sm\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\xA9 2025 Network Doc App. All rights reserved.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 375,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"h41mSI+7IJ/yQhcqIUM6tXQtQjA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","ConnectionList","ConnectionForm","PortStatusModal","PcList","SwitchList","PatchPanelList","PrintableConnectionForm","Printer","ReactDOMServer","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","process","env","NODE_ENV","App","_s","pcs","setPcs","patchPanels","setPatchPanels","switches","setSwitches","connections","setConnections","locations","setLocations","activeTab","setActiveTab","message","setMessage","isMessageVisible","setIsMessageVisible","showPortStatusModal","setShowPortStatusModal","portStatusData","setPortStatusData","modalEntityType","setModalEntityType","modalEntityId","setModalEntityId","editingConnection","setEditingConnection","showPrintableForm","setShowPrintableForm","cssContent","setCssContent","showMessage","msg","duration","setTimeout","fetchData","endpoint","setter","response","fetch","ok","errorData","json","catch","Error","error","status","data","console","then","res","text","css","err","handleAddConnection","newConnectionData","method","headers","body","JSON","stringify","handleUpdateConnection","id","updatedConnectionData","handleDeleteConnection","confirmed","window","confirm","prev","filter","conn","handleEditConnection","connection","_connection$pc","_connection$switch","formattedConnection","pc_id","pc","switch_id","switch","switch_port","is_switch_port_up","hops","map","hop","_hop$patch_panel","patch_panel_id","patch_panel","patch_panel_port","is_port_up","handleAddEntity","type","newEntity","slice","toUpperCase","handleUpdateEntity","updatedEntity","item","handleDeleteEntity","handleShowPortStatus","entityType","entityId","handleClosePortStatusModal","handlePrintForm","printWindow","open","alert","printableHtml","renderToString","fileName","_jsxFileName","lineNumber","columnNumber","styleTag","document","write","close","onload","focus","print","className","children","isOpen","onClose","onClick","onAddConnection","onUpdateConnection","onAddEntity","onShowPortStatus","size","onDelete","onEdit","length","onUpdateEntity","onDeleteEntity","onSubmit","e","preventDefault","name","target","locationName","value","trim","placeholder","required","location","_c","$RefreshReg$"],"sources":["/app/src/App.js"],"sourcesContent":["// frontend/src/App.js\n// This is the main React component for the frontend application.\n// It orchestrates the display of various sections (Connections, PCs, Switches, Patch Panels).\n\nimport React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport ConnectionList from \"./components/ConnectionList\";\nimport ConnectionForm from \"./components/ConnectionForm\";\nimport PortStatusModal from \"./components/PortStatusModal\";\nimport PcList from \"./components/PcList\";\nimport SwitchList from \"./components/SwitchList\";\nimport PatchPanelList from \"./components/PatchPanelList\";\nimport PrintableConnectionForm from \"./components/PrintableConnectionForm\";\nimport { Printer } from \"lucide-react\";\nimport ReactDOMServer from \"react-dom/server\";\n\n// Base URL for the backend API. When running in Docker Compose,\n// 'backend' is the service name and resolves to the backend container's IP.\nconst API_BASE_URL =\n  process.env.NODE_ENV === \"production\"\n    ? \"/api\" // In production, proxy requests through Nginx or similar\n    : \"http://localhost:5004\"; // For local development with 'npm start'\n\nfunction App() {\n  // State variables to store fetched data\n  const [pcs, setPcs] = useState([]);\n  const [patchPanels, setPatchPanels] = useState([]);\n  const [switches, setSwitches] = useState([]);\n  const [connections, setConnections] = useState([]);\n  const [locations, setLocations] = useState([]);\n\n  // State for current active tab\n  const [activeTab, setActiveTab] = useState(\"connections\"); // 'connections', 'pcs', 'switches', 'patch_panels', 'locations'\n\n  const [message, setMessage] = useState(\"\"); // General message for success/error\n  const [isMessageVisible, setIsMessageVisible] = useState(false); // Controls message visibility\n\n  // State for Port Status Modal\n  const [showPortStatusModal, setShowPortStatusModal] = useState(false);\n  const [portStatusData, setPortStatusData] = useState(null);\n  const [modalEntityType, setModalEntityType] = useState(null);\n  const [modalEntityId, setModalEntityId] = useState(null);\n\n  // State for editing a connection in the ConnectionForm\n  const [editingConnection, setEditingConnection] = useState(null);\n\n  // State for showing the printable form (used for conditional rendering in main app)\n  const [showPrintableForm, setShowPrintableForm] = useState(false);\n  // State to store CSS content for injecting into print window\n  const [cssContent, setCssContent] = useState(\"\");\n\n  // Function to show a message temporarily\n  const showMessage = (msg, duration = 3000) => {\n    setMessage(msg);\n    setIsMessageVisible(true);\n    setTimeout(() => {\n      setIsMessageVisible(false);\n      setMessage(\"\");\n    }, duration);\n  };\n\n  // Memoized function to fetch data from the backend\n  const fetchData = useCallback(async (endpoint, setter) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/${endpoint}`);\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(\n          errorData.error || `HTTP error! status: ${response.status}`\n        );\n      }\n      const data = await response.json();\n      setter(data);\n    } catch (error) {\n      console.error(`Failed to fetch ${endpoint}:`, error);\n      showMessage(`Error fetching ${endpoint}: ${error.message}`, 5000);\n    }\n  }, []);\n\n  // Fetch all initial data when the component mounts\n  useEffect(() => {\n    fetchData(\"pcs\", setPcs);\n    fetchData(\"patch_panels\", setPatchPanels);\n    fetchData(\"switches\", setSwitches);\n    fetchData(\"connections\", setConnections);\n    fetchData(\"locations\", setLocations);\n\n    // Fetch CSS content once when component mounts\n    fetch(\"/static/css/main.css\") // Path to your compiled CSS file (relative to public folder)\n      .then((res) => res.text())\n      .then((css) => setCssContent(css))\n      .catch((err) => console.error(\"Failed to load CSS for printing:\", err));\n  }, [fetchData]);\n\n  // Handle adding a new connection\n  const handleAddConnection = async (newConnectionData) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/connections`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(newConnectionData),\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(\n          errorData.error || `HTTP error! status: ${response.status}`\n        );\n      }\n      fetchData(\"connections\", setConnections);\n      showMessage(\"Connection added successfully!\");\n      setEditingConnection(null);\n    } catch (error) {\n      console.error(\"Error adding connection:\", error);\n      showMessage(`Error adding connection: ${error.message}`, 8000);\n    }\n  };\n\n  // Handle updating an existing connection\n  const handleUpdateConnection = async (id, updatedConnectionData) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/connections/${id}`, {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(updatedConnectionData),\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(\n          errorData.error || `HTTP error! status: ${response.status}`\n        );\n      }\n      fetchData(\"connections\", setConnections);\n      showMessage(\"Connection updated successfully!\");\n      setEditingConnection(null);\n    } catch (error) {\n      console.error(\"Error updating connection:\", error);\n      showMessage(`Error updating connection: ${error.message}`, 8000);\n    }\n  };\n\n  // Handle deleting a connection\n  const handleDeleteConnection = async (id) => {\n    const confirmed = window.confirm(\n      \"Are you sure you want to delete this connection?\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      const response = await fetch(`${API_BASE_URL}/connections/${id}`, {\n        method: \"DELETE\",\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(\n          errorData.error || `HTTP error! status: ${response.status}`\n        );\n      }\n      setConnections((prev) => prev.filter((conn) => conn.id !== id));\n      showMessage(\"Connection deleted successfully!\");\n    } catch (error) {\n      console.error(\"Error deleting connection:\", error);\n      showMessage(`Error deleting connection: ${error.message}`, 5000);\n    }\n  };\n\n  // Handle editing a connection (set the connection to be edited in state for form pre-fill)\n  const handleEditConnection = (connection) => {\n    const formattedConnection = {\n      id: connection.id,\n      pc_id: connection.pc?.id,\n      switch_id: connection.switch?.id,\n      switch_port: connection.switch_port,\n      is_switch_port_up: connection.is_switch_port_up,\n      hops: connection.hops.map((hop) => ({\n        patch_panel_id: hop.patch_panel?.id,\n        patch_panel_port: hop.patch_panel_port,\n        is_port_up: hop.is_port_up,\n      })),\n      pc: connection.pc,\n      switch: connection.switch,\n    };\n    setEditingConnection(formattedConnection);\n  };\n\n  // Function to add a new PC, Patch Panel, Switch, or Location\n  const handleAddEntity = async (type, data) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/${type}`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(data),\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(\n          errorData.error || `HTTP error! status: ${response.status}`\n        );\n      }\n      const newEntity = await response.json();\n      if (type === \"pcs\") setPcs((prev) => [...prev, newEntity]);\n      if (type === \"patch_panels\")\n        setPatchPanels((prev) => [...prev, newEntity]);\n      if (type === \"switches\") setSwitches((prev) => [...prev, newEntity]);\n      if (type === \"locations\") setLocations((prev) => [...prev, newEntity]);\n      showMessage(`${type.slice(0, -1).toUpperCase()} added successfully!`);\n      // Re-fetch data relevant to selection dropdowns\n      if (type === \"patch_panels\") fetchData(\"patch_panels\", setPatchPanels);\n      if (type === \"switches\") fetchData(\"switches\", setSwitches);\n      if (type === \"pcs\") fetchData(\"pcs\", setPcs);\n      if (type === \"locations\") fetchData(\"locations\", setLocations);\n    } catch (error) {\n      console.error(`Error adding ${type}:`, error);\n      showMessage(`Error adding ${type}: ${error.message}`, 5000);\n    }\n  };\n\n  // Function to update an existing PC, Patch Panel, Switch, or Location\n  const handleUpdateEntity = async (type, id, data) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/${type}/${id}`, {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(data),\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(\n          errorData.error || `HTTP error! status: ${response.status}`\n        );\n      }\n      const updatedEntity = await response.json();\n      if (type === \"pcs\")\n        setPcs((prev) =>\n          prev.map((item) => (item.id === id ? updatedEntity : item))\n        );\n      if (type === \"patch_panels\")\n        setPatchPanels((prev) =>\n          prev.map((item) => (item.id === id ? updatedEntity : item))\n        );\n      if (type === \"switches\")\n        setSwitches((prev) =>\n          prev.map((item) => (item.id === id ? updatedEntity : item))\n        );\n      if (type === \"locations\")\n        setLocations((prev) =>\n          prev.map((item) => (item.id === id ? updatedEntity : item))\n        );\n      showMessage(`${type.slice(0, -1).toUpperCase()} updated successfully!`);\n      // Re-fetch connections and other related data as their foreign key info might have changed\n      fetchData(\"connections\", setConnections);\n      fetchData(\"patch_panels\", setPatchPanels);\n      fetchData(\"switches\", setSwitches);\n    } catch (error) {\n      console.error(`Error updating ${type}:`, error);\n      showMessage(`Error updating ${type}: ${error.message}`, 5000);\n    }\n  };\n\n  // Function to delete a PC, Patch Panel, Switch, or Location\n  const handleDeleteEntity = async (type, id) => {\n    const confirmed = window.confirm(\n      `Are you sure you want to delete this ${type.slice(\n        0,\n        -1\n      )}? This will also delete associated connections.`\n    );\n    if (!confirmed) {\n      return;\n    }\n    try {\n      const response = await fetch(`${API_BASE_URL}/${type}/${id}`, {\n        method: \"DELETE\",\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(\n          errorData.error || `HTTP error! status: ${response.status}`\n        );\n      }\n      if (type === \"pcs\")\n        setPcs((prev) => prev.filter((item) => item.id !== id));\n      if (type === \"patch_panels\")\n        setPatchPanels((prev) => prev.filter((item) => item.id !== id));\n      if (type === \"switches\")\n        setSwitches((prev) => prev.filter((item) => item.id !== id));\n      if (type === \"locations\")\n        setLocations((prev) => prev.filter((item) => item.id !== id));\n      showMessage(`${type.slice(0, -1).toUpperCase()} deleted successfully!`);\n      // Re-fetch connections and other related data as cascade deletions might have occurred\n      fetchData(\"connections\", setConnections);\n      fetchData(\"patch_panels\", setPatchPanels);\n      fetchData(\"switches\", setSwitches);\n    } catch (error) {\n      console.error(`Error deleting ${type}:`, error);\n      showMessage(`Error deleting ${type}: ${error.message}`, 5000);\n    }\n  };\n\n  // Function to open the port status modal\n  const handleShowPortStatus = async (entityType, entityId) => {\n    try {\n      const response = await fetch(\n        `${API_BASE_URL}/${entityType}/${entityId}/ports`\n      );\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(\n          errorData.error || `HTTP error! status: ${response.status}`\n        );\n      }\n      const data = await response.json();\n      setPortStatusData(data);\n      setModalEntityType(entityType);\n      setModalEntityId(entityId);\n      setShowPortStatusModal(true);\n    } catch (error) {\n      console.error(`Failed to fetch ${entityType} port status:`, error);\n      showMessage(`Error fetching port status: ${error.message}`, 5000);\n    }\n  };\n\n  const handleClosePortStatusModal = () => {\n    setShowPortStatusModal(false);\n    setPortStatusData(null);\n    setModalEntityType(null);\n    setModalEntityId(null);\n  };\n\n  // Handle printing the form using an iframe\n  const handlePrintForm = () => {\n    const printWindow = window.open(\"\", \"_blank\");\n    if (!printWindow) {\n      alert(\"Please allow pop-ups for printing.\");\n      return;\n    }\n\n    // Render the PrintableConnectionForm component to a static HTML string\n    const printableHtml = ReactDOMServer.renderToString(\n      <PrintableConnectionForm\n      // No longer passing dynamic data to this static form\n      />\n    );\n\n    // Inject the fetched CSS content directly\n    const styleTag = `<style>${cssContent}</style>`;\n\n    printWindow.document.write(`\n      <!DOCTYPE html>\n      <html lang=\"en\">\n      <head>\n          <meta charset=\"UTF-8\">\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n          <title>Network Connection Form Print</title>\n          ${styleTag}\n      </head>\n      <body>\n          <div class=\"print-only-container\">\n              ${printableHtml}\n          </div>\n      </body>\n      </html>\n    `);\n    printWindow.document.close(); // Close the document to ensure content is loaded\n\n    // Wait for content to load, then print\n    printWindow.onload = () => {\n      printWindow.focus(); // Focus the new window\n      printWindow.print(); // Trigger print\n      // printWindow.close(); // Close the window after printing (optional, can be annoying)\n    };\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-100 to-blue-200 font-inter p-4 sm:p-8\">\n      {/* Global Message Box */}\n      {isMessageVisible && (\n        <div className=\"fixed top-4 left-1/2 -translate-x-1/2 bg-blue-500 text-white px-6 py-3 rounded-lg shadow-lg z-50 animate-fade-in-down\">\n          {message}\n        </div>\n      )}\n\n      {/* Port Status Modal */}\n      {showPortStatusModal && portStatusData && (\n        <PortStatusModal\n          isOpen={showPortStatusModal}\n          onClose={handleClosePortStatusModal}\n          data={portStatusData}\n          entityType={modalEntityType}\n          entityId={modalEntityId}\n        />\n      )}\n\n      {/* Printable Connection Form (Only visible when printing) */}\n      {/* This component is now rendered to string, not conditionally displayed in the main DOM */}\n      {/* Removed: {showPrintableForm && (...) } */}\n\n      {/* Main App Content */}\n      <div>\n        {\" \"}\n        {/* Removed conditional 'no-print' class as iframe handles hiding */}\n        {/* Header Section */}\n        <header className=\"mb-8 text-center\">\n          <h1 className=\"text-4xl font-extrabold text-blue-800 tracking-tight sm:text-5xl\">\n            Network Device Documentation\n          </h1>\n          <p className=\"mt-2 text-lg text-gray-600\">\n            Track your network connections from PC to Patch Panel to Switch with\n            ease.\n          </p>\n        </header>\n        {/* Main Content Area */}\n        <main className=\"max-w-6xl mx-auto bg-white rounded-xl shadow-lg p-6 sm:p-8\">\n          {/* Tab Navigation */}\n          <div className=\"flex border-b border-gray-200 mb-6\">\n            <button\n              className={`py-3 px-6 text-lg font-medium ${\n                activeTab === \"connections\"\n                  ? \"border-b-4 border-blue-600 text-blue-800\"\n                  : \"text-gray-600 hover:text-blue-600\"\n              }`}\n              onClick={() => setActiveTab(\"connections\")}\n            >\n              Connections\n            </button>\n            <button\n              className={`py-3 px-6 text-lg font-medium ${\n                activeTab === \"pcs\"\n                  ? \"border-b-4 border-blue-600 text-blue-800\"\n                  : \"text-gray-600 hover:text-blue-600\"\n              }`}\n              onClick={() => setActiveTab(\"pcs\")}\n            >\n              PCs\n            </button>\n            <button\n              className={`py-3 px-6 text-lg font-medium ${\n                activeTab === \"switches\"\n                  ? \"border-b-4 border-blue-600 text-blue-800\"\n                  : \"text-gray-600 hover:text-blue-600\"\n              }`}\n              onClick={() => setActiveTab(\"switches\")}\n            >\n              Switches\n            </button>\n            <button\n              className={`py-3 px-6 text-lg font-medium ${\n                activeTab === \"patch_panels\"\n                  ? \"border-b-4 border-blue-600 text-blue-800\"\n                  : \"text-gray-600 hover:text-blue-600\"\n              }`}\n              onClick={() => setActiveTab(\"patch_panels\")}\n            >\n              Patch Panels\n            </button>\n            <button\n              className={`py-3 px-6 text-lg font-medium ${\n                activeTab === \"locations\"\n                  ? \"border-b-4 border-blue-600 text-blue-800\"\n                  : \"text-gray-600 hover:text-blue-600\"\n              }`}\n              onClick={() => setActiveTab(\"locations\")}\n            >\n              Locations\n            </button>\n          </div>\n\n          {/* Conditional Tab Content Rendering */}\n          {activeTab === \"connections\" && (\n            <>\n              {/* Connection Form Section */}\n              <section className=\"mb-10 p-6 bg-blue-50 rounded-lg border border-blue-200 shadow-inner\">\n                <h2 className=\"text-2xl font-bold text-blue-700 mb-4\">\n                  Add/Edit Connection\n                </h2>\n                <ConnectionForm\n                  pcs={pcs}\n                  patchPanels={patchPanels}\n                  switches={switches}\n                  onAddConnection={handleAddConnection}\n                  onUpdateConnection={handleUpdateConnection}\n                  editingConnection={editingConnection}\n                  setEditingConnection={setEditingConnection}\n                  onAddEntity={handleAddEntity}\n                  onShowPortStatus={handleShowPortStatus}\n                  locations={locations}\n                />\n              </section>\n\n              {/* Print Form Button */}\n              <div className=\"text-center mb-6\">\n                <button\n                  onClick={handlePrintForm}\n                  className=\"px-6 py-3 bg-indigo-600 text-white rounded-md shadow-md hover:bg-indigo-700 transition-colors duration-200 flex items-center justify-center mx-auto\"\n                >\n                  <Printer size={20} className=\"mr-2\" /> Print Empty Form\n                </button>\n              </div>\n\n              {/* Connection List Section */}\n              <section>\n                <h2 className=\"text-2xl font-bold text-blue-700 mb-6\">\n                  All Connections\n                </h2>\n                <ConnectionList\n                  connections={connections}\n                  onDelete={handleDeleteConnection}\n                  onEdit={handleEditConnection}\n                />\n                {connections.length === 0 && (\n                  <p className=\"text-center text-gray-500 text-lg mt-8\">\n                    No connections found. Start by adding one above.\n                  </p>\n                )}\n              </section>\n            </>\n          )}\n\n          {activeTab === \"pcs\" && (\n            <section>\n              <h2 className=\"text-2xl font-bold text-blue-700 mb-6\">All PCs</h2>\n              <PcList\n                pcs={pcs}\n                onAddEntity={handleAddEntity}\n                onUpdateEntity={handleUpdateEntity}\n                onDeleteEntity={handleDeleteEntity}\n              />\n            </section>\n          )}\n\n          {activeTab === \"switches\" && (\n            <section>\n              <h2 className=\"text-2xl font-bold text-blue-700 mb-6\">\n                All Switches\n              </h2>\n              <SwitchList\n                switches={switches}\n                onAddEntity={handleAddEntity}\n                onUpdateEntity={handleUpdateEntity}\n                onDeleteEntity={handleDeleteEntity}\n                onShowPortStatus={handleShowPortStatus}\n                locations={locations}\n              />\n            </section>\n          )}\n\n          {activeTab === \"patch_panels\" && (\n            <section>\n              <h2 className=\"text-2xl font-bold text-blue-700 mb-6\">\n                All Patch Panels\n              </h2>\n              <PatchPanelList\n                patchPanels={patchPanels}\n                onAddEntity={handleAddEntity}\n                onUpdateEntity={handleUpdateEntity}\n                onDeleteEntity={handleDeleteEntity}\n                onShowPortStatus={handleShowPortStatus}\n                locations={locations}\n              />\n            </section>\n          )}\n\n          {activeTab === \"locations\" && (\n            <section>\n              <h2 className=\"text-2xl font-bold text-blue-700 mb-6\">\n                Manage Locations\n              </h2>\n              {/* Form for adding new locations */}\n              <div className=\"bg-white p-6 rounded-lg shadow-md border border-blue-200 mb-6\">\n                <h3 className=\"text-xl font-bold text-blue-700 mb-4\">\n                  Add New Location\n                </h3>\n                <form\n                  onSubmit={async (e) => {\n                    e.preventDefault();\n                    const name = e.target.locationName.value;\n                    if (name.trim()) {\n                      await handleAddEntity(\"locations\", { name });\n                      e.target.locationName.value = \"\";\n                    }\n                  }}\n                  className=\"flex space-x-2\"\n                >\n                  <input\n                    type=\"text\"\n                    name=\"locationName\"\n                    placeholder=\"Location Name (e.g., Data Center)\"\n                    className=\"flex-grow p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                    required\n                  />\n                  <button\n                    type=\"submit\"\n                    className=\"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors duration-200\"\n                  >\n                    Add Location\n                  </button>\n                </form>\n              </div>\n\n              {/* List of existing locations */}\n              <div className=\"space-y-3\">\n                {locations.length > 0 ? (\n                  locations.map((location) => (\n                    <div\n                      key={location.id}\n                      className=\"bg-white rounded-lg shadow-sm border border-gray-100 p-4 flex justify-between items-center\"\n                    >\n                      <span className=\"text-lg font-medium text-gray-800\">\n                        {location.name}\n                      </span>\n                      <button\n                        onClick={() =>\n                          handleDeleteEntity(\"locations\", location.id)\n                        }\n                        className=\"px-3 py-1 text-sm bg-red-600 text-white rounded-md hover:bg-red-700 transition-colors duration-200\"\n                      >\n                        Delete\n                      </button>\n                    </div>\n                  ))\n                ) : (\n                  <p className=\"text-center text-gray-500 text-lg\">\n                    No locations added yet. Add some to get started!\n                  </p>\n                )}\n              </div>\n            </section>\n          )}\n        </main>\n        {/* Footer (Optional) */}\n        <footer className=\"mt-12 text-center text-gray-500 text-sm\">\n          <p>&copy; 2025 Network Doc App. All rights reserved.</p>\n        </footer>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}