{"ast":null,"code":"var _jsxFileName = \"/app/src/App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js\n// This is the main React component for the frontend application.\n// It orchestrates the display of various sections (Connections, PCs, Switches, Patch Panels).\n// Added state management and rendering for SwitchDiagramModal.\n\nimport React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport ConnectionList from \"./components/ConnectionList\";\nimport ConnectionForm from \"./components/ConnectionForm\";\nimport PortStatusModal from \"./components/PortStatusModal\";\nimport PcList from \"./components/PcList\";\nimport SwitchList from \"./components/SwitchList\";\nimport PatchPanelList from \"./components/PatchPanelList\";\nimport PrintableConnectionForm from \"./components/PrintableConnectionForm\";\nimport SwitchDiagramModal from \"./components/SwitchDiagramModal\"; // Import the new component\nimport { Printer } from \"lucide-react\";\nimport ReactDOMServer from \"react-dom/server\";\n\n// Base URL for the backend API.\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.NODE_ENV === \"production\" ? \"/api\" : \"http://localhost:5004\";\nfunction App() {\n  _s();\n  // State variables to store fetched data\n  const [pcs, setPcs] = useState([]);\n  const [patchPanels, setPatchPanels] = useState([]);\n  const [switches, setSwitches] = useState([]);\n  const [connections, setConnections] = useState([]);\n  const [locations, setLocations] = useState([]);\n\n  // State for current active tab\n  const [activeTab, setActiveTab] = useState(\"connections\");\n  const [message, setMessage] = useState(\"\");\n  const [isMessageVisible, setIsMessageVisible] = useState(false);\n\n  // State for Port Status Modal\n  const [showPortStatusModal, setShowPortStatusModal] = useState(false);\n  const [portStatusData, setPortStatusData] = useState(null);\n  const [modalEntityType, setModalEntityType] = useState(null);\n  const [modalEntityId, setModalEntityId] = useState(null);\n\n  // State for Switch Diagram Modal\n  const [showSwitchDiagramModal, setShowSwitchDiagramModal] = useState(false);\n  const [selectedSwitchForDiagram, setSelectedSwitchForDiagram] = useState(null);\n\n  // State for editing a connection in the ConnectionForm\n  const [editingConnection, setEditingConnection] = useState(null);\n\n  // State to store CSS content for injecting into print window\n  const [cssContent, setCssContent] = useState(\"\");\n  const showMessage = (msg, duration = 3000) => {\n    setMessage(msg);\n    setIsMessageVisible(true);\n    setTimeout(() => {\n      setIsMessageVisible(false);\n      setMessage(\"\");\n    }, duration);\n  };\n  const fetchData = useCallback(async (endpoint, setter) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/${endpoint}`);\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setter(data);\n    } catch (error) {\n      console.error(`Failed to fetch ${endpoint}:`, error);\n      showMessage(`Error fetching ${endpoint}: ${error.message}`, 5000);\n    }\n  }, []);\n  useEffect(() => {\n    fetchData(\"pcs\", setPcs);\n    fetchData(\"patch_panels\", setPatchPanels);\n    fetchData(\"switches\", setSwitches);\n    fetchData(\"connections\", setConnections);\n    fetchData(\"locations\", setLocations);\n    fetch(\"/static/css/main.css\").then(res => res.text()).then(css => setCssContent(css)).catch(err => console.error(\"Failed to load CSS for printing:\", err));\n  }, [fetchData]);\n  const handleAddConnection = async newConnectionData => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/connections`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newConnectionData)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      fetchData(\"connections\", setConnections);\n      showMessage(\"Connection added successfully!\");\n      setEditingConnection(null);\n    } catch (error) {\n      console.error(\"Error adding connection:\", error);\n      showMessage(`Error adding connection: ${error.message}`, 8000);\n    }\n  };\n  const handleUpdateConnection = async (id, updatedConnectionData) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/connections/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(updatedConnectionData)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      fetchData(\"connections\", setConnections);\n      showMessage(\"Connection updated successfully!\");\n      setEditingConnection(null);\n    } catch (error) {\n      console.error(\"Error updating connection:\", error);\n      showMessage(`Error updating connection: ${error.message}`, 8000);\n    }\n  };\n  const handleDeleteConnection = async id => {\n    const confirmed = window.confirm(\"Are you sure you want to delete this connection?\");\n    if (!confirmed) {\n      return;\n    }\n    try {\n      const response = await fetch(`${API_BASE_URL}/connections/${id}`, {\n        method: \"DELETE\"\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      setConnections(prev => prev.filter(conn => conn.id !== id));\n      showMessage(\"Connection deleted successfully!\");\n    } catch (error) {\n      console.error(\"Error deleting connection:\", error);\n      showMessage(`Error deleting connection: ${error.message}`, 5000);\n    }\n  };\n  const handleEditConnection = connection => {\n    var _connection$pc, _connection$switch;\n    const formattedConnection = {\n      id: connection.id,\n      pc_id: (_connection$pc = connection.pc) === null || _connection$pc === void 0 ? void 0 : _connection$pc.id,\n      switch_id: (_connection$switch = connection.switch) === null || _connection$switch === void 0 ? void 0 : _connection$switch.id,\n      switch_port: connection.switch_port,\n      is_switch_port_up: connection.is_switch_port_up !== undefined ? connection.is_switch_port_up : true,\n      hops: connection.hops.map(hop => {\n        var _hop$patch_panel;\n        return {\n          patch_panel_id: (_hop$patch_panel = hop.patch_panel) === null || _hop$patch_panel === void 0 ? void 0 : _hop$patch_panel.id,\n          patch_panel_port: hop.patch_panel_port,\n          is_port_up: hop.is_port_up\n        };\n      }),\n      pc: connection.pc,\n      switch: connection.switch\n    };\n    setEditingConnection(formattedConnection);\n  };\n  const handleAddEntity = async (type, data) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/${type}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const newEntity = await response.json();\n      if (type === \"pcs\") setPcs(prev => [...prev, newEntity]);\n      if (type === \"patch_panels\") setPatchPanels(prev => [...prev, newEntity]);\n      if (type === \"switches\") setSwitches(prev => [...prev, newEntity]);\n      if (type === \"locations\") setLocations(prev => [...prev, newEntity]);\n      showMessage(`${type.slice(0, -1).toUpperCase()} added successfully!`);\n      fetchData(\"connections\", setConnections); // Re-fetch connections as new entities might affect them\n      fetchData(\"patch_panels\", setPatchPanels);\n      fetchData(\"switches\", setSwitches);\n      fetchData(\"pcs\", setPcs);\n      fetchData(\"locations\", setLocations);\n    } catch (error) {\n      console.error(`Error adding ${type}:`, error);\n      showMessage(`Error adding ${type}: ${error.message}`, 5000);\n    }\n  };\n  const handleUpdateEntity = async (type, id, data) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/${type}/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const updatedEntity = await response.json();\n      if (type === \"pcs\") setPcs(prev => prev.map(item => item.id === id ? updatedEntity : item));\n      if (type === \"patch_panels\") setPatchPanels(prev => prev.map(item => item.id === id ? updatedEntity : item));\n      if (type === \"switches\") setSwitches(prev => prev.map(item => item.id === id ? updatedEntity : item));\n      if (type === \"locations\") setLocations(prev => prev.map(item => item.id === id ? updatedEntity : item));\n      showMessage(`${type.slice(0, -1).toUpperCase()} updated successfully!`);\n      fetchData(\"connections\", setConnections);\n      fetchData(\"patch_panels\", setPatchPanels);\n      fetchData(\"switches\", setSwitches);\n    } catch (error) {\n      console.error(`Error updating ${type}:`, error);\n      showMessage(`Error updating ${type}: ${error.message}`, 5000);\n    }\n  };\n  const handleDeleteEntity = async (type, id) => {\n    const confirmed = window.confirm(`Are you sure you want to delete this ${type.slice(0, -1)}? This will also delete associated connections.`);\n    if (!confirmed) {\n      return;\n    }\n    try {\n      const response = await fetch(`${API_BASE_URL}/${type}/${id}`, {\n        method: \"DELETE\"\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      if (type === \"pcs\") setPcs(prev => prev.filter(item => item.id !== id));\n      if (type === \"patch_panels\") setPatchPanels(prev => prev.filter(item => item.id !== id));\n      if (type === \"switches\") setSwitches(prev => prev.filter(item => item.id !== id));\n      if (type === \"locations\") setLocations(prev => prev.filter(item => item.id !== id));\n      showMessage(`${type.slice(0, -1).toUpperCase()} deleted successfully!`);\n      fetchData(\"connections\", setConnections);\n      fetchData(\"patch_panels\", setPatchPanels);\n      fetchData(\"switches\", setSwitches);\n    } catch (error) {\n      console.error(`Error deleting ${type}:`, error);\n      showMessage(`Error deleting ${type}: ${error.message}`, 5000);\n    }\n  };\n  const handleShowPortStatus = async (entityType, entityId) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/${entityType}/${entityId}/ports`);\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setPortStatusData(data);\n      setModalEntityType(entityType);\n      setModalEntityId(entityId);\n      setShowPortStatusModal(true);\n    } catch (error) {\n      console.error(`Failed to fetch ${entityType} port status:`, error);\n      showMessage(`Error fetching port status: ${error.message}`, 5000);\n    }\n  };\n  const handleClosePortStatusModal = () => {\n    setShowPortStatusModal(false);\n    setPortStatusData(null);\n    setModalEntityType(null);\n    setModalEntityId(null);\n  };\n\n  // New handler for showing the Switch Diagram Modal\n  const handleViewSwitchDiagram = _switch => {\n    setSelectedSwitchForDiagram(_switch);\n    setShowSwitchDiagramModal(true);\n  };\n\n  // New handler for closing the Switch Diagram Modal\n  const handleCloseSwitchDiagramModal = () => {\n    setShowSwitchDiagramModal(false);\n    setSelectedSwitchForDiagram(null);\n  };\n  const handlePrintForm = () => {\n    const printWindow = window.open(\"\", \"_blank\");\n    if (!printWindow) {\n      alert(\"Please allow pop-ups for printing.\");\n      return;\n    }\n    const printableHtml = ReactDOMServer.renderToString(/*#__PURE__*/_jsxDEV(PrintableConnectionForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this));\n    const styleTag = `<style>${cssContent}</style>`;\n    printWindow.document.write(`\n      <!DOCTYPE html>\n      <html lang=\"en\">\n      <head>\n          <meta charset=\"UTF-8\">\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n          <title>Network Connection Form Print</title>\n          ${styleTag}\n      </head>\n      <body>\n          <div class=\"print-only-container\">\n              ${printableHtml}\n          </div>\n      </body>\n      </html>\n    `);\n    printWindow.document.close();\n    printWindow.onload = () => {\n      printWindow.focus();\n      printWindow.print();\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-gray-100 to-blue-200 font-inter p-4 sm:p-8\",\n    children: [isMessageVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed top-4 left-1/2 -translate-x-1/2 bg-blue-500 text-white px-6 py-3 rounded-lg shadow-lg z-50 animate-fade-in-down\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 9\n    }, this), showSwitchDiagramModal && selectedSwitchForDiagram && /*#__PURE__*/_jsxDEV(SwitchDiagramModal, {\n      isOpen: showSwitchDiagramModal,\n      onClose: handleCloseSwitchDiagramModal,\n      selectedSwitch: selectedSwitchForDiagram,\n      connections: connections,\n      pcs: pcs,\n      patchPanels: patchPanels // This line is correct after removing the comment\n      ,\n      switches: switches\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 9\n    }, this), showPortStatusModal && portStatusData && /*#__PURE__*/_jsxDEV(PortStatusModal, {\n      isOpen: showPortStatusModal,\n      onClose: handleClosePortStatusModal,\n      data: portStatusData,\n      entityType: modalEntityType,\n      entityId: modalEntityId,\n      cssContent: cssContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 9\n    }, this), showSwitchDiagramModal && selectedSwitchForDiagram && /*#__PURE__*/_jsxDEV(SwitchDiagramModal, {\n      isOpen: showSwitchDiagramModal,\n      onClose: handleCloseSwitchDiagramModal,\n      selectedSwitch: selectedSwitchForDiagram,\n      connections: connections // Pass all connections to find connected PCs\n      ,\n      pcs: pcs // Pass PCs to help find PC details\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"mb-8 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-4xl font-extrabold text-blue-800 tracking-tight sm:text-5xl\",\n          children: \"Network Device Documentation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2 text-lg text-gray-600\",\n          children: \"Track your network connections from PC to Patch Panel to Switch with ease.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"max-w-6xl mx-auto bg-white rounded-xl shadow-lg p-6 sm:p-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex border-b border-gray-200 mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `py-3 px-6 text-lg font-medium ${activeTab === \"connections\" ? \"border-b-4 border-blue-600 text-blue-800\" : \"text-gray-600 hover:text-blue-600\"}`,\n            onClick: () => setActiveTab(\"connections\"),\n            children: \"Connections\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `py-3 px-6 text-lg font-medium ${activeTab === \"pcs\" ? \"border-b-4 border-blue-600 text-blue-800\" : \"text-gray-600 hover:text-blue-600\"}`,\n            onClick: () => setActiveTab(\"pcs\"),\n            children: \"PCs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `py-3 px-6 text-lg font-medium ${activeTab === \"switches\" ? \"border-b-4 border-blue-600 text-blue-800\" : \"text-gray-600 hover:text-blue-600\"}`,\n            onClick: () => setActiveTab(\"switches\"),\n            children: \"Switches\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `py-3 px-6 text-lg font-medium ${activeTab === \"patch_panels\" ? \"border-b-4 border-blue-600 text-blue-800\" : \"text-gray-600 hover:text-blue-600\"}`,\n            onClick: () => setActiveTab(\"patch_panels\"),\n            children: \"Patch Panels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `py-3 px-6 text-lg font-medium ${activeTab === \"locations\" ? \"border-b-4 border-blue-600 text-blue-800\" : \"text-gray-600 hover:text-blue-600\"}`,\n            onClick: () => setActiveTab(\"locations\"),\n            children: \"Locations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this), activeTab === \"connections\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"mb-10 p-6 bg-blue-50 rounded-lg border border-blue-200 shadow-inner\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-2xl font-bold text-blue-700 mb-4\",\n              children: \"Add/Edit Connection\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ConnectionForm, {\n              pcs: pcs,\n              patchPanels: patchPanels,\n              switches: switches,\n              onAddConnection: handleAddConnection,\n              onUpdateConnection: handleUpdateConnection,\n              editingConnection: editingConnection,\n              setEditingConnection: setEditingConnection,\n              onAddEntity: handleAddEntity,\n              onShowPortStatus: handleShowPortStatus,\n              locations: locations\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mb-6\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handlePrintForm,\n              className: \"px-6 py-3 bg-indigo-600 text-white rounded-md shadow-md hover:bg-indigo-700 transition-colors duration-200 flex items-center justify-center mx-auto\",\n              children: [/*#__PURE__*/_jsxDEV(Printer, {\n                size: 20,\n                className: \"mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 19\n              }, this), \" Print Empty Form\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-2xl font-bold text-blue-700 mb-6\",\n              children: \"All Connections\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ConnectionList, {\n              connections: connections,\n              onDelete: handleDeleteConnection,\n              onEdit: handleEditConnection\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 17\n            }, this), connections.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-center text-gray-500 text-lg mt-8\",\n              children: \"No connections found. Start by adding one above.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), activeTab === \"pcs\" && /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-bold text-blue-700 mb-6\",\n            children: \"All PCs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(PcList, {\n            pcs: pcs,\n            onAddEntity: handleAddEntity,\n            onUpdateEntity: handleUpdateEntity,\n            onDeleteEntity: handleDeleteEntity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 13\n        }, this), activeTab === \"switches\" && /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-bold text-blue-700 mb-6\",\n            children: \"All Switches\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(SwitchList, {\n            switches: switches,\n            onAddEntity: handleAddEntity,\n            onUpdateEntity: handleUpdateEntity,\n            onDeleteEntity: handleDeleteEntity,\n            onShowPortStatus: handleShowPortStatus,\n            locations: locations,\n            onViewDiagram: handleViewSwitchDiagram\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 13\n        }, this), activeTab === \"patch_panels\" && /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-bold text-blue-700 mb-6\",\n            children: \"All Patch Panels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(PatchPanelList, {\n            patchPanels: patchPanels,\n            onAddEntity: handleAddEntity,\n            onUpdateEntity: handleUpdateEntity,\n            onDeleteEntity: handleDeleteEntity,\n            onShowPortStatus: handleShowPortStatus,\n            locations: locations\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 13\n        }, this), activeTab === \"locations\" && /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-bold text-blue-700 mb-6\",\n            children: \"Manage Locations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white p-6 rounded-lg shadow-md border border-blue-200 mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-xl font-bold text-blue-700 mb-4\",\n              children: \"Add New Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: async e => {\n                e.preventDefault();\n                const name = e.target.locationName.value;\n                if (name.trim()) {\n                  await handleAddEntity(\"locations\", {\n                    name\n                  });\n                  e.target.locationName.value = \"\";\n                }\n              },\n              className: \"flex space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"locationName\",\n                placeholder: \"Location Name (e.g., Data Center)\",\n                className: \"flex-grow p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 594,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors duration-200\",\n                children: \"Add Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 601,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-3\",\n            children: locations.length > 0 ? locations.map(location => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-white rounded-lg shadow-sm border border-gray-100 p-4 flex justify-between items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-lg font-medium text-gray-800\",\n                children: location.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 617,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteEntity(\"locations\", location.id),\n                className: \"px-3 py-1 text-sm bg-red-600 text-white rounded-md hover:bg-red-700 transition-colors duration-200\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 620,\n                columnNumber: 23\n              }, this)]\n            }, location.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 613,\n              columnNumber: 21\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-center text-gray-500 text-lg\",\n              children: \"No locations added yet. Add some to get started!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"mt-12 text-center text-gray-500 text-sm\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\xA9 2025 Network Doc App. All rights reserved.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 371,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IIHHSB0B7Le8V4I6K4kZhwGF5e8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","ConnectionList","ConnectionForm","PortStatusModal","PcList","SwitchList","PatchPanelList","PrintableConnectionForm","SwitchDiagramModal","Printer","ReactDOMServer","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","process","env","NODE_ENV","App","_s","pcs","setPcs","patchPanels","setPatchPanels","switches","setSwitches","connections","setConnections","locations","setLocations","activeTab","setActiveTab","message","setMessage","isMessageVisible","setIsMessageVisible","showPortStatusModal","setShowPortStatusModal","portStatusData","setPortStatusData","modalEntityType","setModalEntityType","modalEntityId","setModalEntityId","showSwitchDiagramModal","setShowSwitchDiagramModal","selectedSwitchForDiagram","setSelectedSwitchForDiagram","editingConnection","setEditingConnection","cssContent","setCssContent","showMessage","msg","duration","setTimeout","fetchData","endpoint","setter","response","fetch","ok","errorData","json","catch","Error","error","status","data","console","then","res","text","css","err","handleAddConnection","newConnectionData","method","headers","body","JSON","stringify","handleUpdateConnection","id","updatedConnectionData","handleDeleteConnection","confirmed","window","confirm","prev","filter","conn","handleEditConnection","connection","_connection$pc","_connection$switch","formattedConnection","pc_id","pc","switch_id","switch","switch_port","is_switch_port_up","undefined","hops","map","hop","_hop$patch_panel","patch_panel_id","patch_panel","patch_panel_port","is_port_up","handleAddEntity","type","newEntity","slice","toUpperCase","handleUpdateEntity","updatedEntity","item","handleDeleteEntity","handleShowPortStatus","entityType","entityId","handleClosePortStatusModal","handleViewSwitchDiagram","_switch","handleCloseSwitchDiagramModal","handlePrintForm","printWindow","open","alert","printableHtml","renderToString","fileName","_jsxFileName","lineNumber","columnNumber","styleTag","document","write","close","onload","focus","print","className","children","isOpen","onClose","selectedSwitch","onClick","onAddConnection","onUpdateConnection","onAddEntity","onShowPortStatus","size","onDelete","onEdit","length","onUpdateEntity","onDeleteEntity","onViewDiagram","onSubmit","e","preventDefault","name","target","locationName","value","trim","placeholder","required","location","_c","$RefreshReg$"],"sources":["/app/src/App.js"],"sourcesContent":["// frontend/src/App.js\n// This is the main React component for the frontend application.\n// It orchestrates the display of various sections (Connections, PCs, Switches, Patch Panels).\n// Added state management and rendering for SwitchDiagramModal.\n\nimport React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport ConnectionList from \"./components/ConnectionList\";\nimport ConnectionForm from \"./components/ConnectionForm\";\nimport PortStatusModal from \"./components/PortStatusModal\";\nimport PcList from \"./components/PcList\";\nimport SwitchList from \"./components/SwitchList\";\nimport PatchPanelList from \"./components/PatchPanelList\";\nimport PrintableConnectionForm from \"./components/PrintableConnectionForm\";\nimport SwitchDiagramModal from \"./components/SwitchDiagramModal\"; // Import the new component\nimport { Printer } from \"lucide-react\";\nimport ReactDOMServer from \"react-dom/server\";\n\n// Base URL for the backend API.\nconst API_BASE_URL =\n  process.env.NODE_ENV === \"production\" ? \"/api\" : \"http://localhost:5004\";\n\nfunction App() {\n  // State variables to store fetched data\n  const [pcs, setPcs] = useState([]);\n  const [patchPanels, setPatchPanels] = useState([]);\n  const [switches, setSwitches] = useState([]);\n  const [connections, setConnections] = useState([]);\n  const [locations, setLocations] = useState([]);\n\n  // State for current active tab\n  const [activeTab, setActiveTab] = useState(\"connections\");\n\n  const [message, setMessage] = useState(\"\");\n  const [isMessageVisible, setIsMessageVisible] = useState(false);\n\n  // State for Port Status Modal\n  const [showPortStatusModal, setShowPortStatusModal] = useState(false);\n  const [portStatusData, setPortStatusData] = useState(null);\n  const [modalEntityType, setModalEntityType] = useState(null);\n  const [modalEntityId, setModalEntityId] = useState(null);\n\n  // State for Switch Diagram Modal\n  const [showSwitchDiagramModal, setShowSwitchDiagramModal] = useState(false);\n  const [selectedSwitchForDiagram, setSelectedSwitchForDiagram] =\n    useState(null);\n\n  // State for editing a connection in the ConnectionForm\n  const [editingConnection, setEditingConnection] = useState(null);\n\n  // State to store CSS content for injecting into print window\n  const [cssContent, setCssContent] = useState(\"\");\n\n  const showMessage = (msg, duration = 3000) => {\n    setMessage(msg);\n    setIsMessageVisible(true);\n    setTimeout(() => {\n      setIsMessageVisible(false);\n      setMessage(\"\");\n    }, duration);\n  };\n\n  const fetchData = useCallback(async (endpoint, setter) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/${endpoint}`);\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(\n          errorData.error || `HTTP error! status: ${response.status}`\n        );\n      }\n      const data = await response.json();\n      setter(data);\n    } catch (error) {\n      console.error(`Failed to fetch ${endpoint}:`, error);\n      showMessage(`Error fetching ${endpoint}: ${error.message}`, 5000);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchData(\"pcs\", setPcs);\n    fetchData(\"patch_panels\", setPatchPanels);\n    fetchData(\"switches\", setSwitches);\n    fetchData(\"connections\", setConnections);\n    fetchData(\"locations\", setLocations);\n\n    fetch(\"/static/css/main.css\")\n      .then((res) => res.text())\n      .then((css) => setCssContent(css))\n      .catch((err) => console.error(\"Failed to load CSS for printing:\", err));\n  }, [fetchData]);\n\n  const handleAddConnection = async (newConnectionData) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/connections`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(newConnectionData),\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(\n          errorData.error || `HTTP error! status: ${response.status}`\n        );\n      }\n      fetchData(\"connections\", setConnections);\n      showMessage(\"Connection added successfully!\");\n      setEditingConnection(null);\n    } catch (error) {\n      console.error(\"Error adding connection:\", error);\n      showMessage(`Error adding connection: ${error.message}`, 8000);\n    }\n  };\n\n  const handleUpdateConnection = async (id, updatedConnectionData) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/connections/${id}`, {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(updatedConnectionData),\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(\n          errorData.error || `HTTP error! status: ${response.status}`\n        );\n      }\n      fetchData(\"connections\", setConnections);\n      showMessage(\"Connection updated successfully!\");\n      setEditingConnection(null);\n    } catch (error) {\n      console.error(\"Error updating connection:\", error);\n      showMessage(`Error updating connection: ${error.message}`, 8000);\n    }\n  };\n\n  const handleDeleteConnection = async (id) => {\n    const confirmed = window.confirm(\n      \"Are you sure you want to delete this connection?\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      const response = await fetch(`${API_BASE_URL}/connections/${id}`, {\n        method: \"DELETE\",\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(\n          errorData.error || `HTTP error! status: ${response.status}`\n        );\n      }\n      setConnections((prev) => prev.filter((conn) => conn.id !== id));\n      showMessage(\"Connection deleted successfully!\");\n    } catch (error) {\n      console.error(\"Error deleting connection:\", error);\n      showMessage(`Error deleting connection: ${error.message}`, 5000);\n    }\n  };\n\n  const handleEditConnection = (connection) => {\n    const formattedConnection = {\n      id: connection.id,\n      pc_id: connection.pc?.id,\n      switch_id: connection.switch?.id,\n      switch_port: connection.switch_port,\n      is_switch_port_up:\n        connection.is_switch_port_up !== undefined\n          ? connection.is_switch_port_up\n          : true,\n      hops: connection.hops.map((hop) => ({\n        patch_panel_id: hop.patch_panel?.id,\n        patch_panel_port: hop.patch_panel_port,\n        is_port_up: hop.is_port_up,\n      })),\n      pc: connection.pc,\n      switch: connection.switch,\n    };\n    setEditingConnection(formattedConnection);\n  };\n\n  const handleAddEntity = async (type, data) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/${type}`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(data),\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(\n          errorData.error || `HTTP error! status: ${response.status}`\n        );\n      }\n      const newEntity = await response.json();\n      if (type === \"pcs\") setPcs((prev) => [...prev, newEntity]);\n      if (type === \"patch_panels\")\n        setPatchPanels((prev) => [...prev, newEntity]);\n      if (type === \"switches\") setSwitches((prev) => [...prev, newEntity]);\n      if (type === \"locations\") setLocations((prev) => [...prev, newEntity]);\n      showMessage(`${type.slice(0, -1).toUpperCase()} added successfully!`);\n      fetchData(\"connections\", setConnections); // Re-fetch connections as new entities might affect them\n      fetchData(\"patch_panels\", setPatchPanels);\n      fetchData(\"switches\", setSwitches);\n      fetchData(\"pcs\", setPcs);\n      fetchData(\"locations\", setLocations);\n    } catch (error) {\n      console.error(`Error adding ${type}:`, error);\n      showMessage(`Error adding ${type}: ${error.message}`, 5000);\n    }\n  };\n\n  const handleUpdateEntity = async (type, id, data) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/${type}/${id}`, {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(data),\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(\n          errorData.error || `HTTP error! status: ${response.status}`\n        );\n      }\n      const updatedEntity = await response.json();\n      if (type === \"pcs\")\n        setPcs((prev) =>\n          prev.map((item) => (item.id === id ? updatedEntity : item))\n        );\n      if (type === \"patch_panels\")\n        setPatchPanels((prev) =>\n          prev.map((item) => (item.id === id ? updatedEntity : item))\n        );\n      if (type === \"switches\")\n        setSwitches((prev) =>\n          prev.map((item) => (item.id === id ? updatedEntity : item))\n        );\n      if (type === \"locations\")\n        setLocations((prev) =>\n          prev.map((item) => (item.id === id ? updatedEntity : item))\n        );\n      showMessage(`${type.slice(0, -1).toUpperCase()} updated successfully!`);\n      fetchData(\"connections\", setConnections);\n      fetchData(\"patch_panels\", setPatchPanels);\n      fetchData(\"switches\", setSwitches);\n    } catch (error) {\n      console.error(`Error updating ${type}:`, error);\n      showMessage(`Error updating ${type}: ${error.message}`, 5000);\n    }\n  };\n\n  const handleDeleteEntity = async (type, id) => {\n    const confirmed = window.confirm(\n      `Are you sure you want to delete this ${type.slice(\n        0,\n        -1\n      )}? This will also delete associated connections.`\n    );\n    if (!confirmed) {\n      return;\n    }\n    try {\n      const response = await fetch(`${API_BASE_URL}/${type}/${id}`, {\n        method: \"DELETE\",\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(\n          errorData.error || `HTTP error! status: ${response.status}`\n        );\n      }\n      if (type === \"pcs\")\n        setPcs((prev) => prev.filter((item) => item.id !== id));\n      if (type === \"patch_panels\")\n        setPatchPanels((prev) => prev.filter((item) => item.id !== id));\n      if (type === \"switches\")\n        setSwitches((prev) => prev.filter((item) => item.id !== id));\n      if (type === \"locations\")\n        setLocations((prev) => prev.filter((item) => item.id !== id));\n      showMessage(`${type.slice(0, -1).toUpperCase()} deleted successfully!`);\n      fetchData(\"connections\", setConnections);\n      fetchData(\"patch_panels\", setPatchPanels);\n      fetchData(\"switches\", setSwitches);\n    } catch (error) {\n      console.error(`Error deleting ${type}:`, error);\n      showMessage(`Error deleting ${type}: ${error.message}`, 5000);\n    }\n  };\n\n  const handleShowPortStatus = async (entityType, entityId) => {\n    try {\n      const response = await fetch(\n        `${API_BASE_URL}/${entityType}/${entityId}/ports`\n      );\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(\n          errorData.error || `HTTP error! status: ${response.status}`\n        );\n      }\n      const data = await response.json();\n      setPortStatusData(data);\n      setModalEntityType(entityType);\n      setModalEntityId(entityId);\n      setShowPortStatusModal(true);\n    } catch (error) {\n      console.error(`Failed to fetch ${entityType} port status:`, error);\n      showMessage(`Error fetching port status: ${error.message}`, 5000);\n    }\n  };\n\n  const handleClosePortStatusModal = () => {\n    setShowPortStatusModal(false);\n    setPortStatusData(null);\n    setModalEntityType(null);\n    setModalEntityId(null);\n  };\n\n  // New handler for showing the Switch Diagram Modal\n  const handleViewSwitchDiagram = (_switch) => {\n    setSelectedSwitchForDiagram(_switch);\n    setShowSwitchDiagramModal(true);\n  };\n\n  // New handler for closing the Switch Diagram Modal\n  const handleCloseSwitchDiagramModal = () => {\n    setShowSwitchDiagramModal(false);\n    setSelectedSwitchForDiagram(null);\n  };\n\n  const handlePrintForm = () => {\n    const printWindow = window.open(\"\", \"_blank\");\n    if (!printWindow) {\n      alert(\"Please allow pop-ups for printing.\");\n      return;\n    }\n\n    const printableHtml = ReactDOMServer.renderToString(\n      <PrintableConnectionForm />\n    );\n\n    const styleTag = `<style>${cssContent}</style>`;\n\n    printWindow.document.write(`\n      <!DOCTYPE html>\n      <html lang=\"en\">\n      <head>\n          <meta charset=\"UTF-8\">\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n          <title>Network Connection Form Print</title>\n          ${styleTag}\n      </head>\n      <body>\n          <div class=\"print-only-container\">\n              ${printableHtml}\n          </div>\n      </body>\n      </html>\n    `);\n    printWindow.document.close();\n\n    printWindow.onload = () => {\n      printWindow.focus();\n      printWindow.print();\n    };\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-100 to-blue-200 font-inter p-4 sm:p-8\">\n      {/* Global Message Box */}\n      {isMessageVisible && (\n        <div className=\"fixed top-4 left-1/2 -translate-x-1/2 bg-blue-500 text-white px-6 py-3 rounded-lg shadow-lg z-50 animate-fade-in-down\">\n          {message}\n        </div>\n      )}\n\n      {/* Switch Diagram Modal */}\n      {showSwitchDiagramModal && selectedSwitchForDiagram && (\n        <SwitchDiagramModal\n          isOpen={showSwitchDiagramModal}\n          onClose={handleCloseSwitchDiagramModal}\n          selectedSwitch={selectedSwitchForDiagram}\n          connections={connections}\n          pcs={pcs}\n          patchPanels={patchPanels} // This line is correct after removing the comment\n          switches={switches}\n        />\n      )}\n\n      {/* Port Status Modal */}\n      {showPortStatusModal && portStatusData && (\n        <PortStatusModal\n          isOpen={showPortStatusModal}\n          onClose={handleClosePortStatusModal}\n          data={portStatusData}\n          entityType={modalEntityType}\n          entityId={modalEntityId}\n          cssContent={cssContent}\n        />\n      )}\n\n      {/* Switch Diagram Modal */}\n      {showSwitchDiagramModal && selectedSwitchForDiagram && (\n        <SwitchDiagramModal\n          isOpen={showSwitchDiagramModal}\n          onClose={handleCloseSwitchDiagramModal}\n          selectedSwitch={selectedSwitchForDiagram}\n          connections={connections} // Pass all connections to find connected PCs\n          pcs={pcs} // Pass PCs to help find PC details\n        />\n      )}\n\n      {/* Main App Content */}\n      <div>\n        <header className=\"mb-8 text-center\">\n          <h1 className=\"text-4xl font-extrabold text-blue-800 tracking-tight sm:text-5xl\">\n            Network Device Documentation\n          </h1>\n          <p className=\"mt-2 text-lg text-gray-600\">\n            Track your network connections from PC to Patch Panel to Switch with\n            ease.\n          </p>\n        </header>\n        <main className=\"max-w-6xl mx-auto bg-white rounded-xl shadow-lg p-6 sm:p-8\">\n          {/* Tab Navigation */}\n          <div className=\"flex border-b border-gray-200 mb-6\">\n            <button\n              className={`py-3 px-6 text-lg font-medium ${\n                activeTab === \"connections\"\n                  ? \"border-b-4 border-blue-600 text-blue-800\"\n                  : \"text-gray-600 hover:text-blue-600\"\n              }`}\n              onClick={() => setActiveTab(\"connections\")}\n            >\n              Connections\n            </button>\n            <button\n              className={`py-3 px-6 text-lg font-medium ${\n                activeTab === \"pcs\"\n                  ? \"border-b-4 border-blue-600 text-blue-800\"\n                  : \"text-gray-600 hover:text-blue-600\"\n              }`}\n              onClick={() => setActiveTab(\"pcs\")}\n            >\n              PCs\n            </button>\n            <button\n              className={`py-3 px-6 text-lg font-medium ${\n                activeTab === \"switches\"\n                  ? \"border-b-4 border-blue-600 text-blue-800\"\n                  : \"text-gray-600 hover:text-blue-600\"\n              }`}\n              onClick={() => setActiveTab(\"switches\")}\n            >\n              Switches\n            </button>\n            <button\n              className={`py-3 px-6 text-lg font-medium ${\n                activeTab === \"patch_panels\"\n                  ? \"border-b-4 border-blue-600 text-blue-800\"\n                  : \"text-gray-600 hover:text-blue-600\"\n              }`}\n              onClick={() => setActiveTab(\"patch_panels\")}\n            >\n              Patch Panels\n            </button>\n            <button\n              className={`py-3 px-6 text-lg font-medium ${\n                activeTab === \"locations\"\n                  ? \"border-b-4 border-blue-600 text-blue-800\"\n                  : \"text-gray-600 hover:text-blue-600\"\n              }`}\n              onClick={() => setActiveTab(\"locations\")}\n            >\n              Locations\n            </button>\n          </div>\n\n          {/* Conditional Tab Content Rendering */}\n          {activeTab === \"connections\" && (\n            <>\n              <section className=\"mb-10 p-6 bg-blue-50 rounded-lg border border-blue-200 shadow-inner\">\n                <h2 className=\"text-2xl font-bold text-blue-700 mb-4\">\n                  Add/Edit Connection\n                </h2>\n                <ConnectionForm\n                  pcs={pcs}\n                  patchPanels={patchPanels}\n                  switches={switches}\n                  onAddConnection={handleAddConnection}\n                  onUpdateConnection={handleUpdateConnection}\n                  editingConnection={editingConnection}\n                  setEditingConnection={setEditingConnection}\n                  onAddEntity={handleAddEntity}\n                  onShowPortStatus={handleShowPortStatus}\n                  locations={locations}\n                />\n              </section>\n\n              <div className=\"text-center mb-6\">\n                <button\n                  onClick={handlePrintForm}\n                  className=\"px-6 py-3 bg-indigo-600 text-white rounded-md shadow-md hover:bg-indigo-700 transition-colors duration-200 flex items-center justify-center mx-auto\"\n                >\n                  <Printer size={20} className=\"mr-2\" /> Print Empty Form\n                </button>\n              </div>\n\n              <section>\n                <h2 className=\"text-2xl font-bold text-blue-700 mb-6\">\n                  All Connections\n                </h2>\n                <ConnectionList\n                  connections={connections}\n                  onDelete={handleDeleteConnection}\n                  onEdit={handleEditConnection}\n                />\n                {connections.length === 0 && (\n                  <p className=\"text-center text-gray-500 text-lg mt-8\">\n                    No connections found. Start by adding one above.\n                  </p>\n                )}\n              </section>\n            </>\n          )}\n\n          {activeTab === \"pcs\" && (\n            <section>\n              <h2 className=\"text-2xl font-bold text-blue-700 mb-6\">All PCs</h2>\n              <PcList\n                pcs={pcs}\n                onAddEntity={handleAddEntity}\n                onUpdateEntity={handleUpdateEntity}\n                onDeleteEntity={handleDeleteEntity}\n              />\n            </section>\n          )}\n\n          {activeTab === \"switches\" && (\n            <section>\n              <h2 className=\"text-2xl font-bold text-blue-700 mb-6\">\n                All Switches\n              </h2>\n              <SwitchList\n                switches={switches}\n                onAddEntity={handleAddEntity}\n                onUpdateEntity={handleUpdateEntity}\n                onDeleteEntity={handleDeleteEntity}\n                onShowPortStatus={handleShowPortStatus}\n                locations={locations}\n                onViewDiagram={handleViewSwitchDiagram}\n              />\n            </section>\n          )}\n\n          {activeTab === \"patch_panels\" && (\n            <section>\n              <h2 className=\"text-2xl font-bold text-blue-700 mb-6\">\n                All Patch Panels\n              </h2>\n              <PatchPanelList\n                patchPanels={patchPanels}\n                onAddEntity={handleAddEntity}\n                onUpdateEntity={handleUpdateEntity}\n                onDeleteEntity={handleDeleteEntity}\n                onShowPortStatus={handleShowPortStatus}\n                locations={locations}\n              />\n            </section>\n          )}\n\n          {activeTab === \"locations\" && (\n            <section>\n              <h2 className=\"text-2xl font-bold text-blue-700 mb-6\">\n                Manage Locations\n              </h2>\n              <div className=\"bg-white p-6 rounded-lg shadow-md border border-blue-200 mb-6\">\n                <h3 className=\"text-xl font-bold text-blue-700 mb-4\">\n                  Add New Location\n                </h3>\n                <form\n                  onSubmit={async (e) => {\n                    e.preventDefault();\n                    const name = e.target.locationName.value;\n                    if (name.trim()) {\n                      await handleAddEntity(\"locations\", { name });\n                      e.target.locationName.value = \"\";\n                    }\n                  }}\n                  className=\"flex space-x-2\"\n                >\n                  <input\n                    type=\"text\"\n                    name=\"locationName\"\n                    placeholder=\"Location Name (e.g., Data Center)\"\n                    className=\"flex-grow p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                    required\n                  />\n                  <button\n                    type=\"submit\"\n                    className=\"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors duration-200\"\n                  >\n                    Add Location\n                  </button>\n                </form>\n              </div>\n\n              <div className=\"space-y-3\">\n                {locations.length > 0 ? (\n                  locations.map((location) => (\n                    <div\n                      key={location.id}\n                      className=\"bg-white rounded-lg shadow-sm border border-gray-100 p-4 flex justify-between items-center\"\n                    >\n                      <span className=\"text-lg font-medium text-gray-800\">\n                        {location.name}\n                      </span>\n                      <button\n                        onClick={() =>\n                          handleDeleteEntity(\"locations\", location.id)\n                        }\n                        className=\"px-3 py-1 text-sm bg-red-600 text-white rounded-md hover:bg-red-700 transition-colors duration-200\"\n                      >\n                        Delete\n                      </button>\n                    </div>\n                  ))\n                ) : (\n                  <p className=\"text-center text-gray-500 text-lg\">\n                    No locations added yet. Add some to get started!\n                  </p>\n                )}\n              </div>\n            </section>\n          )}\n        </main>\n        <footer className=\"mt-12 text-center text-gray-500 text-sm\">\n          <p>&copy; 2025 Network Doc App. All rights reserved.</p>\n        </footer>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}