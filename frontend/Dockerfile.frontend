# frontend/Dockerfile.frontend
# Dockerfile for the React frontend application.

# Use an official Node.js runtime as a parent image
FROM node:18-alpine

# Set the working directory in the container
WORKDIR /app

# Copy package.json and package-lock.json to install dependencies
# This leverages Docker cache if dependencies haven't changed
COPY package*.json ./

# Install dependencies
RUN npm install

# Copy the rest of the application code
COPY . .

# Build the React app for production (optional, could also serve dev build for simplicity)
# If you want to serve a production build, you'd typically use a web server like Nginx
# and uncomment this line, then adjust the CMD.
# RUN npm run build

# Expose the port that the React development server will run on
EXPOSE 3000

# Command to run the React development server (handled by docker-compose)
# CMD ["npm", "start"]
